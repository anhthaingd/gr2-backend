[
  {
    "cve_id": "CVE-2024-0519",
    "cve_name": "",
    "cve_description": "Out of bounds memory access in V8 in Google Chrome prior to 120.0.6099.224 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)",
    "cve_category": [],
    "cve_published_at": "Published 2024-01-16 22:15:38",
    "cve_updated_at": "Updated 2024-01-16 23:12:38",
    "cve_required_action": "",
    "cvss": {},
    "cpe": [],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-6549",
    "cve_name": "",
    "cve_description": "Improper Restriction of Operations within the Bounds of a Memory Buffer in NetScaler ADC and NetScaler Gateway allows Unauthenticated Denial of Service",
    "cve_category": ["Overflow", "Denial of service"],
    "cve_published_at": "Published 2024-01-17 21:15:12",
    "cve_updated_at": "Updated 2024-01-18 03:15:59",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.2",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H",
      "exploitability_score": "3.9",
      "impact_score": "4.2",
      "c": "secure@citrix.com"
    },
    "cpe": [],
    "cwe": [
      {
        "cwe_id": "CWE-119",
        "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "cwe_description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.",
        "cwe_extended_description": "Certain languages allow direct addressing of memory locations and do not automatically ensure that these locations are valid for the memory buffer that is being referenced. This can cause read or write operations to be performed on memory locations that may be associated with other variables, data structures, or internal program data.\n\nAs a result, an attacker may be able to execute arbitrary code, alter the intended control flow, read sensitive information, or cause the system to crash.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-22991",
            "name": "CVE-2021-22991",
            "des": "Incorrect URI normalization in application traffic product leads to buffer overflow, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-29557",
            "name": "CVE-2020-29557",
            "des": "Buffer overflow in Wi-Fi router web interface, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2550",
            "name": "CVE-2009-2550",
            "des": "Classic stack-based buffer overflow in media player using a long entry in a playlist"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2403",
            "name": "CVE-2009-2403",
            "des": "Heap-based buffer overflow in media player using a long entry in a playlist"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0689",
            "name": "CVE-2009-0689",
            "des": "large precision value in a format string triggers overflow"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0690",
            "name": "CVE-2009-0690",
            "des": "negative offset value leads to out-of-bounds read"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1532",
            "name": "CVE-2009-1532",
            "des": "malformed inputs cause accesses of uninitialized or previously-deleted objects, leading to memory corruption"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1528",
            "name": "CVE-2009-1528",
            "des": "chain: lack of synchronization leads to memory corruption"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-29529",
            "name": "CVE-2021-29529",
            "des": "Chain: machine-learning product can have a heap-based buffer overflow (CWE-122) when some integer-oriented bounds are calculated by using ceiling() and floor() on floating point values (CWE-1339)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0558",
            "name": "CVE-2009-0558",
            "des": "attacker-controlled array index leads to code execution"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0269",
            "name": "CVE-2009-0269",
            "des": "chain: -1 value from a function call was intended to indicate an error, but is used as an array index instead."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0566",
            "name": "CVE-2009-0566",
            "des": "chain: incorrect calculations lead to incorrect pointer dereference and memory corruption"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1350",
            "name": "CVE-2009-1350",
            "des": "product accepts crafted messages that lead to a dereference of an arbitrary pointer"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0191",
            "name": "CVE-2009-0191",
            "des": "chain: malformed input causes dereference of uninitialized memory"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4113",
            "name": "CVE-2008-4113",
            "des": "OS kernel trusts userland-supplied length value, allowing reading of sensitive information"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1513",
            "name": "CVE-2005-1513",
            "des": "Chain: integer overflow in securely-coded mail program leads to buffer overflow. In 2005, this was regarded as unrealistic to exploit, but in 2020, it was rediscovered to be easier to exploit due to evolutions of the technology."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0542",
            "name": "CVE-2003-0542",
            "des": "buffer overflow involving a regular expression with a large number of captures"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2017-1000121",
            "name": "CVE-2017-1000121",
            "des": "chain: unchecked message size metadata allows integer overflow (CWE-190) leading to buffer overflow (CWE-119)."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, many languages that perform their own memory management, such as Java and Perl, are not subject to buffer overflows. Other languages, such as Ada and C#, typically provide overflow protection, but the protection can be disabled by the programmer.",
              "Be wary that a language's interface to native code may still be subject to overflows, even if the language itself is theoretically safe."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Examples include the Safe C String Library (SafeStr) by Messier and Viega [REF-57], and the Strsafe.h library from Microsoft [REF-56]. These libraries provide safer versions of overflow-prone string-handling functions.",
              "Note: This is not a complete solution, since many buffer overflows are not related to strings."
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking.",
              "D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Consider adhering to the following rules when allocating and managing an application's memory:"
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code.",
              "Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as \"rebasing\" (for Windows) and \"prelinking\" (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking.",
              "For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].",
              "Note: These techniques do not provide a complete solution. For instance, exploits frequently use a bug that discloses memory addresses in order to maximize reliability of code execution [REF-1337]. It has also been shown that a side-channel attack can bypass ASLR [REF-1333]"
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment.",
              "For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].",
              "Note: This is not a complete solution, since buffer overflows could be used to overwrite nearby variables to modify the software's state in dangerous ways. In addition, it cannot be used in cases in which self-modifying code is required. Finally, an attack could still cause a denial of service, since the typical response is to exit the application."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Replace unbounded copy functions with analogous functions that support length arguments, such as strcpy with strncpy. Create these if they are not available.",
              "Note: This approach is still susceptible to calculation errors, including issues such as off-by-one errors (CWE-193) and incorrectly calculating buffer lengths (CWE-131)."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Automated static analysis generally does not account for environmental considerations when reporting out-of-bounds memory operations. This can make it difficult for users to determine which warnings should be investigated first. For example, an analysis tool might report buffer overflows that originate from command line arguments in a program that is not expected to run with setuid or other special privileges.",
              "Effectiveness: High",
              "Note: Detection techniques for buffer-related errors are more mature than for most other weakness types."
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results."
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-10",
            "capec_name": "Buffer Overflow via Environment Variables",
            "capec_description": "This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the adversary finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.",
            "capec_extended_description": "Although the focus of this attack is putting excessive content into an environment variable that is loaded into a buffer, environment variables can be used to assist a classic buffer overflow attack as well. In the case where the buffer used in a traditional buffer overflow attack is not large enough to store the adversary's shell code, they will store the shell code in an environment variable and attempt to return to its address, rather than back into the data they wrote to the buffer.",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Do not expose environment variable to the user.",
              "Do not use untrusted data in your environment variables.",
              "Use a language or compiler that performs automatic bounds checking",
              "There are tools such as Sharefuzz [REF-2] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-302",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-99",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-100",
            "capec_name": "Overflow Buffers",
            "capec_description": "Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an adversary. As a consequence, an adversary is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the adversaries' choice.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Use a language or compiler that performs automatic bounds checking.",
              "Use secure functions not vulnerable to buffer overflow.",
              "If you have to use dangerous functions, make sure that you do boundary checking.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Use OS-level preventative functionality. Not a complete solution.",
              "Utilize static source code analysis tools to identify potential buffer overflow weaknesses in the software."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-119",
              "CWE-131",
              "CWE-129",
              "CWE-805",
              "CWE-680"
            ]
          },
          {
            "capec_id": "CAPEC-123",
            "capec_name": "Buffer Manipulation",
            "capec_description": "An adversary manipulates an application's interaction with a buffer in an attempt to read or modify data they shouldn't have access to. Buffer attacks are distinguished in that it is the buffer space itself that is the target of the attack rather than any code responsible for interpreting the content of the buffer. In virtually all buffer attacks the content that is placed in the buffer is immaterial. Instead, most buffer attacks involve retrieving or providing more input than can be stored in the allocated buffer, resulting in the reading or overwriting of other unintended program memory.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "To help protect an application from buffer manipulation attacks, a number of potential mitigations can be leveraged. Before starting the development of the application, consider using a code language (e.g., Java) or compiler that limits the ability of developers to act beyond the bounds of a buffer. If the chosen language is susceptible to buffer related issues (e.g., C) then consider using secure functions instead of those vulnerable to buffer manipulations. If a potentially dangerous function must be used, make sure that proper boundary checking is performed. Additionally, there are often a number of compiler-based mechanisms (e.g., StackGuard, ProPolice and the Microsoft Visual Studio /GS flag) that can help identify and protect against potential buffer issues. Finally, there may be operating system level preventative functionality that can be applied."
            ],
            "related_cwe": ["CWE-119"]
          },
          {
            "capec_id": "CAPEC-14",
            "capec_name": "Client-side Injection-induced Buffer Overflow",
            "capec_description": "This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service. This hostile service is created to deliver the correct content to the client software. For example, if the client-side application is a browser, the service will host a webpage that the browser loads.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "The client software should not install untrusted code from a non-authenticated server.",
              "The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers.",
              "Perform input validation for length of buffer inputs.",
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Ensure all buffer uses are consistently bounds-checked.",
              "Use OS-level preventative functionality. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-353",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-24",
            "capec_name": "Filter Failure through Buffer Overflow",
            "capec_description": "In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs.",
              "Pre-design: Use a language or compiler that performs automatic bounds checking.",
              "Pre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Operational: Use OS-level preventative functionality. Not a complete solution.",
              "Design: Use an abstraction library to abstract away risky APIs. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-119",
              "CWE-118",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-42",
            "capec_name": "MIME Conversion",
            "capec_description": "An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Stay up to date with third party vendor patches",
              "Disable the 7 to 8 bit conversion. This can be done by removing the F=9 flag from all Mailer specifications in the sendmail.cf file.\n\nFor example, a sendmail.cf file with these changes applied should look similar to (depending on your system and configuration):\n\nMlocal, P=/usr/libexec/mail.local, F=lsDFMAw5:/|@qrmn, S=10/30, R=20/40,\nT=DNS/RFC822/X-Unix,\nA=mail -d $u\n\nMprog, P=/bin/sh, F=lsDFMoqeu, S=10/30, R=20/40,\nD=$z:/,\nT=X-Unix,\nA=sh -c $u\n\nThis can be achieved for the \"Mlocal\" and \"Mprog\" Mailers by modifying the \".mc\" file to include the following lines:\n\ndefine(`LOCAL_MAILER_FLAGS',\nifdef(`LOCAL_MAILER_FLAGS',\n`translit(LOCAL_MAILER_FLAGS, `9')',\n`rmn'))\n\ndefine(`LOCAL_SHELL_FLAGS',\nifdef(`LOCAL_SHELL_FLAGS',\n`translit(LOCAL_SHELL_FLAGS, `9')',\n`eu'))\n\nand then rebuilding the sendmail.cf file using m4(1).\n\nFrom \"Exploiting Software\", please see reference below.",
              "Use the sendmail restricted shell program (smrsh)",
              "Use mail.local"
            ],
            "related_cwe": ["CWE-120", "CWE-119", "CWE-74", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-44",
            "capec_name": "Overflow Binary Resource File",
            "capec_description": "An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the adversary access to the execution stack and execute arbitrary code in the target process.",
            "capec_extended_description": "This attack pattern is a variant of standard buffer overflow attack using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The adversary is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application for the victim to download. The adversary then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow.",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Perform appropriate bounds checking on all buffers.",
              "Design: Enforce principle of least privilege",
              "Design: Static code analysis",
              "Implementation: Execute program in less trusted process space environment, do not allow lower integrity processes to write to higher integrity processes",
              "Implementation: Keep software patched to ensure that known vulnerabilities are not available for adversaries to target on host."
            ],
            "related_cwe": ["CWE-120", "CWE-119", "CWE-697"]
          },
          {
            "capec_id": "CAPEC-45",
            "capec_name": "Buffer Overflow via Symbolic Links",
            "capec_description": "This type of attack leverages the use of symbolic links to cause buffer overflows. An adversary can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource.",
              "Because Symlink can be modified by an adversary, make sure that the ones you read are located in protected directories.",
              "Pay attention to the resource pointed to by your symlink links (See attack pattern named \"Forced Symlink race\"), they can be replaced by malicious resources.",
              "Always check the size of the input data before copying to a buffer.",
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Use OS-level preventative functionality. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-285",
              "CWE-302",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-46",
            "capec_name": "Overflow Variables and Tags",
            "capec_description": "This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The adversary crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Use OS-level preventative functionality. Not a complete solution.",
              "Do not trust input data from user. Validate all user input."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-47",
            "capec_name": "Buffer Overflow via Parameter Expansion",
            "capec_description": "In this attack, the target software is given input that the adversary knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system"
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-119",
              "CWE-118",
              "CWE-130",
              "CWE-131",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-8",
            "capec_name": "Buffer Overflow in an API Call",
            "capec_description": "This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An adversary who has knowledge of known vulnerable libraries or shared code can easily target software that makes use of these libraries. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use a language or compiler that performs automatic bounds checking.",
              "Use secure functions not vulnerable to buffer overflow.",
              "If you have to use dangerous functions, make sure that you do boundary checking.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Use OS-level preventative functionality. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-119",
              "CWE-118",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-9",
            "capec_name": "Buffer Overflow in Local Command-Line Utilities",
            "capec_description": "This attack targets command-line utilities available in a number of shells. An adversary can leverage a vulnerability found in a command-line utility to escalate privilege to root.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow.",
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Operational: Use OS-level preventative functionality. Not a complete solution.",
              "Apply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack.",
              "Do not unnecessarily expose services."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-6548",
    "cve_name": "",
    "cve_description": "Improper Control of Generation of Code ('Code Injection') in NetScaler ADC and NetScaler Gateway allows an attacker with access to NSIP, CLIP or SNIP with management interface to perform Authenticated (low privileged) remote code execution on Management Interface.",
    "cve_category": ["Execute code"],
    "cve_published_at": "Published 2024-01-17 20:15:51",
    "cve_updated_at": "Updated 2024-01-18 03:15:59",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.5",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
      "exploitability_score": "2.1",
      "impact_score": "3.4",
      "source": "secure@citrix.com"
    },
    "cpe": [],
    "cwe": [
      {
        "cwe_id": "CWE-94",
        "cwe_name": "Improper Control of Generation of Code ('Code Injection')",
        "cwe_description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "cwe_extended_description": "When a product allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the product. Such an alteration could lead to arbitrary code execution.\n\nInjection problems encompass a wide variety of issues -- all mitigated in very different ways. For this reason, the most effective way to discuss these weaknesses is to note the distinct features which classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed. The most classic instantiations of this category of weakness are SQL injection and format string vulnerabilities.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-2054",
            "name": "CVE-2022-2054",
            "des": "Python compiler uses eval() to execute malicious strings as Python code."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-22204",
            "name": "CVE-2021-22204",
            "des": "Chain: regex in EXIF processor code does not correctly determine where a string ends (CWE-625), enabling eval injection (CWE-95), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-8218",
            "name": "CVE-2020-8218",
            "des": "\"Code injection\" in VPN product, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5071",
            "name": "CVE-2008-5071",
            "des": "Eval injection in PHP program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1750",
            "name": "CVE-2002-1750",
            "des": "Eval injection in Perl program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5305",
            "name": "CVE-2008-5305",
            "des": "Eval injection in Perl program using an ID that should only contain hyphens and numbers."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1752",
            "name": "CVE-2002-1752",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1753",
            "name": "CVE-2002-1753",
            "des": "Eval injection in Perl program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1527",
            "name": "CVE-2005-1527",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2837",
            "name": "CVE-2005-2837",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1921",
            "name": "CVE-2005-1921",
            "des": "MFV. code injection into PHP eval statement using nested constructs that should not be nested."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2498",
            "name": "CVE-2005-2498",
            "des": "MFV. code injection into PHP eval statement using nested constructs that should not be nested."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3302",
            "name": "CVE-2005-3302",
            "des": "Code injection into Python eval statement from a field in a formatted file."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-1253",
            "name": "CVE-2007-1253",
            "des": "Eval injection in Python program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1471",
            "name": "CVE-2001-1471",
            "des": "chain: Resultant eval injection. An invalid value prevents initialization of variables, which can be modified by attacker and later injected into PHP eval statement."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0495",
            "name": "CVE-2002-0495",
            "des": "Perl code directly injected into CGI library file from parameters to another CGI program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1876",
            "name": "CVE-2005-1876",
            "des": "Direct PHP code injection into supporting template file."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1894",
            "name": "CVE-2005-1894",
            "des": "Direct code injection into PHP script that can be accessed by attacker."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0395",
            "name": "CVE-2003-0395",
            "des": "PHP code from User-Agent HTTP header directly inserted into log file implemented as PHP script."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Refactor your program so that you do not have to dynamically generate code."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Run your code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which code can be executed by your product.",
              "Examples include the Unix chroot jail and AppArmor. In general, managed code may provide some protection.",
              "This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be subject to compromise.",
              "Be careful to avoid CWE-243 and other weaknesses related to jails."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "To reduce the likelihood of code injection, use stringent allowlists that limit which constructs are allowed. If you are dynamically constructing code that invokes a function, then verifying that the input is alphanumeric might be insufficient. An attacker might still be able to reference a dangerous function that you did not intend to allow, such as system(), exec(), or exit()."
            ]
          },
          {
            "subheading": "Phase: Testing",
            "des": [
              "Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible."
            ]
          },
          {
            "subheading": "Phase: Testing",
            "des": [
              "Use dynamic tools and techniques that interact with the product using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The product's operation may slow down, but it should not become unstable, crash, or generate incorrect results."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run the code in an environment that performs automatic taint propagation and prevents any command execution that uses tainted variables, such as Perl's \"-T\" switch. This will force the program to perform validation steps that remove the taint, although you must be careful to correctly validate your inputs so that you do not accidentally mark dangerous inputs as untainted (see CWE-183 and CWE-184)."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run the code in an environment that performs automatic taint propagation and prevents any command execution that uses tainted variables, such as Perl's \"-T\" switch. This will force the program to perform validation steps that remove the taint, although you must be careful to correctly validate your inputs so that you do not accidentally mark dangerous inputs as untainted (see CWE-183 and CWE-184)."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-242",
            "capec_name": "Code Injection",
            "capec_description": "An adversary exploits a weakness in input validation on the target to inject new code into that which is currently executing. This differs from code inclusion in that code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Utilize strict type, character, and encoding enforcement",
              "Ensure all input content that is delivered to client is sanitized against an acceptable content specification.",
              "Perform input validation for all content.",
              "Enforce regular patching of software."
            ],
            "related_cwe": ["CWE-94"]
          },
          {
            "capec_id": "CAPEC-35",
            "capec_name": "Leverage Executable Code in Non-Executable Files",
            "capec_description": "An attack of this type exploits a system's trust in configuration and resource files. When the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege",
              "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
              "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables.",
              "Implementation: Implement host integrity monitoring to detect any unwanted altering of configuration files.",
              "Implementation: Ensure that files that are not required to execute, such as configuration files, are not over-privileged, i.e. not allowed to execute."
            ],
            "related_cwe": [
              "CWE-94",
              "CWE-96",
              "CWE-95",
              "CWE-97",
              "CWE-272",
              "CWE-59",
              "CWE-282",
              "CWE-270"
            ]
          },
          {
            "capec_id": "CAPEC-77",
            "capec_name": "Manipulating User-Controlled Variables",
            "capec_description": "This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An adversary can override variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the adversary can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Do not allow override of global variables and do Not Trust Global Variables.\n\nIf the register_globals option is enabled, PHP will create global variables for each GET, POST, and cookie variable included in the HTTP request. This means that a malicious user may be able to set variables unexpectedly. For instance make sure that the server setting for PHP does not expose global variables.",
              "A software system should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary.",
              "Separate the presentation layer and the business logic layer. Variables at the business logic layer should not be exposed at the presentation layer. This is to prevent computation of business logic from user controlled input data.",
              "Use encapsulation when declaring your variables. This is to lower the exposure of your variables.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should be rejected by the program."
            ],
            "related_cwe": [
              "CWE-15",
              "CWE-94",
              "CWE-96",
              "CWE-285",
              "CWE-302",
              "CWE-473",
              "CWE-1321"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-35082",
    "cve_name": "",
    "cve_description": "An authentication bypass vulnerability in Ivanti EPMM 11.10 and older, allows unauthorized users to access restricted functionality or resources of the application without proper authentication. This vulnerability is unique to CVE-2023-35078 announced earlier.",
    "cve_category": ["Bypass", "Gain privilege"],
    "cve_published_at": "Published 2023-08-15 16:15:12",
    "cve_updated_at": "Updated 2023-08-22 02:16:31",
    "cve_required_action": "",
    "cvss": {
      "base_score": "10.0",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "6.0",
      "source": "support@hackerone.com"
    },
    "cpe": [
      {
        "version": "Ivanti » Endpoint Manager Mobile Versions up to, including, (<=) 11.10.0",
        "detail": "cpe:2.3:a:ivanti:endpoint_manager_mobile:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-287",
        "cwe_name": "Improper Authentication",
        "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-35248",
            "name": "CVE-2022-35248",
            "des": "Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-36436",
            "name": "CVE-2022-36436",
            "des": "Python-based authentication proxy does not enforce password authentication during the initial handshake, allowing the client to bypass authentication by specifying a 'None' authentication type."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30034",
            "name": "CVE-2022-30034",
            "des": "Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29951",
            "name": "CVE-2022-29951",
            "des": "TCP-based protocol in Programmable Logic Controller (PLC) has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29952",
            "name": "CVE-2022-29952",
            "des": "Condition Monitor uses a protocol that does not require authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30313",
            "name": "CVE-2022-30313",
            "des": "Safety Instrumented System uses proprietary TCP protocols with no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30317",
            "name": "CVE-2022-30317",
            "des": "Distributed Control System (DCS) uses a protocol that has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-33139",
            "name": "CVE-2022-33139",
            "des": "SCADA system only uses client-side authentication, allowing adversaries to impersonate other users."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-3116",
            "name": "CVE-2021-3116",
            "des": "Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21972",
            "name": "CVE-2021-21972",
            "des": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-37415",
            "name": "CVE-2021-37415",
            "des": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-13927",
            "name": "CVE-2020-13927",
            "des": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-35395",
            "name": "CVE-2021-35395",
            "des": "Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-34523",
            "name": "CVE-2021-34523",
            "des": "Mail server does not properly check an access token before executing a Powershell command, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-12812",
            "name": "CVE-2020-12812",
            "des": "Chain: user is not prompted for a second authentication factor (CWE-287) when changing the case of their username (CWE-178), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-10148",
            "name": "CVE-2020-10148",
            "des": "Authentication bypass by appending specific parameters and values to a URI, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0688",
            "name": "CVE-2020-0688",
            "des": "Mail server does not generate a unique key during installation, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2017-14623",
            "name": "CVE-2017-14623",
            "des": "LDAP Go package allows authentication bypass using an empty password, causing an unauthenticated LDAP bind"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3421",
            "name": "CVE-2009-3421",
            "des": "login script for guestbook allows bypassing authentication by setting a \"login_ok\" parameter to 1."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2382",
            "name": "CVE-2009-2382",
            "des": "admin script allows authentication bypass by setting a cookie value to \"LOGGEDIN\"."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1048",
            "name": "CVE-2009-1048",
            "des": "VOIP product allows authentication bypass using 127.0.0.1 in the Host header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2213",
            "name": "CVE-2009-2213",
            "des": "product uses default \"Allow\" action, instead of default deny, leading to authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2168",
            "name": "CVE-2009-2168",
            "des": "chain: redirect without exit (CWE-698) leads to resultant authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3107",
            "name": "CVE-2009-3107",
            "des": "product does not restrict access to a listening port for a critical service, allowing authentication to be bypassed."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1596",
            "name": "CVE-2009-1596",
            "des": "product does not properly implement a security-related configuration setting, allowing authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2422",
            "name": "CVE-2009-2422",
            "des": "authentication routine returns \"nil\" instead of \"false\" in some situations, allowing authentication bypass using an invalid username."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3232",
            "name": "CVE-2009-3232",
            "des": "authentication update script does not properly handle when admin does not select any authentication modules, allowing authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3231",
            "name": "CVE-2009-3231",
            "des": "use of LDAP authentication with anonymous binds causes empty password to result in successful authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3435",
            "name": "CVE-2005-3435",
            "des": "product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0408",
            "name": "CVE-2005-0408",
            "des": "chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use an authentication framework or library such as the OWASP ESAPI Authentication feature."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis is useful for detecting certain types of authentication. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authentication libraries.",
              "Generally, automated static analysis tools have difficulty detecting custom authentication schemes. In addition, the software's design may include some functionality that is accessible to any user and does not require an established identity; an automated technique that detects the absence of authentication may report false positives.",
              "Effectiveness: Limited"
            ]
          },
          {
            "subheading": "Manual Static Analysis",
            "des": [
              "This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.",
              "Manual static analysis is useful for evaluating the correctness of custom authentication mechanisms.",
              "Effectiveness: High",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-114",
            "capec_name": "Authentication Abuse",
            "capec_description": "An attacker obtains unauthorized access to an application, service or device either through knowledge of the inherent weaknesses of an authentication mechanism, or by exploiting a flaw in the authentication scheme's implementation. In such an attack an authentication mechanism is functioning but a carefully controlled sequence of events causes the mechanism to grant access to the attacker.",
            "capec_extended_description": "This attack may exploit assumptions made by the target's authentication procedures, such as assumptions regarding trust relationships or assumptions regarding the generation of secret values. This attack differs from Authentication Bypass attacks in that Authentication Abuse allows the attacker to be certified as a valid user through illegitimate means, while Authentication Bypass allows the user to access protected material without ever being certified as an authenticated user. This attack does not rely on prior sessions established by successfully authenticating users, as relied upon for the \"Exploitation of Session Variables, Resource IDs and other Trusted Credentials\" attack patterns.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287", "CWE-1244"]
          },
          {
            "capec_id": "CAPEC-115",
            "capec_name": "Authentication Bypass",
            "capec_description": "An attacker gains access to application, service, or device with the privileges of an authorized or privileged user by evading or circumventing an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place.",
            "capec_extended_description": "This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to get to secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-151",
            "capec_name": "Identity Spoofing",
            "capec_description": "Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials.",
            "capec_extended_description": "Alternatively, an adversary may intercept a message from a legitimate sender and attempt to make it look like the message comes from them without changing its content. The latter form of this attack can be used to hijack credentials from legitimate users. Identity Spoofing attacks need not be limited to transmitted messages - any resource that is associated with an identity (for example, a file with a signature) can be the target of an attack where the adversary attempts to change the apparent identity. This attack differs from Content Spoofing attacks where the adversary does not wish to change the apparent identity of the message but instead wishes to change what the message says. In an Identity Spoofing attack, the adversary is attempting to change the identity of the content.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Medium",
            "mitigations": [
              "Employ robust authentication processes (e.g., multi-factor authentication)."
            ],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-194",
            "capec_name": "Fake the Source of Data",
            "capec_description": "An adversary takes advantage of improper authentication to provide data or services under a falsified identity. The purpose of using the falsified identity may be to prevent traceability of the provided data or to assume the rights granted to another individual. One of the simplest forms of this attack would be the creation of an email message with a modified \"From\" field in order to appear that the message was sent from someone other than the actual sender. The root of the attack (in this case the email system) fails to properly authenticate the source and this results in the reader incorrectly performing the instructed action. Results of the attack vary depending on the details of the attack, but common results include privilege escalation, obfuscation of other attacks, and data corruption/manipulation.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-22",
            "capec_name": "Exploiting Trust in Client",
            "capec_description": "An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system.",
              "Design: Do not rely on client validation or encoding for security purposes.",
              "Design: Utilize digital signatures to increase authentication assurance.",
              "Design: Utilize two factor authentication to increase authentication assurance.",
              "Implementation: Perform input validation for all remote content."
            ],
            "related_cwe": [
              "CWE-290",
              "CWE-287",
              "CWE-20",
              "CWE-200",
              "CWE-693"
            ]
          },
          {
            "capec_id": "CAPEC-57",
            "capec_name": "Utilizing REST's Trust in the System Resource to Obtain Sensitive Data",
            "capec_description": "This attack utilizes a REST(REpresentational State Transfer)-style applications' trust in the system resources and environment to obtain sensitive data once SSL is terminated.",
            "capec_extended_description": "Rest applications premise is that they leverage existing infrastructure to deliver web services functionality. An example of this is a Rest application that uses HTTP Get methods and receives a HTTP response with an XML document. These Rest style web services are deployed on existing infrastructure such as Apache and IIS web servers with no SOAP stack required.\n\nUnfortunately from a security standpoint, there frequently is no interoperable identity security mechanism deployed, so Rest developers often fall back to SSL to deliver security. In large data centers, SSL is typically terminated at the edge of the network - at the firewall, load balancer, or router. Once the SSL is terminated the HTTP request is in the clear (unless developers have hashed or encrypted the values, but this is rare). The adversary can utilize a sniffer such as Wireshark to snapshot the credentials, such as username and password that are passed in the clear once SSL is terminated. Once the adversary gathers these credentials, they can submit requests to the web service provider just as authorized user do. There is not typically an authentication on the client side, beyond what is passed in the request itself so once this is compromised, then this is generally sufficient to compromise the service's authentication scheme.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Very High",
            "mitigations": [
              "Implementation: Implement message level security such as HMAC in the HTTP communication",
              "Design: Utilize defense in depth, do not rely on a single security mechanism like SSL",
              "Design: Enforce principle of least privilege"
            ],
            "related_cwe": ["CWE-300", "CWE-287", "CWE-693"]
          },
          {
            "capec_id": "CAPEC-593",
            "capec_name": "Session Hijacking",
            "capec_description": "This type of attack involves an adversary that exploits weaknesses in an application's use of sessions in performing authentication. The adversary is able to steal or manipulate an active session and use it to gain unathorized access to the application.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Properly encrypt and sign identity tokens in transit, and use industry standard session key generation mechanisms that utilize high amount of entropy to generate the session key. Many standard web and application servers will perform this task on your behalf. Utilize a session timeout for all sessions. If the user does not explicitly logout, terminate their session after this period of inactivity. If the user logs back in then a new session key should be generated."
            ],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-633",
            "capec_name": "Token Impersonation",
            "capec_description": "An adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity, and not the response that blocks the adversary.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287", "CWE-1270"]
          },
          {
            "capec_id": "CAPEC-650",
            "capec_name": "Upload a Web Shell to a Web Server",
            "capec_description": "By exploiting insufficient permissions, it is possible to upload a web shell to a web server in such a way that it can be executed remotely. This shell can have various capabilities, thereby acting as a \"gateway\" to the underlying web server. The shell might execute at the higher permission level of the web server, providing the ability the execute malicious code at elevated levels.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "High",
            "mitigations": [
              "Make sure your web server is up-to-date with all patches to protect against known vulnerabilities.",
              "Ensure that the file permissions in directories on the web server from which files can be execute is set to the \"least privilege\" settings, and that those directories contents is controlled by an allowlist."
            ],
            "related_cwe": ["CWE-287", "CWE-553"]
          },
          {
            "capec_id": "CAPEC-94",
            "capec_name": "Adversary in the Middle (AiTM)",
            "capec_description": "An adversary targets the communication between two components (typically client and server), in order to alter or obtain data from transactions. A general approach entails the adversary placing themself within the communication channel between the two components.",
            "capec_extended_description": "Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first flows through the adversary, who has the opportunity to observe or alter it, before being passed on to the intended recipient as if it was never observed. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for these attacks yields an implicit lack of trust in communication or identify between two components.\n\nThese attacks differ from Sniffing Attacks (CAPEC-157) since these attacks often modify the communications prior to delivering it to the intended recipient.",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Ensure Public Keys are signed by a Certificate Authority",
              "Encrypt communications using cryptography (e.g., SSL/TLS)",
              "Use Strong mutual authentication to always fully authenticate both ends of any communications channel.",
              "Exchange public keys using a secure channel"
            ],
            "related_cwe": [
              "CWE-300",
              "CWE-290",
              "CWE-593",
              "CWE-287",
              "CWE-294"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2018-15133",
    "cve_name": "",
    "cve_description": "In Laravel Framework through 5.5.40 and 5.6.x through 5.6.29, remote code execution might occur as a result of an unserialize call on a potentially untrusted X-XSRF-TOKEN value. This involves the decrypt method in Illuminate/Encryption/Encrypter.php and PendingBroadcast in gadgetchains/Laravel/RCE/3/chain.php in phpggc. The attacker must know the application key, which normally would never occur, but could happen if the attacker previously had privileged access or successfully accomplished a previous attack.",
    "cve_category": ["Cross-site request forgery (CSRF)", "Execute code"],
    "cve_published_at": "Published 2018-08-09 19:29:00",
    "cve_updated_at": "Updated 2024-01-17 02:00:02",
    "cve_required_action": "",
    "cvss": {
      "base_score": "6.8",
      "base_severity": "MEDIUM",
      "cvss_vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
      "exploitability_score": "8.6",
      "impact_score": "6.4",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Laravel » Laravel Versions from including (>=) 5.6.0 and up to, including, (<=) 5.6.29",
        "detail": "cpe:2.3:a:laravel:laravel:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Laravel » Laravel Versions up to, including, (<=) 5.5.40",
        "detail": "cpe:2.3:a:laravel:laravel:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-502",
        "cwe_name": "Deserialization of Untrusted Data",
        "cwe_description": "The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.",
        "cwe_extended_description": "It is often convenient to serialize objects for communication or to save them for later use. However, deserialized data or code can often be modified without using the provided accessor functions if it does not use cryptography to protect itself. Furthermore, any cryptography would still be client-side security -- which is a dangerous security assumption.\n\nData that is untrusted can not be trusted to be well-formed.\n\nWhen developers place no restrictions on \"gadget chains,\" or series of instances and method invocations that can self-execute during the deserialization process (i.e., before the object is returned to the caller), it is sometimes possible for attackers to leverage them to perform unauthorized actions, like generating a shell.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-12799",
            "name": "CVE-2019-12799",
            "des": "chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2015-8103",
            "name": "CVE-2015-8103",
            "des": "Deserialization issue in commonly-used Java library allows remote execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2015-4852",
            "name": "CVE-2015-4852",
            "des": "Deserialization issue in commonly-used Java library allows remote execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2013-1465",
            "name": "CVE-2013-1465",
            "des": "Use of PHP unserialize function on untrusted input allows attacker to modify application configuration."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-3527",
            "name": "CVE-2012-3527",
            "des": "Use of PHP unserialize function on untrusted input in content management system might allow code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-0911",
            "name": "CVE-2012-0911",
            "des": "Use of PHP unserialize function on untrusted input in content management system allows code execution using a crafted cookie value."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-0911",
            "name": "CVE-2012-0911",
            "des": "Content management system written in PHP allows unserialize of arbitrary objects, possibly allowing code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2011-2520",
            "name": "CVE-2011-2520",
            "des": "Python script allows local users to execute code via pickled data."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-4406",
            "name": "CVE-2012-4406",
            "des": "Unsafe deserialization using pickle in a Python script."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0791",
            "name": "CVE-2003-0791",
            "des": "Web browser allows execution of native methods via a crafted string to a JavaScript function that deserializes the string."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "If available, use the signing/sealing features of the programming language to assure that deserialized data has not been tainted. For example, a hash-based message authentication code (HMAC) could be used to ensure that data has not been modified."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When deserializing data, populate a new object rather than just deserializing. The result is that the data flows through safe input validation and that the functions are safe."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Explicitly define a final object() to prevent deserialization."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "Make fields transient to protect them from deserialization.",
              "An attempt to serialize and then deserialize a class containing transient fields will result in NULLs where the transient data should be. This is an excellent way to prevent time, environment-based, or sensitive variables from being carried over and used improperly."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. This limits the potential for unintended or unauthorized types and gadgets to be leveraged by the attacker. Add only acceptable classes to an allowlist. Note: new gadgets are constantly being discovered, so this alone is not a sufficient mitigation."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-586",
            "capec_name": "Object Injection",
            "capec_description": "An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Implementation: Validate object before deserialization process",
              "Design: Limit which types can be deserialized.",
              "Implementation: Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. Use an allowlist of acceptable classes.",
              "Implementation: Keep session state on the server, when possible."
            ],
            "related_cwe": ["CWE-502"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2024-21887",
    "cve_name": "",
    "cve_description": "A command injection vulnerability in web components of Ivanti Connect Secure (9.x, 22.x) and Ivanti Policy Secure (9.x, 22.x) allows an authenticated administrator to send specially crafted requests and execute arbitrary commands on the appliance.",
    "cve_category": [],
    "cve_published_at": "Published 2024-01-12 17:15:10",
    "cve_updated_at": "Updated 2024-01-13 02:00:01",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.1",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H",
      "exploitability_score": "2.3",
      "impact_score": "6.0",
      "source": "support@hackerone.com"
    },
    "cpe": [
      {
        "version": "Ivanti » Connect Secure » Version: 22.1 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.2 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R16.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r16.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R16 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r16:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R15 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r15:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.2:-:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.1 Update R6 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.1:r6:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.3 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.4 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.4 Update R2.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.4:r2.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.5 Update R2.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.5:r2.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.6 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.6:-:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.0 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R10 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r10:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R11 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r11:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R11.3 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r11.3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R11.4 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r11.4:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R11.5 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r11.5:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R12 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r12:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R12.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r12.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R13 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r13:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R13.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r13.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R14 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r14:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R15.2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r15.2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R17 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r17:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R17.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r17.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R18 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r18:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R3 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R4 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r4:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R4.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r4.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R4.2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r4.2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R4.3 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r4.3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R5 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r5:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R6 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r6:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R7 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r7:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R8 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r8:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R8.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r8.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R8.2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r8.2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R9 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r9:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R9.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r9.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.6 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.6:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.6 Update R2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.6:r2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.2 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.1 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R15 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r15:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R16 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r16:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.0 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R10 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r10:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R11 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r11:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R12 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r12:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R13 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r13:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R13.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r13.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R14 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r14:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R17 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r17:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R18 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r18:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R2 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R3 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R3.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r3.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R4 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r4:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R4.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r4.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R4.2 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r4.2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R5 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r5:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R6 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r6:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R7 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r7:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R8 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r8:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R8.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r8.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R8.2 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r8.2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R9 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r9:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.1 Update R6 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.1:r6:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.2 Update R3 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.3 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.3 Update R3 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.3:r3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.4 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.4 Update R2 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.4 Update R2.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.4:r2.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.5 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.5:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.5 Update R2.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.5:r2.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.6 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.6:r1:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-77",
        "cwe_name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
        "cwe_description": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
        "cwe_extended_description": "Command injection vulnerabilities typically occur when:\n\n1. Data enters the application from an untrusted source.\n2. The data is part of a string that is executed as a command by the application.\n3. By executing the command, the application gives an attacker a privilege or capability that the attacker would not otherwise have.\n\nMany protocols and products have their own custom command language. While OS or shell command strings are frequently discovered and targeted, developers may not realize that these other command languages might also be vulnerable to attacks.\n\nCommand injection is a common problem with wrapper programs.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-36069",
            "name": "CVE-2022-36069",
            "des": "Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash, potentially allowing for code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-1999-0067",
            "name": "CVE-1999-0067",
            "des": "Canonical example of OS command injection. CGI program does not neutralize \"|\" metacharacter when invoking a phonebook program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-9054",
            "name": "CVE-2020-9054",
            "des": "Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-1509",
            "name": "CVE-2022-1509",
            "des": "injection of sed script syntax (\"sed injection\")"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-41282",
            "name": "CVE-2021-41282",
            "des": "injection of sed script syntax (\"sed injection\")"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-13398",
            "name": "CVE-2019-13398",
            "des": "injection of sed script syntax (\"sed injection\")"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-12921",
            "name": "CVE-2019-12921",
            "des": "image program allows injection of commands in \"Magick Vector Graphics (MVG)\" language."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-11698",
            "name": "CVE-2020-11698",
            "des": "anti-spam product allows injection of SNMP commands into confiuration file"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "If at all possible, use library calls rather than external processes to recreate the desired functionality."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "If possible, ensure that all external commands called from the program are statically created."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run time: Run time policy enforcement may be used in an allowlist fashion to prevent use of any non-sanctioned commands."
            ]
          },
          {
            "subheading": "Phase: System Configuration",
            "des": [
              "Assign permissions that prevent the user from accessing/opening privileged files."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-136",
            "capec_name": "LDAP Injection",
            "capec_description": "An attacker manipulates or crafts an LDAP query for the purpose of undermining the security of the target. Some applications use user input to create LDAP queries that are processed by an LDAP server. For example, a user might provide their username during authentication and the username might be inserted in an LDAP query during the authentication process. An attacker could use this input to inject additional commands into an LDAP query that could disclose sensitive information. For example, entering a * in the aforementioned query might return information about all users on the system. This attack is very similar to an SQL injection attack in that it manipulates a query to gather additional information or coerce a particular return value.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as LDAP content.",
              "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the LDAP or application."
            ],
            "related_cwe": ["CWE-77", "CWE-90", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-15",
            "capec_name": "Command Delimiters",
            "capec_description": "An attack of this type exploits a programs' vulnerabilities that allows an attacker's commands to be concatenated onto a legitimate command with the intent of targeting other resources such as the file system or database. The system that uses a filter or denylist input validation, as opposed to allowlist validation is vulnerable to an attacker who predicts delimiters (or combinations of delimiters) not present in the filter or denylist. As with other injection attacks, the attacker uses the command delimiter payload as an entry point to tunnel through the application and activate additional attacks through SQL queries, shell commands, network scanning, and so on.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Perform allowlist validation against a positive specification for command length, type, and parameters.",
              "Design: Limit program privileges, so if commands circumvent program input validation or filter routines then commands do not running under a privileged account",
              "Implementation: Perform input validation for all remote content.",
              "Implementation: Use type conversions such as JDBC prepared statements."
            ],
            "related_cwe": [
              "CWE-146",
              "CWE-77",
              "CWE-184",
              "CWE-78",
              "CWE-185",
              "CWE-93",
              "CWE-140",
              "CWE-157",
              "CWE-138",
              "CWE-154",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-183",
            "capec_name": "IMAP/SMTP Command Injection",
            "capec_description": "An adversary exploits weaknesses in input validation on web-mail servers to execute commands on the IMAP/SMTP server. Web-mail servers often sit between the Internet and the IMAP or SMTP mail server. User requests are received by the web-mail servers which then query the back-end mail server for the requested information and return this response to the user. In an IMAP/SMTP command injection attack, mail-server commands are embedded in parts of the request sent to the web-mail server. If the web-mail server fails to adequately sanitize these requests, these commands are then sent to the back-end mail server when it is queried by the web-mail server, where the commands are then executed. This attack can be especially dangerous since administrators may assume that the back-end server is protected against direct Internet access and therefore may not secure it adequately against the execution of malicious commands.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-77"]
          },
          {
            "capec_id": "CAPEC-248",
            "capec_name": "Command Injection",
            "capec_description": "An adversary looking to execute a command of their choosing, injects new items into an existing command thus modifying interpretation away from what was intended. Commands in this context are often standalone strings that are interpreted by a downstream component and cause specific responses. This type of attack is possible when untrusted values are used to build these command strings. Weaknesses in input validation or command construction can enable the attack and lead to successful exploitation.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "All user-controllable input should be validated and filtered for potentially unwanted characters. Using an allowlist for input is desired, but if use of a denylist approach is necessary, then focusing on command related terms and delimiters is necessary.",
              "Input should be encoded prior to use in commands to make sure command related characters are not treated as part of the command. For example, quotation characters may need to be encoded so that the application does not treat the quotation as a delimiter.",
              "Input should be parameterized, or restricted to data sections of a command, thus removing the chance that the input will be treated as part of the command itself."
            ],
            "related_cwe": ["CWE-77"]
          },
          {
            "capec_id": "CAPEC-40",
            "capec_name": "Manipulating Writeable Terminal Devices",
            "capec_description": "This attack exploits terminal devices that allow themselves to be written to by other users. The attacker sends command strings to the target terminal device hoping that the target user will hit enter and thereby execute the malicious command with their privileges. The attacker can send the results (such as copying /etc/passwd) to a known directory and collect once the attack has succeeded.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Ensure that terminals are only writeable by named owner user and/or administrator",
              "Design: Enforce principle of least privilege"
            ],
            "related_cwe": ["CWE-77"]
          },
          {
            "capec_id": "CAPEC-43",
            "capec_name": "Exploiting Multiple Input Interpretation Layers",
            "capec_description": "An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: <parser1> --> <input validator> --> <parser2>. In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it.",
              "Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist would not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-179",
              "CWE-181",
              "CWE-184",
              "CWE-183",
              "CWE-77",
              "CWE-78",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-75",
            "capec_name": "Manipulating Writeable Configuration Files",
            "capec_description": "Generally these are manually edited files that are not in the preview of the system administrators, any ability on the attackers' behalf to modify these files, for example in a CVS repository, gives unauthorized access directly to the application, the same as authorized users.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege",
              "Design: Backup copies of all configuration files",
              "Implementation: Integrity monitoring for configuration files",
              "Implementation: Enforce audit logging on code and configuration promotion procedures.",
              "Implementation: Load configuration from separate process and memory space, for example a separate physical device like a CD"
            ],
            "related_cwe": [
              "CWE-349",
              "CWE-99",
              "CWE-77",
              "CWE-346",
              "CWE-353",
              "CWE-354"
            ]
          },
          {
            "capec_id": "CAPEC-76",
            "capec_name": "Manipulating Web Input to File System Calls",
            "capec_description": "An attacker manipulates inputs to the target software which the target software passes to file system calls in the OS. The goal is to gain access to, and perhaps modify, areas of the file system that the target software did not intend to be accessible.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege.",
              "Design: Ensure all input is validated, and does not contain file system commands",
              "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
              "Design: For interactive user applications, consider if direct file system interface is necessary, instead consider having the application proxy communication.",
              "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables."
            ],
            "related_cwe": [
              "CWE-23",
              "CWE-22",
              "CWE-73",
              "CWE-77",
              "CWE-346",
              "CWE-348",
              "CWE-285",
              "CWE-272",
              "CWE-59",
              "CWE-74",
              "CWE-15"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-46805",
    "cve_name": "",
    "cve_description": "An authentication bypass vulnerability in the web component of Ivanti ICS 9.x, 22.x and Ivanti Policy Secure allows a remote attacker to access restricted resources by bypassing control checks.",
    "cve_category": ["Bypass", "Gain privilege"],
    "cve_published_at": "Published 2024-01-12 17:15:10",
    "cve_updated_at": "Updated 2024-01-13 02:00:01",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.2",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N",
      "exploitability_score": "3.9",
      "impact_score": "4.2",
      "source": "support@hackerone.com"
    },
    "cpe": [
      {
        "version": "Ivanti » Connect Secure » Version: 22.1 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.2 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R16.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r16.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R16 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r16:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R15 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r15:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.2:-:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.1 Update R6 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.1:r6:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.3 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.4 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.4 Update R2.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.4:r2.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.5 Update R2.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.5:r2.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.6 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.6:-:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.0 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R10 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r10:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R11 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r11:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R11.3 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r11.3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R11.4 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r11.4:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R11.5 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r11.5:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R12 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r12:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R12.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r12.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R13 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r13:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R13.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r13.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R14 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r14:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R15.2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r15.2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R17 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r17:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R17.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r17.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R18 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r18:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R3 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R4 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r4:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R4.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r4.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R4.2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r4.2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R4.3 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r4.3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R5 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r5:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R6 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r6:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R7 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r7:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R8 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r8:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R8.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r8.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R8.2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r8.2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R9 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r9:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 9.1 Update R9.1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:9.1:r9.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.6 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.6:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Connect Secure » Version: 22.6 Update R2 ",
        "detail": "cpe:2.3:a:ivanti:connect_secure:22.6:r2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.2 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.1 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R15 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r15:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R16 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r16:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.0 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R10 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r10:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R11 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r11:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R12 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r12:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R13 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r13:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R13.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r13.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R14 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r14:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R17 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r17:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R18 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r18:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R2 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R3 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R3.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r3.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R4 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r4:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R4.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r4.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R4.2 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r4.2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R5 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r5:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R6 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r6:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R7 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r7:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R8 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r8:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R8.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r8.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R8.2 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r8.2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 9.1 Update R9 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:9.1:r9:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.1 Update R6 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.1:r6:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.2 Update R3 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.3 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.3 Update R3 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.3:r3:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.4 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.4 Update R2 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.4 Update R2.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.4:r2.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.5 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.5:r1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.5 Update R2.1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.5:r2.1:*:*:*:*:*:*"
      },
      {
        "version": "Ivanti » Policy Secure » Version: 22.6 Update R1 ",
        "detail": "cpe:2.3:a:ivanti:policy_secure:22.6:r1:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-287",
        "cwe_name": "Improper Authentication",
        "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-35248",
            "name": "CVE-2022-35248",
            "des": "Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-36436",
            "name": "CVE-2022-36436",
            "des": "Python-based authentication proxy does not enforce password authentication during the initial handshake, allowing the client to bypass authentication by specifying a 'None' authentication type."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30034",
            "name": "CVE-2022-30034",
            "des": "Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29951",
            "name": "CVE-2022-29951",
            "des": "TCP-based protocol in Programmable Logic Controller (PLC) has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29952",
            "name": "CVE-2022-29952",
            "des": "Condition Monitor uses a protocol that does not require authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30313",
            "name": "CVE-2022-30313",
            "des": "Safety Instrumented System uses proprietary TCP protocols with no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30317",
            "name": "CVE-2022-30317",
            "des": "Distributed Control System (DCS) uses a protocol that has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-33139",
            "name": "CVE-2022-33139",
            "des": "SCADA system only uses client-side authentication, allowing adversaries to impersonate other users."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-3116",
            "name": "CVE-2021-3116",
            "des": "Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21972",
            "name": "CVE-2021-21972",
            "des": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-37415",
            "name": "CVE-2021-37415",
            "des": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-13927",
            "name": "CVE-2020-13927",
            "des": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-35395",
            "name": "CVE-2021-35395",
            "des": "Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-34523",
            "name": "CVE-2021-34523",
            "des": "Mail server does not properly check an access token before executing a Powershell command, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-12812",
            "name": "CVE-2020-12812",
            "des": "Chain: user is not prompted for a second authentication factor (CWE-287) when changing the case of their username (CWE-178), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-10148",
            "name": "CVE-2020-10148",
            "des": "Authentication bypass by appending specific parameters and values to a URI, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0688",
            "name": "CVE-2020-0688",
            "des": "Mail server does not generate a unique key during installation, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2017-14623",
            "name": "CVE-2017-14623",
            "des": "LDAP Go package allows authentication bypass using an empty password, causing an unauthenticated LDAP bind"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3421",
            "name": "CVE-2009-3421",
            "des": "login script for guestbook allows bypassing authentication by setting a \"login_ok\" parameter to 1."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2382",
            "name": "CVE-2009-2382",
            "des": "admin script allows authentication bypass by setting a cookie value to \"LOGGEDIN\"."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1048",
            "name": "CVE-2009-1048",
            "des": "VOIP product allows authentication bypass using 127.0.0.1 in the Host header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2213",
            "name": "CVE-2009-2213",
            "des": "product uses default \"Allow\" action, instead of default deny, leading to authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2168",
            "name": "CVE-2009-2168",
            "des": "chain: redirect without exit (CWE-698) leads to resultant authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3107",
            "name": "CVE-2009-3107",
            "des": "product does not restrict access to a listening port for a critical service, allowing authentication to be bypassed."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1596",
            "name": "CVE-2009-1596",
            "des": "product does not properly implement a security-related configuration setting, allowing authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2422",
            "name": "CVE-2009-2422",
            "des": "authentication routine returns \"nil\" instead of \"false\" in some situations, allowing authentication bypass using an invalid username."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3232",
            "name": "CVE-2009-3232",
            "des": "authentication update script does not properly handle when admin does not select any authentication modules, allowing authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3231",
            "name": "CVE-2009-3231",
            "des": "use of LDAP authentication with anonymous binds causes empty password to result in successful authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3435",
            "name": "CVE-2005-3435",
            "des": "product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0408",
            "name": "CVE-2005-0408",
            "des": "chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use an authentication framework or library such as the OWASP ESAPI Authentication feature."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis is useful for detecting certain types of authentication. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authentication libraries.",
              "Generally, automated static analysis tools have difficulty detecting custom authentication schemes. In addition, the software's design may include some functionality that is accessible to any user and does not require an established identity; an automated technique that detects the absence of authentication may report false positives.",
              "Effectiveness: Limited"
            ]
          },
          {
            "subheading": "Manual Static Analysis",
            "des": [
              "This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.",
              "Manual static analysis is useful for evaluating the correctness of custom authentication mechanisms.",
              "Effectiveness: High",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-114",
            "capec_name": "Authentication Abuse",
            "capec_description": "An attacker obtains unauthorized access to an application, service or device either through knowledge of the inherent weaknesses of an authentication mechanism, or by exploiting a flaw in the authentication scheme's implementation. In such an attack an authentication mechanism is functioning but a carefully controlled sequence of events causes the mechanism to grant access to the attacker.",
            "capec_extended_description": "This attack may exploit assumptions made by the target's authentication procedures, such as assumptions regarding trust relationships or assumptions regarding the generation of secret values. This attack differs from Authentication Bypass attacks in that Authentication Abuse allows the attacker to be certified as a valid user through illegitimate means, while Authentication Bypass allows the user to access protected material without ever being certified as an authenticated user. This attack does not rely on prior sessions established by successfully authenticating users, as relied upon for the \"Exploitation of Session Variables, Resource IDs and other Trusted Credentials\" attack patterns.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287", "CWE-1244"]
          },
          {
            "capec_id": "CAPEC-115",
            "capec_name": "Authentication Bypass",
            "capec_description": "An attacker gains access to application, service, or device with the privileges of an authorized or privileged user by evading or circumventing an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place.",
            "capec_extended_description": "This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to get to secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-151",
            "capec_name": "Identity Spoofing",
            "capec_description": "Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials.",
            "capec_extended_description": "Alternatively, an adversary may intercept a message from a legitimate sender and attempt to make it look like the message comes from them without changing its content. The latter form of this attack can be used to hijack credentials from legitimate users. Identity Spoofing attacks need not be limited to transmitted messages - any resource that is associated with an identity (for example, a file with a signature) can be the target of an attack where the adversary attempts to change the apparent identity. This attack differs from Content Spoofing attacks where the adversary does not wish to change the apparent identity of the message but instead wishes to change what the message says. In an Identity Spoofing attack, the adversary is attempting to change the identity of the content.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Medium",
            "mitigations": [
              "Employ robust authentication processes (e.g., multi-factor authentication)."
            ],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-194",
            "capec_name": "Fake the Source of Data",
            "capec_description": "An adversary takes advantage of improper authentication to provide data or services under a falsified identity. The purpose of using the falsified identity may be to prevent traceability of the provided data or to assume the rights granted to another individual. One of the simplest forms of this attack would be the creation of an email message with a modified \"From\" field in order to appear that the message was sent from someone other than the actual sender. The root of the attack (in this case the email system) fails to properly authenticate the source and this results in the reader incorrectly performing the instructed action. Results of the attack vary depending on the details of the attack, but common results include privilege escalation, obfuscation of other attacks, and data corruption/manipulation.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-22",
            "capec_name": "Exploiting Trust in Client",
            "capec_description": "An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system.",
              "Design: Do not rely on client validation or encoding for security purposes.",
              "Design: Utilize digital signatures to increase authentication assurance.",
              "Design: Utilize two factor authentication to increase authentication assurance.",
              "Implementation: Perform input validation for all remote content."
            ],
            "related_cwe": [
              "CWE-290",
              "CWE-287",
              "CWE-20",
              "CWE-200",
              "CWE-693"
            ]
          },
          {
            "capec_id": "CAPEC-57",
            "capec_name": "Utilizing REST's Trust in the System Resource to Obtain Sensitive Data",
            "capec_description": "This attack utilizes a REST(REpresentational State Transfer)-style applications' trust in the system resources and environment to obtain sensitive data once SSL is terminated.",
            "capec_extended_description": "Rest applications premise is that they leverage existing infrastructure to deliver web services functionality. An example of this is a Rest application that uses HTTP Get methods and receives a HTTP response with an XML document. These Rest style web services are deployed on existing infrastructure such as Apache and IIS web servers with no SOAP stack required.\n\nUnfortunately from a security standpoint, there frequently is no interoperable identity security mechanism deployed, so Rest developers often fall back to SSL to deliver security. In large data centers, SSL is typically terminated at the edge of the network - at the firewall, load balancer, or router. Once the SSL is terminated the HTTP request is in the clear (unless developers have hashed or encrypted the values, but this is rare). The adversary can utilize a sniffer such as Wireshark to snapshot the credentials, such as username and password that are passed in the clear once SSL is terminated. Once the adversary gathers these credentials, they can submit requests to the web service provider just as authorized user do. There is not typically an authentication on the client side, beyond what is passed in the request itself so once this is compromised, then this is generally sufficient to compromise the service's authentication scheme.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Very High",
            "mitigations": [
              "Implementation: Implement message level security such as HMAC in the HTTP communication",
              "Design: Utilize defense in depth, do not rely on a single security mechanism like SSL",
              "Design: Enforce principle of least privilege"
            ],
            "related_cwe": ["CWE-300", "CWE-287", "CWE-693"]
          },
          {
            "capec_id": "CAPEC-593",
            "capec_name": "Session Hijacking",
            "capec_description": "This type of attack involves an adversary that exploits weaknesses in an application's use of sessions in performing authentication. The adversary is able to steal or manipulate an active session and use it to gain unathorized access to the application.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Properly encrypt and sign identity tokens in transit, and use industry standard session key generation mechanisms that utilize high amount of entropy to generate the session key. Many standard web and application servers will perform this task on your behalf. Utilize a session timeout for all sessions. If the user does not explicitly logout, terminate their session after this period of inactivity. If the user logs back in then a new session key should be generated."
            ],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-633",
            "capec_name": "Token Impersonation",
            "capec_description": "An adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity, and not the response that blocks the adversary.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287", "CWE-1270"]
          },
          {
            "capec_id": "CAPEC-650",
            "capec_name": "Upload a Web Shell to a Web Server",
            "capec_description": "By exploiting insufficient permissions, it is possible to upload a web shell to a web server in such a way that it can be executed remotely. This shell can have various capabilities, thereby acting as a \"gateway\" to the underlying web server. The shell might execute at the higher permission level of the web server, providing the ability the execute malicious code at elevated levels.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "High",
            "mitigations": [
              "Make sure your web server is up-to-date with all patches to protect against known vulnerabilities.",
              "Ensure that the file permissions in directories on the web server from which files can be execute is set to the \"least privilege\" settings, and that those directories contents is controlled by an allowlist."
            ],
            "related_cwe": ["CWE-287", "CWE-553"]
          },
          {
            "capec_id": "CAPEC-94",
            "capec_name": "Adversary in the Middle (AiTM)",
            "capec_description": "An adversary targets the communication between two components (typically client and server), in order to alter or obtain data from transactions. A general approach entails the adversary placing themself within the communication channel between the two components.",
            "capec_extended_description": "Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first flows through the adversary, who has the opportunity to observe or alter it, before being passed on to the intended recipient as if it was never observed. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for these attacks yields an implicit lack of trust in communication or identify between two components.\n\nThese attacks differ from Sniffing Attacks (CAPEC-157) since these attacks often modify the communications prior to delivering it to the intended recipient.",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Ensure Public Keys are signed by a Certificate Authority",
              "Encrypt communications using cryptography (e.g., SSL/TLS)",
              "Use Strong mutual authentication to always fully authenticate both ends of any communications channel.",
              "Exchange public keys using a secure channel"
            ],
            "related_cwe": [
              "CWE-300",
              "CWE-290",
              "CWE-593",
              "CWE-287",
              "CWE-294"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-29357",
    "cve_name": "",
    "cve_description": "Microsoft SharePoint Server Elevation of Privilege Vulnerability",
    "cve_category": ["Gain privilege"],
    "cve_published_at": "Published 2023-06-14 00:15:10",
    "cve_updated_at": "Updated 2024-01-11 02:00:02",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "secure@microsoft.com"
    },
    "cpe": [
      {
        "version": "Microsoft » Sharepoint Server » Version: 2019 ",
        "detail": "cpe:2.3:a:microsoft:sharepoint_server:2019:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-41990",
    "cve_name": "",
    "cve_description": "The issue was addressed with improved handling of caches. This issue is fixed in tvOS 16.3, iOS 16.3 and iPadOS 16.3, macOS Monterey 12.6.8, macOS Big Sur 11.7.9, iOS 15.7.8 and iPadOS 15.7.8, macOS Ventura 13.2, watchOS 9.3. Processing a font file may lead to arbitrary code execution. Apple is aware of a report that this issue may have been actively exploited against versions of iOS released before iOS 15.7.1.",
    "cve_category": [],
    "cve_published_at": "Published 2023-09-12 00:15:09",
    "cve_updated_at": "Updated 2024-01-09 02:00:02",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Apple » Iphone Os Versions from including (>=) 16.0 and before (<) 16.3",
        "detail": "cpe:2.3:o:apple:iphone_os:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Iphone Os Versions before (<) 15.7.8",
        "detail": "cpe:2.3:o:apple:iphone_os:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Watchos Versions before (<) 9.3",
        "detail": "cpe:2.3:o:apple:watchos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Tvos Versions before (<) 16.3",
        "detail": "cpe:2.3:o:apple:tvos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Macos Versions before (<) 11.7.9",
        "detail": "cpe:2.3:o:apple:macos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Macos Versions from including (>=) 13.0 and before (<) 13.2",
        "detail": "cpe:2.3:o:apple:macos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Macos Versions from including (>=) 12.0.0 and before (<) 12.6.8",
        "detail": "cpe:2.3:o:apple:macos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados Versions before (<) 15.7.8",
        "detail": "cpe:2.3:o:apple:ipados:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados Versions from including (>=) 16.0 and before (<) 16.3",
        "detail": "cpe:2.3:o:apple:ipados:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-38203",
    "cve_name": "",
    "cve_description": "Adobe ColdFusion versions 2018u17 (and earlier), 2021u7 (and earlier) and 2023u1 (and earlier) are affected by a Deserialization of Untrusted Data vulnerability that could result in Arbitrary code execution. Exploitation of this issue does not require user interaction.",
    "cve_category": [],
    "cve_published_at": "Published 2023-07-20 16:15:12",
    "cve_updated_at": "Updated 2024-01-09 02:00:02",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "psirt@adobe.com"
    },
    "cpe": [
      {
        "version": "Adobe » Coldfusion » Version: 2018 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:-:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update1 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update1:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update2 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update2:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update3 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update3:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update4 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update4:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update5 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update5:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update6 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update6:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update10 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update10:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update7 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update7:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update8 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update8:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update9 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update9:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:-:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update1 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update1:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update2 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update2:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update3 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update3:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update13 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update13:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update12 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update12:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update11 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update11:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update14 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update14:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update4 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update4:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update5 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update5:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update15 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update15:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update16 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update16:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update6 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update6:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update17 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update17:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update7 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update7:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2023 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2023:-:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2023 Update Update1 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2023:update1:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-502",
        "cwe_name": "Deserialization of Untrusted Data",
        "cwe_description": "The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.",
        "cwe_extended_description": "It is often convenient to serialize objects for communication or to save them for later use. However, deserialized data or code can often be modified without using the provided accessor functions if it does not use cryptography to protect itself. Furthermore, any cryptography would still be client-side security -- which is a dangerous security assumption.\n\nData that is untrusted can not be trusted to be well-formed.\n\nWhen developers place no restrictions on \"gadget chains,\" or series of instances and method invocations that can self-execute during the deserialization process (i.e., before the object is returned to the caller), it is sometimes possible for attackers to leverage them to perform unauthorized actions, like generating a shell.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-12799",
            "name": "CVE-2019-12799",
            "des": "chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2015-8103",
            "name": "CVE-2015-8103",
            "des": "Deserialization issue in commonly-used Java library allows remote execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2015-4852",
            "name": "CVE-2015-4852",
            "des": "Deserialization issue in commonly-used Java library allows remote execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2013-1465",
            "name": "CVE-2013-1465",
            "des": "Use of PHP unserialize function on untrusted input allows attacker to modify application configuration."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-3527",
            "name": "CVE-2012-3527",
            "des": "Use of PHP unserialize function on untrusted input in content management system might allow code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-0911",
            "name": "CVE-2012-0911",
            "des": "Use of PHP unserialize function on untrusted input in content management system allows code execution using a crafted cookie value."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-0911",
            "name": "CVE-2012-0911",
            "des": "Content management system written in PHP allows unserialize of arbitrary objects, possibly allowing code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2011-2520",
            "name": "CVE-2011-2520",
            "des": "Python script allows local users to execute code via pickled data."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-4406",
            "name": "CVE-2012-4406",
            "des": "Unsafe deserialization using pickle in a Python script."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0791",
            "name": "CVE-2003-0791",
            "des": "Web browser allows execution of native methods via a crafted string to a JavaScript function that deserializes the string."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "If available, use the signing/sealing features of the programming language to assure that deserialized data has not been tainted. For example, a hash-based message authentication code (HMAC) could be used to ensure that data has not been modified."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When deserializing data, populate a new object rather than just deserializing. The result is that the data flows through safe input validation and that the functions are safe."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Explicitly define a final object() to prevent deserialization."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "Make fields transient to protect them from deserialization.",
              "An attempt to serialize and then deserialize a class containing transient fields will result in NULLs where the transient data should be. This is an excellent way to prevent time, environment-based, or sensitive variables from being carried over and used improperly."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. This limits the potential for unintended or unauthorized types and gadgets to be leveraged by the attacker. Add only acceptable classes to an allowlist. Note: new gadgets are constantly being discovered, so this alone is not a sufficient mitigation."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-586",
            "capec_name": "Object Injection",
            "capec_description": "An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Implementation: Validate object before deserialization process",
              "Design: Limit which types can be deserialized.",
              "Implementation: Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. Use an allowlist of acceptable classes.",
              "Implementation: Keep session state on the server, when possible."
            ],
            "related_cwe": ["CWE-502"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-29300",
    "cve_name": "",
    "cve_description": "Adobe ColdFusion versions 2018u16 (and earlier), 2021u6 (and earlier) and 2023.0.0.330468 (and earlier) are affected by a Deserialization of Untrusted Data vulnerability that could result in Arbitrary code execution. Exploitation of this issue does not require user interaction.",
    "cve_category": [],
    "cve_published_at": "Published 2023-07-12 16:15:12",
    "cve_updated_at": "Updated 2024-01-09 02:00:02",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "psirt@adobe.com"
    },
    "cpe": [
      {
        "version": "Adobe » Coldfusion Versions from including (>=) 2023 and up to, including, (<=) 2023.0.0.330468",
        "detail": "cpe:2.3:a:adobe:coldfusion:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:-:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update1 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update1:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update2 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update2:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update3 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update3:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update4 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update4:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update5 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update5:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update6 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update6:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update10 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update10:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update7 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update7:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update8 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update8:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update9 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update9:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:-:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update1 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update1:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update2 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update2:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update3 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update3:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update13 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update13:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update12 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update12:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update11 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update11:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update14 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update14:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update4 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update4:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update5 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update5:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update15 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update15:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2018 Update Update16 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2018:update16:*:*:*:*:*:*"
      },
      {
        "version": "Adobe » Coldfusion » Version: 2021 Update Update6 ",
        "detail": "cpe:2.3:a:adobe:coldfusion:2021:update6:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-502",
        "cwe_name": "Deserialization of Untrusted Data",
        "cwe_description": "The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.",
        "cwe_extended_description": "It is often convenient to serialize objects for communication or to save them for later use. However, deserialized data or code can often be modified without using the provided accessor functions if it does not use cryptography to protect itself. Furthermore, any cryptography would still be client-side security -- which is a dangerous security assumption.\n\nData that is untrusted can not be trusted to be well-formed.\n\nWhen developers place no restrictions on \"gadget chains,\" or series of instances and method invocations that can self-execute during the deserialization process (i.e., before the object is returned to the caller), it is sometimes possible for attackers to leverage them to perform unauthorized actions, like generating a shell.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-12799",
            "name": "CVE-2019-12799",
            "des": "chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2015-8103",
            "name": "CVE-2015-8103",
            "des": "Deserialization issue in commonly-used Java library allows remote execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2015-4852",
            "name": "CVE-2015-4852",
            "des": "Deserialization issue in commonly-used Java library allows remote execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2013-1465",
            "name": "CVE-2013-1465",
            "des": "Use of PHP unserialize function on untrusted input allows attacker to modify application configuration."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-3527",
            "name": "CVE-2012-3527",
            "des": "Use of PHP unserialize function on untrusted input in content management system might allow code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-0911",
            "name": "CVE-2012-0911",
            "des": "Use of PHP unserialize function on untrusted input in content management system allows code execution using a crafted cookie value."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-0911",
            "name": "CVE-2012-0911",
            "des": "Content management system written in PHP allows unserialize of arbitrary objects, possibly allowing code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2011-2520",
            "name": "CVE-2011-2520",
            "des": "Python script allows local users to execute code via pickled data."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-4406",
            "name": "CVE-2012-4406",
            "des": "Unsafe deserialization using pickle in a Python script."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0791",
            "name": "CVE-2003-0791",
            "des": "Web browser allows execution of native methods via a crafted string to a JavaScript function that deserializes the string."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "If available, use the signing/sealing features of the programming language to assure that deserialized data has not been tainted. For example, a hash-based message authentication code (HMAC) could be used to ensure that data has not been modified."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When deserializing data, populate a new object rather than just deserializing. The result is that the data flows through safe input validation and that the functions are safe."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Explicitly define a final object() to prevent deserialization."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "Make fields transient to protect them from deserialization.",
              "An attempt to serialize and then deserialize a class containing transient fields will result in NULLs where the transient data should be. This is an excellent way to prevent time, environment-based, or sensitive variables from being carried over and used improperly."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. This limits the potential for unintended or unauthorized types and gadgets to be leveraged by the attacker. Add only acceptable classes to an allowlist. Note: new gadgets are constantly being discovered, so this alone is not a sufficient mitigation."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-586",
            "capec_name": "Object Injection",
            "capec_description": "An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Implementation: Validate object before deserialization process",
              "Design: Limit which types can be deserialized.",
              "Implementation: Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. Use an allowlist of acceptable classes.",
              "Implementation: Keep session state on the server, when possible."
            ],
            "related_cwe": ["CWE-502"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-27524",
    "cve_name": "",
    "cve_description": "Session Validation attacks in Apache Superset versions up to and including 2.0.1. Installations that have not altered the default configured SECRET_KEY according to installation instructions allow for an attacker to authenticate and access unauthorized resources. This does not affect Superset administrators who have changed the default value for SECRET_KEY config.",
    "cve_category": [],
    "cve_published_at": "Published 2023-04-24 16:15:08",
    "cve_updated_at": "Updated 2024-01-09 02:00:02",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Apache » Superset Versions up to, including, (<=) 2.0.1",
        "detail": "cpe:2.3:a:apache:superset:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-1188",
        "cwe_name": "Initialization of a Resource with an Insecure Default",
        "cwe_description": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
        "cwe_extended_description": "Developers often choose default values that leave the product as open and easy to use as possible out-of-the-box, under the assumption that the administrator can (or should) change the default value. However, this ease-of-use comes at a cost when the default is insecure and the administrator does not change it.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-36349",
            "name": "CVE-2022-36349",
            "des": "insecure default variable initialization in BIOS firmware for a hardware board allows DoS"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-42467",
            "name": "CVE-2022-42467",
            "des": "A generic database browser interface has a default mode that exposes a web server to the network, allowing queries to the database."
          }
        ],
        "potential_mitigations": [],
        "detection_methods": [],
        "capec": [
          {
            "capec_id": "CAPEC-665",
            "capec_name": "Exploitation of Thunderbolt Protection Flaws",
            "capec_description": "An adversary leverages a firmware weakness within the Thunderbolt protocol, on a computing device to manipulate Thunderbolt controller firmware in order to exploit vulnerabilities in the implementation of authorization and verification schemes within Thunderbolt protection mechanisms. Upon gaining physical access to a target device, the adversary conducts high-level firmware manipulation of the victim Thunderbolt controller SPI (Serial Peripheral Interface) flash, through the use of a SPI Programing device and an external Thunderbolt device, typically as the target device is booting up. If successful, this allows the adversary to modify memory, subvert authentication mechanisms, spoof identities and content, and extract data and memory from the target device. Currently 7 major vulnerabilities exist within Thunderbolt protocol with 9 attack vectors as noted in the Execution Flow.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Very High",
            "mitigations": [
              "Implementation: Kernel Direct Memory Access Protection",
              "Configuration: Enable UEFI option USB Passthrough mode - Thunderbolt 3 system port operates as USB 3.1 Type C interface",
              "Configuration: Enable UEFI option DisplayPort mode - Thunderbolt 3 system port operates as video-only DP interface",
              "Configuration: Enable UEFI option Mixed USB/DisplayPort mode - Thunderbolt 3 system port operates as USB 3.1 Type C interface with support for DP mode",
              "Configuration: Set Security Level to SL3 for Thunderbolt 2 system port",
              "Configuration: Disable PCIe tunneling to set Security Level to SL3",
              "Configuration: Disable Boot Camp upon MacOS systems"
            ],
            "related_cwe": [
              "CWE-345",
              "CWE-353",
              "CWE-288",
              "CWE-1188",
              "CWE-862"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-23752",
    "cve_name": "",
    "cve_description": "An issue was discovered in Joomla! 4.0.0 through 4.2.7. An improper access check allows unauthorized access to webservice endpoints.",
    "cve_category": ["Bypass"],
    "cve_published_at": "Published 2023-02-16 17:15:11",
    "cve_updated_at": "Updated 2024-01-09 02:00:02",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.3",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "exploitability_score": "3.9",
      "impact_score": "1.4",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Joomla » Joomla! Versions from including (>=) 4.0.0 and up to, including, (<=) 4.2.7",
        "detail": "cpe:2.3:a:joomla:joomla\\!:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2016-20017",
    "cve_name": "",
    "cve_description": "D-Link DSL-2750B devices before 1.05 allow remote unauthenticated command injection via the login.cgi cli parameter, as exploited in the wild in 2016 through 2022.",
    "cve_category": [],
    "cve_published_at": "Published 2022-10-19 05:15:09",
    "cve_updated_at": "Updated 2024-01-09 02:00:02",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Dlink » Dsl-2750b Firmware Versions before (<) 1.05",
        "detail": "cpe:2.3:o:dlink:dsl-2750b_firmware:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-77",
        "cwe_name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
        "cwe_description": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
        "cwe_extended_description": "Command injection vulnerabilities typically occur when:\n\n1. Data enters the application from an untrusted source.\n2. The data is part of a string that is executed as a command by the application.\n3. By executing the command, the application gives an attacker a privilege or capability that the attacker would not otherwise have.\n\nMany protocols and products have their own custom command language. While OS or shell command strings are frequently discovered and targeted, developers may not realize that these other command languages might also be vulnerable to attacks.\n\nCommand injection is a common problem with wrapper programs.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-36069",
            "name": "CVE-2022-36069",
            "des": "Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash, potentially allowing for code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-1999-0067",
            "name": "CVE-1999-0067",
            "des": "Canonical example of OS command injection. CGI program does not neutralize \"|\" metacharacter when invoking a phonebook program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-9054",
            "name": "CVE-2020-9054",
            "des": "Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-1509",
            "name": "CVE-2022-1509",
            "des": "injection of sed script syntax (\"sed injection\")"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-41282",
            "name": "CVE-2021-41282",
            "des": "injection of sed script syntax (\"sed injection\")"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-13398",
            "name": "CVE-2019-13398",
            "des": "injection of sed script syntax (\"sed injection\")"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-12921",
            "name": "CVE-2019-12921",
            "des": "image program allows injection of commands in \"Magick Vector Graphics (MVG)\" language."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-11698",
            "name": "CVE-2020-11698",
            "des": "anti-spam product allows injection of SNMP commands into confiuration file"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "If at all possible, use library calls rather than external processes to recreate the desired functionality."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "If possible, ensure that all external commands called from the program are statically created."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run time: Run time policy enforcement may be used in an allowlist fashion to prevent use of any non-sanctioned commands."
            ]
          },
          {
            "subheading": "Phase: System Configuration",
            "des": [
              "Assign permissions that prevent the user from accessing/opening privileged files."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-136",
            "capec_name": "LDAP Injection",
            "capec_description": "An attacker manipulates or crafts an LDAP query for the purpose of undermining the security of the target. Some applications use user input to create LDAP queries that are processed by an LDAP server. For example, a user might provide their username during authentication and the username might be inserted in an LDAP query during the authentication process. An attacker could use this input to inject additional commands into an LDAP query that could disclose sensitive information. For example, entering a * in the aforementioned query might return information about all users on the system. This attack is very similar to an SQL injection attack in that it manipulates a query to gather additional information or coerce a particular return value.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as LDAP content.",
              "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the LDAP or application."
            ],
            "related_cwe": ["CWE-77", "CWE-90", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-15",
            "capec_name": "Command Delimiters",
            "capec_description": "An attack of this type exploits a programs' vulnerabilities that allows an attacker's commands to be concatenated onto a legitimate command with the intent of targeting other resources such as the file system or database. The system that uses a filter or denylist input validation, as opposed to allowlist validation is vulnerable to an attacker who predicts delimiters (or combinations of delimiters) not present in the filter or denylist. As with other injection attacks, the attacker uses the command delimiter payload as an entry point to tunnel through the application and activate additional attacks through SQL queries, shell commands, network scanning, and so on.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Perform allowlist validation against a positive specification for command length, type, and parameters.",
              "Design: Limit program privileges, so if commands circumvent program input validation or filter routines then commands do not running under a privileged account",
              "Implementation: Perform input validation for all remote content.",
              "Implementation: Use type conversions such as JDBC prepared statements."
            ],
            "related_cwe": [
              "CWE-146",
              "CWE-77",
              "CWE-184",
              "CWE-78",
              "CWE-185",
              "CWE-93",
              "CWE-140",
              "CWE-157",
              "CWE-138",
              "CWE-154",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-183",
            "capec_name": "IMAP/SMTP Command Injection",
            "capec_description": "An adversary exploits weaknesses in input validation on web-mail servers to execute commands on the IMAP/SMTP server. Web-mail servers often sit between the Internet and the IMAP or SMTP mail server. User requests are received by the web-mail servers which then query the back-end mail server for the requested information and return this response to the user. In an IMAP/SMTP command injection attack, mail-server commands are embedded in parts of the request sent to the web-mail server. If the web-mail server fails to adequately sanitize these requests, these commands are then sent to the back-end mail server when it is queried by the web-mail server, where the commands are then executed. This attack can be especially dangerous since administrators may assume that the back-end server is protected against direct Internet access and therefore may not secure it adequately against the execution of malicious commands.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-77"]
          },
          {
            "capec_id": "CAPEC-248",
            "capec_name": "Command Injection",
            "capec_description": "An adversary looking to execute a command of their choosing, injects new items into an existing command thus modifying interpretation away from what was intended. Commands in this context are often standalone strings that are interpreted by a downstream component and cause specific responses. This type of attack is possible when untrusted values are used to build these command strings. Weaknesses in input validation or command construction can enable the attack and lead to successful exploitation.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "All user-controllable input should be validated and filtered for potentially unwanted characters. Using an allowlist for input is desired, but if use of a denylist approach is necessary, then focusing on command related terms and delimiters is necessary.",
              "Input should be encoded prior to use in commands to make sure command related characters are not treated as part of the command. For example, quotation characters may need to be encoded so that the application does not treat the quotation as a delimiter.",
              "Input should be parameterized, or restricted to data sections of a command, thus removing the chance that the input will be treated as part of the command itself."
            ],
            "related_cwe": ["CWE-77"]
          },
          {
            "capec_id": "CAPEC-40",
            "capec_name": "Manipulating Writeable Terminal Devices",
            "capec_description": "This attack exploits terminal devices that allow themselves to be written to by other users. The attacker sends command strings to the target terminal device hoping that the target user will hit enter and thereby execute the malicious command with their privileges. The attacker can send the results (such as copying /etc/passwd) to a known directory and collect once the attack has succeeded.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Ensure that terminals are only writeable by named owner user and/or administrator",
              "Design: Enforce principle of least privilege"
            ],
            "related_cwe": ["CWE-77"]
          },
          {
            "capec_id": "CAPEC-43",
            "capec_name": "Exploiting Multiple Input Interpretation Layers",
            "capec_description": "An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: <parser1> --> <input validator> --> <parser2>. In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it.",
              "Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist would not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-179",
              "CWE-181",
              "CWE-184",
              "CWE-183",
              "CWE-77",
              "CWE-78",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-75",
            "capec_name": "Manipulating Writeable Configuration Files",
            "capec_description": "Generally these are manually edited files that are not in the preview of the system administrators, any ability on the attackers' behalf to modify these files, for example in a CVS repository, gives unauthorized access directly to the application, the same as authorized users.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege",
              "Design: Backup copies of all configuration files",
              "Implementation: Integrity monitoring for configuration files",
              "Implementation: Enforce audit logging on code and configuration promotion procedures.",
              "Implementation: Load configuration from separate process and memory space, for example a separate physical device like a CD"
            ],
            "related_cwe": [
              "CWE-349",
              "CWE-99",
              "CWE-77",
              "CWE-346",
              "CWE-353",
              "CWE-354"
            ]
          },
          {
            "capec_id": "CAPEC-76",
            "capec_name": "Manipulating Web Input to File System Calls",
            "capec_description": "An attacker manipulates inputs to the target software which the target software passes to file system calls in the OS. The goal is to gain access to, and perhaps modify, areas of the file system that the target software did not intend to be accessible.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege.",
              "Design: Ensure all input is validated, and does not contain file system commands",
              "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
              "Design: For interactive user applications, consider if direct file system interface is necessary, instead consider having the application proxy communication.",
              "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables."
            ],
            "related_cwe": [
              "CWE-23",
              "CWE-22",
              "CWE-73",
              "CWE-77",
              "CWE-346",
              "CWE-348",
              "CWE-285",
              "CWE-272",
              "CWE-59",
              "CWE-74",
              "CWE-15"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-7101",
    "cve_name": "",
    "cve_description": "Spreadsheet::ParseExcel version 0.65 is a Perl module used for parsing Excel files. Spreadsheet::ParseExcel is vulnerable to an arbitrary code execution (ACE) vulnerability due to passing unvalidated input from a file into a string-type “eval”. Specifically, the issue stems from the evaluation of Number format strings (not to be confused with printf-style format strings) within the Excel parsing logic.",
    "cve_category": [],
    "cve_published_at": "Published 2023-12-24 22:15:08",
    "cve_updated_at": "Updated 2024-01-09 20:07:42",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Debian » Debian Linux » Version: 10.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 38 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:38:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 39 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:39:*:*:*:*:*:*:*"
      },
      {
        "version": "Jmcnamara » Spreadsheet::parseexcel » For Perl Versions up to, including, (<=) 0.65",
        "detail": "cpe:2.3:a:jmcnamara:spreadsheet\\:\\:parseexcel:*:*:*:*:*:perl:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-94",
        "cwe_name": "Improper Control of Generation of Code ('Code Injection')",
        "cwe_description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "cwe_extended_description": "When a product allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the product. Such an alteration could lead to arbitrary code execution.\n\nInjection problems encompass a wide variety of issues -- all mitigated in very different ways. For this reason, the most effective way to discuss these weaknesses is to note the distinct features which classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed. The most classic instantiations of this category of weakness are SQL injection and format string vulnerabilities.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-2054",
            "name": "CVE-2022-2054",
            "des": "Python compiler uses eval() to execute malicious strings as Python code."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-22204",
            "name": "CVE-2021-22204",
            "des": "Chain: regex in EXIF processor code does not correctly determine where a string ends (CWE-625), enabling eval injection (CWE-95), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-8218",
            "name": "CVE-2020-8218",
            "des": "\"Code injection\" in VPN product, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5071",
            "name": "CVE-2008-5071",
            "des": "Eval injection in PHP program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1750",
            "name": "CVE-2002-1750",
            "des": "Eval injection in Perl program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5305",
            "name": "CVE-2008-5305",
            "des": "Eval injection in Perl program using an ID that should only contain hyphens and numbers."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1752",
            "name": "CVE-2002-1752",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1753",
            "name": "CVE-2002-1753",
            "des": "Eval injection in Perl program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1527",
            "name": "CVE-2005-1527",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2837",
            "name": "CVE-2005-2837",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1921",
            "name": "CVE-2005-1921",
            "des": "MFV. code injection into PHP eval statement using nested constructs that should not be nested."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2498",
            "name": "CVE-2005-2498",
            "des": "MFV. code injection into PHP eval statement using nested constructs that should not be nested."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3302",
            "name": "CVE-2005-3302",
            "des": "Code injection into Python eval statement from a field in a formatted file."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-1253",
            "name": "CVE-2007-1253",
            "des": "Eval injection in Python program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1471",
            "name": "CVE-2001-1471",
            "des": "chain: Resultant eval injection. An invalid value prevents initialization of variables, which can be modified by attacker and later injected into PHP eval statement."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0495",
            "name": "CVE-2002-0495",
            "des": "Perl code directly injected into CGI library file from parameters to another CGI program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1876",
            "name": "CVE-2005-1876",
            "des": "Direct PHP code injection into supporting template file."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1894",
            "name": "CVE-2005-1894",
            "des": "Direct code injection into PHP script that can be accessed by attacker."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0395",
            "name": "CVE-2003-0395",
            "des": "PHP code from User-Agent HTTP header directly inserted into log file implemented as PHP script."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Refactor your program so that you do not have to dynamically generate code."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Run your code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which code can be executed by your product.",
              "Examples include the Unix chroot jail and AppArmor. In general, managed code may provide some protection.",
              "This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be subject to compromise.",
              "Be careful to avoid CWE-243 and other weaknesses related to jails."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "To reduce the likelihood of code injection, use stringent allowlists that limit which constructs are allowed. If you are dynamically constructing code that invokes a function, then verifying that the input is alphanumeric might be insufficient. An attacker might still be able to reference a dangerous function that you did not intend to allow, such as system(), exec(), or exit()."
            ]
          },
          {
            "subheading": "Phase: Testing",
            "des": [
              "Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible."
            ]
          },
          {
            "subheading": "Phase: Testing",
            "des": [
              "Use dynamic tools and techniques that interact with the product using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The product's operation may slow down, but it should not become unstable, crash, or generate incorrect results."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run the code in an environment that performs automatic taint propagation and prevents any command execution that uses tainted variables, such as Perl's \"-T\" switch. This will force the program to perform validation steps that remove the taint, although you must be careful to correctly validate your inputs so that you do not accidentally mark dangerous inputs as untainted (see CWE-183 and CWE-184)."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run the code in an environment that performs automatic taint propagation and prevents any command execution that uses tainted variables, such as Perl's \"-T\" switch. This will force the program to perform validation steps that remove the taint, although you must be careful to correctly validate your inputs so that you do not accidentally mark dangerous inputs as untainted (see CWE-183 and CWE-184)."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-242",
            "capec_name": "Code Injection",
            "capec_description": "An adversary exploits a weakness in input validation on the target to inject new code into that which is currently executing. This differs from code inclusion in that code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Utilize strict type, character, and encoding enforcement",
              "Ensure all input content that is delivered to client is sanitized against an acceptable content specification.",
              "Perform input validation for all content.",
              "Enforce regular patching of software."
            ],
            "related_cwe": ["CWE-94"]
          },
          {
            "capec_id": "CAPEC-35",
            "capec_name": "Leverage Executable Code in Non-Executable Files",
            "capec_description": "An attack of this type exploits a system's trust in configuration and resource files. When the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege",
              "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
              "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables.",
              "Implementation: Implement host integrity monitoring to detect any unwanted altering of configuration files.",
              "Implementation: Ensure that files that are not required to execute, such as configuration files, are not over-privileged, i.e. not allowed to execute."
            ],
            "related_cwe": [
              "CWE-94",
              "CWE-96",
              "CWE-95",
              "CWE-97",
              "CWE-272",
              "CWE-59",
              "CWE-282",
              "CWE-270"
            ]
          },
          {
            "capec_id": "CAPEC-77",
            "capec_name": "Manipulating User-Controlled Variables",
            "capec_description": "This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An adversary can override variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the adversary can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Do not allow override of global variables and do Not Trust Global Variables.\n\nIf the register_globals option is enabled, PHP will create global variables for each GET, POST, and cookie variable included in the HTTP request. This means that a malicious user may be able to set variables unexpectedly. For instance make sure that the server setting for PHP does not expose global variables.",
              "A software system should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary.",
              "Separate the presentation layer and the business logic layer. Variables at the business logic layer should not be exposed at the presentation layer. This is to prevent computation of business logic from user controlled input data.",
              "Use encapsulation when declaring your variables. This is to lower the exposure of your variables.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should be rejected by the program."
            ],
            "related_cwe": [
              "CWE-15",
              "CWE-94",
              "CWE-96",
              "CWE-285",
              "CWE-302",
              "CWE-473",
              "CWE-1321"
            ]
          }
        ]
      },
      {
        "cwe_id": "CWE-95",
        "cwe_name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
        "cwe_description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\").",
        "cwe_extended_description": "This may allow an attacker to execute arbitrary code, or at least modify what code can be executed.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-2054",
            "name": "CVE-2022-2054",
            "des": "Python compiler uses eval() to execute malicious strings as Python code."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-22204",
            "name": "CVE-2021-22204",
            "des": "Chain: regex in EXIF processor code does not correctly determine where a string ends (CWE-625), enabling eval injection (CWE-95), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-22205",
            "name": "CVE-2021-22205",
            "des": "Chain: backslash followed by a newline can bypass a validation step (CWE-20), leading to eval injection (CWE-95), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5071",
            "name": "CVE-2008-5071",
            "des": "Eval injection in PHP program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1750",
            "name": "CVE-2002-1750",
            "des": "Eval injection in Perl program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5305",
            "name": "CVE-2008-5305",
            "des": "Eval injection in Perl program using an ID that should only contain hyphens and numbers."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1752",
            "name": "CVE-2002-1752",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1753",
            "name": "CVE-2002-1753",
            "des": "Eval injection in Perl program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1527",
            "name": "CVE-2005-1527",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2837",
            "name": "CVE-2005-2837",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1921",
            "name": "CVE-2005-1921",
            "des": "MFV. code injection into PHP eval statement using nested constructs that should not be nested."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2498",
            "name": "CVE-2005-2498",
            "des": "MFV. code injection into PHP eval statement using nested constructs that should not be nested."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3302",
            "name": "CVE-2005-3302",
            "des": "Code injection into Python eval statement from a field in a formatted file."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-1253",
            "name": "CVE-2007-1253",
            "des": "Eval injection in Python program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1471",
            "name": "CVE-2001-1471",
            "des": "chain: Resultant eval injection. An invalid value prevents initialization of variables, which can be modified by attacker and later injected into PHP eval statement."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-2713",
            "name": "CVE-2007-2713",
            "des": "Chain: Execution after redirect triggers eval injection."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "If possible, refactor your code so that it does not need to use eval() at all."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180, CWE-181). Make sure that your application does not inadvertently decode the same input twice (CWE-174). Such errors could be used to bypass allowlist schemes by introducing dangerous inputs after they have been checked. Use libraries such as the OWASP ESAPI Canonicalization control.",
              "Consider performing repeated canonicalization until your input does not change any more. This will avoid double-decoding and similar scenarios, but it might inadvertently modify inputs that are allowed to contain properly-encoded dangerous content."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-35",
            "capec_name": "Leverage Executable Code in Non-Executable Files",
            "capec_description": "An attack of this type exploits a system's trust in configuration and resource files. When the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege",
              "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
              "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables.",
              "Implementation: Implement host integrity monitoring to detect any unwanted altering of configuration files.",
              "Implementation: Ensure that files that are not required to execute, such as configuration files, are not over-privileged, i.e. not allowed to execute."
            ],
            "related_cwe": [
              "CWE-94",
              "CWE-96",
              "CWE-95",
              "CWE-97",
              "CWE-272",
              "CWE-59",
              "CWE-282",
              "CWE-270"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-7024",
    "cve_name": "",
    "cve_description": "Heap buffer overflow in WebRTC in Google Chrome prior to 120.0.6099.129 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)",
    "cve_category": ["Overflow", "Memory Corruption"],
    "cve_published_at": "Published 2023-12-21 23:15:11",
    "cve_updated_at": "Updated 2024-01-03 02:00:01",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
      "exploitability_score": "2.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Debian » Debian Linux » Version: 11.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:11.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Debian » Debian Linux » Version: 12.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:12.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Google » Chrome Versions before (<) 120.0.6099.129",
        "detail": "cpe:2.3:a:google:chrome:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 38 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:38:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 39 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:39:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-787",
        "cwe_name": "Out-of-bounds Write",
        "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "cwe_extended_description": "Typically, this can result in corruption of data, a crash, or code execution. The product may modify an index or perform pointer arithmetic that references a memory location that is outside of the boundaries of the buffer. A subsequent write operation then produces undefined or unexpected results.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21220",
            "name": "CVE-2021-21220",
            "des": "Chain: insufficient input validation (CWE-20) in browser allows heap corruption (CWE-787), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-28664",
            "name": "CVE-2021-28664",
            "des": "GPU kernel driver allows memory corruption because a user can obtain read/write access to read-only pages, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-17087",
            "name": "CVE-2020-17087",
            "des": "Chain: integer truncation (CWE-197) causes small buffer allocation (CWE-131) leading to out-of-bounds write (CWE-787) in kernel pool, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-1054",
            "name": "CVE-2020-1054",
            "des": "Out-of-bounds write in kernel-mode driver, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0041",
            "name": "CVE-2020-0041",
            "des": "Escape from browser sandbox using out-of-bounds write due to incorrect bounds check, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0968",
            "name": "CVE-2020-0968",
            "des": "Memory corruption in web browser scripting engine, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0022",
            "name": "CVE-2020-0022",
            "des": "chain: mobile phone Bluetooth implementation does not include offset when calculating packet length (CWE-682), leading to out-of-bounds write (CWE-787)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-1010006",
            "name": "CVE-2019-1010006",
            "des": "Chain: compiler optimization (CWE-733) removes or modifies code used to detect integer overflow (CWE-190), allowing out-of-bounds write (CWE-787)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1532",
            "name": "CVE-2009-1532",
            "des": "malformed inputs cause accesses of uninitialized or previously-deleted objects, leading to memory corruption"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0269",
            "name": "CVE-2009-0269",
            "des": "chain: -1 value from a function call was intended to indicate an error, but is used as an array index instead."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-2227",
            "name": "CVE-2002-2227",
            "des": "Unchecked length of SSLv2 challenge value leads to buffer underflow."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4580",
            "name": "CVE-2007-4580",
            "des": "Buffer underflow from a small size value with a large buffer (length parameter inconsistency, CWE-130)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4268",
            "name": "CVE-2007-4268",
            "des": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2550",
            "name": "CVE-2009-2550",
            "des": "Classic stack-based buffer overflow in media player using a long entry in a playlist"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2403",
            "name": "CVE-2009-2403",
            "des": "Heap-based buffer overflow in media player using a long entry in a playlist"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, many languages that perform their own memory management, such as Java and Perl, are not subject to buffer overflows. Other languages, such as Ada and C#, typically provide overflow protection, but the protection can be disabled by the programmer.",
              "Be wary that a language's interface to native code may still be subject to overflows, even if the language itself is theoretically safe."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Examples include the Safe C String Library (SafeStr) by Messier and Viega [REF-57], and the Strsafe.h library from Microsoft [REF-56]. These libraries provide safer versions of overflow-prone string-handling functions.",
              "Note: This is not a complete solution, since many buffer overflows are not related to strings."
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking.",
              "D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Consider adhering to the following rules when allocating and managing an application's memory:"
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code.",
              "Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as \"rebasing\" (for Windows) and \"prelinking\" (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking.",
              "For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].",
              "Note: These techniques do not provide a complete solution. For instance, exploits frequently use a bug that discloses memory addresses in order to maximize reliability of code execution [REF-1337]. It has also been shown that a side-channel attack can bypass ASLR [REF-1333]"
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment.",
              "For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].",
              "Note: This is not a complete solution, since buffer overflows could be used to overwrite nearby variables to modify the software's state in dangerous ways. In addition, it cannot be used in cases in which self-modifying code is required. Finally, an attack could still cause a denial of service, since the typical response is to exit the application."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Replace unbounded copy functions with analogous functions that support length arguments, such as strcpy with strncpy. Create these if they are not available.",
              "Note: This approach is still susceptible to calculation errors, including issues such as off-by-one errors (CWE-193) and incorrectly calculating buffer lengths (CWE-131)."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Automated static analysis generally does not account for environmental considerations when reporting out-of-bounds memory operations. This can make it difficult for users to determine which warnings should be investigated first. For example, an analysis tool might report buffer overflows that originate from command line arguments in a program that is not expected to run with setuid or other special privileges.",
              "Effectiveness: High",
              "Note: Detection techniques for buffer-related errors are more mature than for most other weakness types."
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results."
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2023-49897",
    "cve_name": "",
    "cve_description": "An OS command injection vulnerability exists in AE1021PE firmware version 2.0.9 and earlier and AE1021 firmware version 2.0.9 and earlier. If this vulnerability is exploited, an arbitrary OS command may be executed by an attacker who can log in to the product.",
    "cve_category": [],
    "cve_published_at": "Published 2023-12-06 07:15:42",
    "cve_updated_at": "Updated 2023-12-22 04:15:09",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "2.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "FXC » Ae1021 Firmware Versions before (<) 2.0.10",
        "detail": "cpe:2.3:o:fxc:ae1021_firmware:*:*:*:*:*:*:*:*"
      },
      {
        "version": "FXC » Ae1021pe Firmware Versions before (<) 2.0.10",
        "detail": "cpe:2.3:o:fxc:ae1021pe_firmware:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-78",
        "cwe_name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "cwe_description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "cwe_extended_description": "This could allow attackers to execute unexpected, dangerous commands directly on the operating system. This weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications. Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage.\n\nThere are at least two subtypes of OS command injection:\n\nThe application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(\"nslookup [HOSTNAME]\") to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.\nThe application accepts an input that it uses to fully select which program to run, as well as which commands to use. The application simply redirects this entire command to the operating system. For example, the program might use \"exec([COMMAND])\" to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line.\n\nFrom a weakness standpoint, these variants represent distinct programmer errors. In the first variant, the programmer clearly intends that input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-10987",
            "name": "CVE-2020-10987",
            "des": "OS command injection in Wi-Fi router, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-10221",
            "name": "CVE-2020-10221",
            "des": "Template functionality in network configuration management tool allows OS command injection, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-9054",
            "name": "CVE-2020-9054",
            "des": "Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-1999-0067",
            "name": "CVE-1999-0067",
            "des": "Canonical example of OS command injection. CGI program does not neutralize \"|\" metacharacter when invoking a phonebook program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1246",
            "name": "CVE-2001-1246",
            "des": "Language interpreter's mail function accepts another argument that is concatenated to a string used in a dangerous popen() call. Since there is no neutralization of this argument, both OS Command Injection (CWE-78) and Argument Injection (CWE-88) are possible."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0061",
            "name": "CVE-2002-0061",
            "des": "Web server allows command execution using \"|\" (pipe) character."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0041",
            "name": "CVE-2003-0041",
            "des": "FTP client does not filter \"|\" from filenames returned by the server, allowing for OS command injection."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2575",
            "name": "CVE-2008-2575",
            "des": "Shell metacharacters in a filename in a ZIP archive"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1898",
            "name": "CVE-2002-1898",
            "des": "Shell metacharacters in a telnet:// link are not properly handled when the launching application processes the link."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4304",
            "name": "CVE-2008-4304",
            "des": "OS command injection through environment variable."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4796",
            "name": "CVE-2008-4796",
            "des": "OS command injection through https:// URLs"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-3572",
            "name": "CVE-2007-3572",
            "des": "Chain: incomplete denylist for OS command injection"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-1988",
            "name": "CVE-2012-1988",
            "des": "Product allows remote users to execute arbitrary commands by creating a file whose pathname contains shell metacharacters."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "If at all possible, use library calls rather than external processes to recreate the desired functionality."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Run the code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software.",
              "OS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations.",
              "This may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise.",
              "Be careful to avoid CWE-243 and other weaknesses related to jails.",
              "Note: The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting the portion of the file system that can be accessed."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any data that will be used to generate a command to be executed, keep as much of that data out of external control as possible. For example, in web applications, this may require storing the data locally in the session's state instead of sending it out to the client in a hidden form field."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, consider using the ESAPI Encoding control [REF-45] or a similar tool, library, or framework. These will help the programmer encode outputs in a manner less prone to error."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88)."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "If the program to be executed allows arguments to be specified within an input file or from standard input, then consider using that mode to pass arguments instead of the command line."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "If available, use structured mechanisms that automatically enforce the separation between data and code. These mechanisms may be able to provide the relevant quoting, encoding, and validation automatically, instead of relying on the developer to provide this capability at every point where output is generated.",
              "Some languages offer multiple functions that can be used to invoke commands. Where possible, identify any function that invokes a command shell using a single string, and replace it with a function that requires individual arguments. These functions typically perform appropriate quoting and filtering of arguments. For example, in C, the system() function accepts a string that contains the entire command to be executed, whereas execl(), execve(), and others require an array of strings, one for each argument. In Windows, CreateProcess() only accepts one command at a time. In Perl, if system() is provided with an array of arguments, then it will quote each of the arguments."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "When constructing OS command strings, use stringent allowlists that limit the character set based on the expected value of the parameter in the request. This will indirectly limit the scope of an attack, but this technique is less important than proper output encoding and escaping.",
              "Note that proper output encoding, escaping, and quoting is the most effective solution for preventing OS command injection, although input validation may provide some defense-in-depth. This is because it effectively limits what will appear in output. Input validation will not always prevent OS command injection, especially if you are required to support free-form text fields that could contain arbitrary characters. For example, when invoking a mail program, you might need to allow the subject field to contain otherwise-dangerous inputs like \";\" and \">\" characters, which would need to be escaped or otherwise handled. In this case, stripping the character might reduce the risk of OS command injection, but it would produce incorrect behavior because the subject field would not be recorded as the user intended. This might seem to be a minor inconvenience, but it could be more important when the program relies on well-structured subject lines in order to pass messages to other components.",
              "Even if you make a mistake in your validation (such as forgetting one out of 100 input fields), appropriate encoding is still likely to protect you from injection-based attacks. As long as it is not done in isolation, input validation is still a useful technique, since it may significantly reduce your attack surface, allow you to detect some attacks, and provide other security benefits that proper encoding does not address."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run the code in an environment that performs automatic taint propagation and prevents any command execution that uses tainted variables, such as Perl's \"-T\" switch. This will force the program to perform validation steps that remove the taint, although you must be careful to correctly validate your inputs so that you do not accidentally mark dangerous inputs as untainted (see CWE-183 and CWE-184)."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run the code in an environment that performs automatic taint propagation and prevents any command execution that uses tainted variables, such as Perl's \"-T\" switch. This will force the program to perform validation steps that remove the taint, although you must be careful to correctly validate your inputs so that you do not accidentally mark dangerous inputs as untainted (see CWE-183 and CWE-184)."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success.",
              "If errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files.",
              "Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.",
              "In the context of OS Command Injection, error information passed back to the user might reveal whether an OS command is being executed and possibly which command is being used."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use runtime policy enforcement to create an allowlist of allowable commands, then prevent use of any command that does not appear in the allowlist. Technologies such as AppArmor are available to do this."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.",
              "Note: An application firewall might not cover all possible input vectors. In addition, attack techniques might be available to bypass the protection mechanism, such as using malformed inputs that can still be processed by the component that receives those inputs. Depending on functionality, an application firewall might inadvertently reject or modify legitimate requests. Finally, some manual effort may be required for customization."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations."
            ]
          },
          {
            "subheading": "Phases: Operation; Implementation",
            "des": [
              "When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Automated static analysis might not be able to recognize when proper input validation is being performed, leading to false positives - i.e., warnings that do not have any security consequences or require any code changes.",
              "Automated static analysis might not be able to detect the usage of custom API functions or third-party libraries that indirectly invoke OS commands, leading to false negatives - especially if the API/library code is not available for analysis.",
              "Note: This is not a perfect solution, since 100% accuracy and coverage are not feasible."
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "This weakness can be detected using dynamic tools and techniques that interact with the product using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The product's operation may slow down, but it should not become unstable, crash, or generate incorrect results.",
              "Effectiveness: Moderate"
            ]
          },
          {
            "subheading": "Manual Static Analysis",
            "des": [
              "Since this weakness does not typically appear frequently within a single software package, manual white box techniques may be able to provide sufficient code coverage and reduction of false positives if all potentially-vulnerable operations can be assessed within limited time constraints.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-108",
            "capec_name": "Command Line Execution through SQL Injection",
            "capec_description": "An attacker uses standard SQL injection methods to inject data into the command line for execution. This could be done directly through misuse of directives such as MSSQL_xp_cmdshell or indirectly through injection of data into the database that would be interpreted as shell commands. Sometime later, an unscrupulous backend application (or could be part of the functionality of the same application) fetches the injected data stored in the database and uses this data as command line arguments without performing proper validation. The malicious data escapes that data plane by spawning new commands to be executed on the host.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Very High",
            "mitigations": [
              "Disable MSSQL xp_cmdshell directive on the database",
              "Properly validate the data (syntactically and semantically) before writing it to the database.",
              "Do not implicitly trust the data stored in the database. Re-validate it prior to usage to make sure that it is safe to use in a given context (e.g. as a command line argument)."
            ],
            "related_cwe": ["CWE-89", "CWE-74", "CWE-20", "CWE-78", "CWE-114"]
          },
          {
            "capec_id": "CAPEC-15",
            "capec_name": "Command Delimiters",
            "capec_description": "An attack of this type exploits a programs' vulnerabilities that allows an attacker's commands to be concatenated onto a legitimate command with the intent of targeting other resources such as the file system or database. The system that uses a filter or denylist input validation, as opposed to allowlist validation is vulnerable to an attacker who predicts delimiters (or combinations of delimiters) not present in the filter or denylist. As with other injection attacks, the attacker uses the command delimiter payload as an entry point to tunnel through the application and activate additional attacks through SQL queries, shell commands, network scanning, and so on.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Perform allowlist validation against a positive specification for command length, type, and parameters.",
              "Design: Limit program privileges, so if commands circumvent program input validation or filter routines then commands do not running under a privileged account",
              "Implementation: Perform input validation for all remote content.",
              "Implementation: Use type conversions such as JDBC prepared statements."
            ],
            "related_cwe": [
              "CWE-146",
              "CWE-77",
              "CWE-184",
              "CWE-78",
              "CWE-185",
              "CWE-93",
              "CWE-140",
              "CWE-157",
              "CWE-138",
              "CWE-154",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-43",
            "capec_name": "Exploiting Multiple Input Interpretation Layers",
            "capec_description": "An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: <parser1> --> <input validator> --> <parser2>. In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it.",
              "Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist would not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-179",
              "CWE-181",
              "CWE-184",
              "CWE-183",
              "CWE-77",
              "CWE-78",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-6",
            "capec_name": "Argument Injection",
            "capec_description": "An attacker changes the behavior or state of a targeted application through injecting data or command syntax through the targets use of non-validated and non-filtered arguments of exposed services or methods.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Do not program input values directly on command shell, instead treat user input as guilty until proven innocent. Build a function that takes user input and converts it to applications specific types and values, stripping or filtering out all unauthorized commands and characters in the process.",
              "Design: Limit program privileges, so if metacharacters or other methods circumvent program input validation routines and shell access is attained then it is not running under a privileged account. chroot jails create a sandbox for the application to execute in, making it more difficult for an attacker to elevate privilege even in the case that a compromise has occurred.",
              "Implementation: Implement an audit log that is written to a separate host, in the event of a compromise the audit log may be able to provide evidence and details of the compromise."
            ],
            "related_cwe": [
              "CWE-74",
              "CWE-146",
              "CWE-184",
              "CWE-78",
              "CWE-185",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-88",
            "capec_name": "OS Command Injection",
            "capec_description": "In this type of an attack, an adversary injects operating system commands into existing application functions. An application that uses untrusted input to build command strings is vulnerable. An adversary can leverage OS command injection in an application to elevate privileges, execute arbitrary commands and compromise the underlying operating system.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use language APIs rather than relying on passing data to the operating system shell or command line. Doing so ensures that the available protection mechanisms in the language are intact and applicable.",
              "Filter all incoming data to escape or remove characters or strings that can be potentially misinterpreted as operating system or shell commands",
              "All application processes should be run with the minimal privileges required. Also, processes must shed privileges as soon as they no longer require them."
            ],
            "related_cwe": ["CWE-78", "CWE-88", "CWE-20", "CWE-697"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-47565",
    "cve_name": "",
    "cve_description": "An OS command injection vulnerability has been found to affect legacy QNAP VioStor NVR models running QVR Firmware 4.x. If exploited, the vulnerability could allow authenticated users to execute commands via a network.\n\nWe have already fixed the vulnerability in the following versions:\n\nQVR Firmware 5.0.0 and later",
    "cve_category": [],
    "cve_published_at": "Published 2023-12-08 16:15:16",
    "cve_updated_at": "Updated 2023-12-22 02:00:01",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "2.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Qnap » Qvr Firmware Versions from including (>=) 4.0.0 and before (<) 5.0.0",
        "detail": "cpe:2.3:o:qnap:qvr_firmware:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-78",
        "cwe_name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "cwe_description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "cwe_extended_description": "This could allow attackers to execute unexpected, dangerous commands directly on the operating system. This weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications. Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage.\n\nThere are at least two subtypes of OS command injection:\n\nThe application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(\"nslookup [HOSTNAME]\") to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.\nThe application accepts an input that it uses to fully select which program to run, as well as which commands to use. The application simply redirects this entire command to the operating system. For example, the program might use \"exec([COMMAND])\" to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line.\n\nFrom a weakness standpoint, these variants represent distinct programmer errors. In the first variant, the programmer clearly intends that input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-10987",
            "name": "CVE-2020-10987",
            "des": "OS command injection in Wi-Fi router, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-10221",
            "name": "CVE-2020-10221",
            "des": "Template functionality in network configuration management tool allows OS command injection, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-9054",
            "name": "CVE-2020-9054",
            "des": "Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-1999-0067",
            "name": "CVE-1999-0067",
            "des": "Canonical example of OS command injection. CGI program does not neutralize \"|\" metacharacter when invoking a phonebook program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1246",
            "name": "CVE-2001-1246",
            "des": "Language interpreter's mail function accepts another argument that is concatenated to a string used in a dangerous popen() call. Since there is no neutralization of this argument, both OS Command Injection (CWE-78) and Argument Injection (CWE-88) are possible."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0061",
            "name": "CVE-2002-0061",
            "des": "Web server allows command execution using \"|\" (pipe) character."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0041",
            "name": "CVE-2003-0041",
            "des": "FTP client does not filter \"|\" from filenames returned by the server, allowing for OS command injection."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2575",
            "name": "CVE-2008-2575",
            "des": "Shell metacharacters in a filename in a ZIP archive"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1898",
            "name": "CVE-2002-1898",
            "des": "Shell metacharacters in a telnet:// link are not properly handled when the launching application processes the link."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4304",
            "name": "CVE-2008-4304",
            "des": "OS command injection through environment variable."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4796",
            "name": "CVE-2008-4796",
            "des": "OS command injection through https:// URLs"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-3572",
            "name": "CVE-2007-3572",
            "des": "Chain: incomplete denylist for OS command injection"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-1988",
            "name": "CVE-2012-1988",
            "des": "Product allows remote users to execute arbitrary commands by creating a file whose pathname contains shell metacharacters."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "If at all possible, use library calls rather than external processes to recreate the desired functionality."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Run the code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software.",
              "OS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations.",
              "This may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise.",
              "Be careful to avoid CWE-243 and other weaknesses related to jails.",
              "Note: The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting the portion of the file system that can be accessed."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any data that will be used to generate a command to be executed, keep as much of that data out of external control as possible. For example, in web applications, this may require storing the data locally in the session's state instead of sending it out to the client in a hidden form field."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, consider using the ESAPI Encoding control [REF-45] or a similar tool, library, or framework. These will help the programmer encode outputs in a manner less prone to error."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88)."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "If the program to be executed allows arguments to be specified within an input file or from standard input, then consider using that mode to pass arguments instead of the command line."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "If available, use structured mechanisms that automatically enforce the separation between data and code. These mechanisms may be able to provide the relevant quoting, encoding, and validation automatically, instead of relying on the developer to provide this capability at every point where output is generated.",
              "Some languages offer multiple functions that can be used to invoke commands. Where possible, identify any function that invokes a command shell using a single string, and replace it with a function that requires individual arguments. These functions typically perform appropriate quoting and filtering of arguments. For example, in C, the system() function accepts a string that contains the entire command to be executed, whereas execl(), execve(), and others require an array of strings, one for each argument. In Windows, CreateProcess() only accepts one command at a time. In Perl, if system() is provided with an array of arguments, then it will quote each of the arguments."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "When constructing OS command strings, use stringent allowlists that limit the character set based on the expected value of the parameter in the request. This will indirectly limit the scope of an attack, but this technique is less important than proper output encoding and escaping.",
              "Note that proper output encoding, escaping, and quoting is the most effective solution for preventing OS command injection, although input validation may provide some defense-in-depth. This is because it effectively limits what will appear in output. Input validation will not always prevent OS command injection, especially if you are required to support free-form text fields that could contain arbitrary characters. For example, when invoking a mail program, you might need to allow the subject field to contain otherwise-dangerous inputs like \";\" and \">\" characters, which would need to be escaped or otherwise handled. In this case, stripping the character might reduce the risk of OS command injection, but it would produce incorrect behavior because the subject field would not be recorded as the user intended. This might seem to be a minor inconvenience, but it could be more important when the program relies on well-structured subject lines in order to pass messages to other components.",
              "Even if you make a mistake in your validation (such as forgetting one out of 100 input fields), appropriate encoding is still likely to protect you from injection-based attacks. As long as it is not done in isolation, input validation is still a useful technique, since it may significantly reduce your attack surface, allow you to detect some attacks, and provide other security benefits that proper encoding does not address."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run the code in an environment that performs automatic taint propagation and prevents any command execution that uses tainted variables, such as Perl's \"-T\" switch. This will force the program to perform validation steps that remove the taint, although you must be careful to correctly validate your inputs so that you do not accidentally mark dangerous inputs as untainted (see CWE-183 and CWE-184)."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run the code in an environment that performs automatic taint propagation and prevents any command execution that uses tainted variables, such as Perl's \"-T\" switch. This will force the program to perform validation steps that remove the taint, although you must be careful to correctly validate your inputs so that you do not accidentally mark dangerous inputs as untainted (see CWE-183 and CWE-184)."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success.",
              "If errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files.",
              "Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.",
              "In the context of OS Command Injection, error information passed back to the user might reveal whether an OS command is being executed and possibly which command is being used."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use runtime policy enforcement to create an allowlist of allowable commands, then prevent use of any command that does not appear in the allowlist. Technologies such as AppArmor are available to do this."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.",
              "Note: An application firewall might not cover all possible input vectors. In addition, attack techniques might be available to bypass the protection mechanism, such as using malformed inputs that can still be processed by the component that receives those inputs. Depending on functionality, an application firewall might inadvertently reject or modify legitimate requests. Finally, some manual effort may be required for customization."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations."
            ]
          },
          {
            "subheading": "Phases: Operation; Implementation",
            "des": [
              "When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Automated static analysis might not be able to recognize when proper input validation is being performed, leading to false positives - i.e., warnings that do not have any security consequences or require any code changes.",
              "Automated static analysis might not be able to detect the usage of custom API functions or third-party libraries that indirectly invoke OS commands, leading to false negatives - especially if the API/library code is not available for analysis.",
              "Note: This is not a perfect solution, since 100% accuracy and coverage are not feasible."
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "This weakness can be detected using dynamic tools and techniques that interact with the product using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The product's operation may slow down, but it should not become unstable, crash, or generate incorrect results.",
              "Effectiveness: Moderate"
            ]
          },
          {
            "subheading": "Manual Static Analysis",
            "des": [
              "Since this weakness does not typically appear frequently within a single software package, manual white box techniques may be able to provide sufficient code coverage and reduction of false positives if all potentially-vulnerable operations can be assessed within limited time constraints.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-108",
            "capec_name": "Command Line Execution through SQL Injection",
            "capec_description": "An attacker uses standard SQL injection methods to inject data into the command line for execution. This could be done directly through misuse of directives such as MSSQL_xp_cmdshell or indirectly through injection of data into the database that would be interpreted as shell commands. Sometime later, an unscrupulous backend application (or could be part of the functionality of the same application) fetches the injected data stored in the database and uses this data as command line arguments without performing proper validation. The malicious data escapes that data plane by spawning new commands to be executed on the host.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Very High",
            "mitigations": [
              "Disable MSSQL xp_cmdshell directive on the database",
              "Properly validate the data (syntactically and semantically) before writing it to the database.",
              "Do not implicitly trust the data stored in the database. Re-validate it prior to usage to make sure that it is safe to use in a given context (e.g. as a command line argument)."
            ],
            "related_cwe": ["CWE-89", "CWE-74", "CWE-20", "CWE-78", "CWE-114"]
          },
          {
            "capec_id": "CAPEC-15",
            "capec_name": "Command Delimiters",
            "capec_description": "An attack of this type exploits a programs' vulnerabilities that allows an attacker's commands to be concatenated onto a legitimate command with the intent of targeting other resources such as the file system or database. The system that uses a filter or denylist input validation, as opposed to allowlist validation is vulnerable to an attacker who predicts delimiters (or combinations of delimiters) not present in the filter or denylist. As with other injection attacks, the attacker uses the command delimiter payload as an entry point to tunnel through the application and activate additional attacks through SQL queries, shell commands, network scanning, and so on.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Perform allowlist validation against a positive specification for command length, type, and parameters.",
              "Design: Limit program privileges, so if commands circumvent program input validation or filter routines then commands do not running under a privileged account",
              "Implementation: Perform input validation for all remote content.",
              "Implementation: Use type conversions such as JDBC prepared statements."
            ],
            "related_cwe": [
              "CWE-146",
              "CWE-77",
              "CWE-184",
              "CWE-78",
              "CWE-185",
              "CWE-93",
              "CWE-140",
              "CWE-157",
              "CWE-138",
              "CWE-154",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-43",
            "capec_name": "Exploiting Multiple Input Interpretation Layers",
            "capec_description": "An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: <parser1> --> <input validator> --> <parser2>. In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it.",
              "Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist would not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-179",
              "CWE-181",
              "CWE-184",
              "CWE-183",
              "CWE-77",
              "CWE-78",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-6",
            "capec_name": "Argument Injection",
            "capec_description": "An attacker changes the behavior or state of a targeted application through injecting data or command syntax through the targets use of non-validated and non-filtered arguments of exposed services or methods.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Do not program input values directly on command shell, instead treat user input as guilty until proven innocent. Build a function that takes user input and converts it to applications specific types and values, stripping or filtering out all unauthorized commands and characters in the process.",
              "Design: Limit program privileges, so if metacharacters or other methods circumvent program input validation routines and shell access is attained then it is not running under a privileged account. chroot jails create a sandbox for the application to execute in, making it more difficult for an attacker to elevate privilege even in the case that a compromise has occurred.",
              "Implementation: Implement an audit log that is written to a separate host, in the event of a compromise the audit log may be able to provide evidence and details of the compromise."
            ],
            "related_cwe": [
              "CWE-74",
              "CWE-146",
              "CWE-184",
              "CWE-78",
              "CWE-185",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-88",
            "capec_name": "OS Command Injection",
            "capec_description": "In this type of an attack, an adversary injects operating system commands into existing application functions. An application that uses untrusted input to build command strings is vulnerable. An adversary can leverage OS command injection in an application to elevate privileges, execute arbitrary commands and compromise the underlying operating system.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use language APIs rather than relying on passing data to the operating system shell or command line. Doing so ensures that the available protection mechanisms in the language are intact and applicable.",
              "Filter all incoming data to escape or remove characters or strings that can be potentially misinterpreted as operating system or shell commands",
              "All application processes should be run with the minimal privileges required. Also, processes must shed privileges as soon as they no longer require them."
            ],
            "related_cwe": ["CWE-78", "CWE-88", "CWE-20", "CWE-697"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-6448",
    "cve_name": "",
    "cve_description": "Unitronics VisiLogic before version 9.9.00, used in Vision and Samba PLCs and HMIs, uses a default administrative password. An unauthenticated attacker with network access can take administrative control of a vulnerable system.",
    "cve_category": [],
    "cve_published_at": "Published 2023-12-05 18:15:13",
    "cve_updated_at": "Updated 2023-12-19 14:15:07",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "9119a7d8-5eab-497f-8521-727c672e3725"
    },
    "cpe": [
      {
        "version": "Unitronics » Vision1210 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision1210_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision1040 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision1040_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision700 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision700_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision570 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision570_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision560 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision560_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision430 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision430_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision350 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision350_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision130 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision130_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision230 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision230_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision280 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision280_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision290 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision290_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision530 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision530_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Unitronics » Vision120 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:unitronics:vision120_firmware:-:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-798",
        "cwe_name": "Use of Hard-coded Credentials",
        "cwe_description": "The product contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.",
        "cwe_extended_description": "Hard-coded credentials typically create a significant hole that allows an attacker to bypass the authentication that has been configured by the product administrator. This hole might be difficult for the system administrator to detect. Even if detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. There are two main variations:\n\nInbound: the product contains an authentication mechanism that checks the input credentials against a hard-coded set of credentials.\nOutbound: the product connects to another system or component, and it contains hard-coded credentials for connecting to that component.\n\nIn the Inbound variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. If the password is ever discovered or published (a common occurrence on the Internet), then anybody with knowledge of this password can access the product. Finally, since all installations of the product will have the same password, even across different organizations, this enables massive attacks such as worms to take place.\n\nThe Outbound variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password which can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product. Any user of that program may be able to extract the password. Client-side systems with hard-coded passwords pose even more of a threat, since the extraction of a password from a binary is usually very simple.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29953",
            "name": "CVE-2022-29953",
            "des": "Condition Monitor firmware has a maintenance interface with hard-coded credentials"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29960",
            "name": "CVE-2022-29960",
            "des": "Engineering Workstation uses hard-coded cryptographic keys that could allow for unathorized filesystem access and privilege escalation"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29964",
            "name": "CVE-2022-29964",
            "des": "Distributed Control System (DCS) has hard-coded passwords for local shell access"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30997",
            "name": "CVE-2022-30997",
            "des": "Programmable Logic Controller (PLC) has a maintenance service that uses undocumented, hard-coded credentials"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30314",
            "name": "CVE-2022-30314",
            "des": "Firmware for a Safety Instrumented System (SIS) has hard-coded credentials for access to boot configuration"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30271",
            "name": "CVE-2022-30271",
            "des": "Remote Terminal Unit (RTU) uses a hard-coded SSH private key that is likely to be used in typical deployments"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-37555",
            "name": "CVE-2021-37555",
            "des": "Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-3503",
            "name": "CVE-2012-3503",
            "des": "Installation script has a hard-coded secret token value, allowing attackers to bypass authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2772",
            "name": "CVE-2010-2772",
            "des": "SCADA system uses a hard-coded password to protect back-end database containing authorization information, exploited by Stuxnet worm"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2073",
            "name": "CVE-2010-2073",
            "des": "FTP server library uses hard-coded usernames and passwords for three default accounts"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1573",
            "name": "CVE-2010-1573",
            "des": "Chain: Router firmware uses hard-coded username and password for access to debug functionality, which can be used to execute arbitrary code"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2369",
            "name": "CVE-2008-2369",
            "des": "Server uses hard-coded authentication key"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-0961",
            "name": "CVE-2008-0961",
            "des": "Backup product uses hard-coded username and password, allowing attackers to bypass authentication via the RPC interface"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-1160",
            "name": "CVE-2008-1160",
            "des": "Security appliance uses hard-coded password allowing attackers to gain root access"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-7142",
            "name": "CVE-2006-7142",
            "des": "Drive encryption product stores hard-coded cryptographic keys for encrypted configuration files in executable programs"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3716",
            "name": "CVE-2005-3716",
            "des": "VoIP product uses hard-coded public credentials that cannot be changed, which allows attackers to obtain sensitive information"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3803",
            "name": "CVE-2005-3803",
            "des": "VoIP product uses hard coded public and private SNMP community strings that cannot be changed, which allows remote attackers to obtain sensitive information"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0496",
            "name": "CVE-2005-0496",
            "des": "Backup product contains hard-coded credentials that effectively serve as a back door, which allows remote attackers to access the file system"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].",
              "In Windows environments, the Encrypted File System (EFS) may provide some protection."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "If the product must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.",
              "Use randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For front-end to back-end connections: Three solutions are possible, although none are complete."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Black Box",
            "des": [
              "Credential storage in configuration files is findable using black box methods, but the use of hard-coded credentials for an incoming authentication routine typically involves an account that is not visible outside of the code.",
              "Effectiveness: Moderate"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated white box techniques have been published for detecting hard-coded credentials for incoming authentication, but there is some expert disagreement regarding their effectiveness and applicability to a broad range of methods."
            ]
          },
          {
            "subheading": "Manual Static Analysis",
            "des": [
              "This weakness may be detectable using manual code analysis. Unless authentication is decentralized and applied throughout the product, there can be sufficient time for the analyst to find incoming authentication routines and examine the program logic looking for usage of hard-coded credentials. Configuration files could also be analyzed.",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."
            ]
          },
          {
            "subheading": "Manual Dynamic Analysis",
            "des": [
              "For hard-coded credentials in incoming authentication: use monitoring tools that examine the product's process as it interacts with the operating system and the network. This technique is useful in cases when source code is unavailable, if the product was not developed by you, or if you want to verify that the build phase did not introduce any new weaknesses. Examples include debuggers that directly attach to the running process; system-call tracing utilities such as truss (Solaris) and strace (Linux); system activity monitors such as FileMon, RegMon, Process Monitor, and other Sysinternals utilities (Windows); and sniffers and protocol analyzers that monitor network traffic.",
              "Attach the monitor to the process and perform a login. Using call trees or similar artifacts from the output, examine the associated behaviors and see if any of them appear to be comparing the input to a fixed string or value."
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-191",
            "capec_name": "Read Sensitive Constants Within an Executable",
            "capec_description": "An adversary engages in activities to discover any sensitive constants present within the compiled code of an executable. These constants may include literal ASCII strings within the file itself, or possibly strings hard-coded into particular routines that can be revealed by code refactoring methods including static and dynamic analysis.",
            "capec_extended_description": "One specific example of a sensitive string is a hard-coded password. Typical examples of software with hard-coded passwords include server-side executables which may check for a hard-coded password or key during a user's authentication with the server. Hard-coded passwords can also be present in client-side executables which utilize the password or key when connecting to either a remote component, such as a database server, licensing server, or otherwise, or a processes on the same host that expects a key or password. When analyzing an executable the adversary may search for the presence of such strings by analyzing the byte-code of the file itself. Example utilities for revealing strings within a file include 'strings,' 'grep,' or other variants of these programs depending upon the type of operating system used. These programs can be used to dump any ASCII or UNICODE strings contained within a program. Strings can also be searched for using a hex editors by loading the binary or object code file and utilizing native search functions such as regular expressions.\n\nAdditionally, sensitive numeric values can occur within an executable. This can be used to discover the location of cryptographic constants.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-798"]
          },
          {
            "capec_id": "CAPEC-70",
            "capec_name": "Try Common or Default Usernames and Passwords",
            "capec_description": "An adversary may try certain common or default usernames and passwords to gain access into the system and perform unauthorized actions. An adversary may try an intelligent brute force using empty passwords, known vendor default credentials, as well as a dictionary of common usernames and passwords. Many vendor products come preconfigured with default (and thus well-known) usernames and passwords that should be deleted prior to usage in a production environment. It is a common mistake to forget to remove these default login credentials. Another problem is that users would pick very simple (common) passwords (e.g. \"secret\" or \"password\") that make it easier for the attacker to gain access to the system compared to using a brute force attack or even a dictionary attack using a full dictionary.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Delete all default account credentials that may be put in by the product vendor.",
              "Implement a password throttling mechanism. This mechanism should take into account both the IP address and the log in name of the user.",
              "Put together a strong password policy and make sure that all user created passwords comply with it. Alternatively automatically generate strong passwords for users.",
              "Passwords need to be recycled to prevent aging, that is every once in a while a new password must be chosen."
            ],
            "related_cwe": [
              "CWE-521",
              "CWE-262",
              "CWE-263",
              "CWE-798",
              "CWE-654",
              "CWE-308",
              "CWE-309"
            ]
          }
        ]
      },
      {
        "cwe_id": "CWE-1188",
        "cwe_name": "Initialization of a Resource with an Insecure Default",
        "cwe_description": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
        "cwe_extended_description": "Developers often choose default values that leave the product as open and easy to use as possible out-of-the-box, under the assumption that the administrator can (or should) change the default value. However, this ease-of-use comes at a cost when the default is insecure and the administrator does not change it.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-36349",
            "name": "CVE-2022-36349",
            "des": "insecure default variable initialization in BIOS firmware for a hardware board allows DoS"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-42467",
            "name": "CVE-2022-42467",
            "des": "A generic database browser interface has a default mode that exposes a web server to the network, allowing queries to the database."
          }
        ],
        "potential_mitigations": [],
        "detection_methods": [],
        "capec": [
          {
            "capec_id": "CAPEC-665",
            "capec_name": "Exploitation of Thunderbolt Protection Flaws",
            "capec_description": "An adversary leverages a firmware weakness within the Thunderbolt protocol, on a computing device to manipulate Thunderbolt controller firmware in order to exploit vulnerabilities in the implementation of authorization and verification schemes within Thunderbolt protection mechanisms. Upon gaining physical access to a target device, the adversary conducts high-level firmware manipulation of the victim Thunderbolt controller SPI (Serial Peripheral Interface) flash, through the use of a SPI Programing device and an external Thunderbolt device, typically as the target device is booting up. If successful, this allows the adversary to modify memory, subvert authentication mechanisms, spoof identities and content, and extract data and memory from the target device. Currently 7 major vulnerabilities exist within Thunderbolt protocol with 9 attack vectors as noted in the Execution Flow.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Very High",
            "mitigations": [
              "Implementation: Kernel Direct Memory Access Protection",
              "Configuration: Enable UEFI option USB Passthrough mode - Thunderbolt 3 system port operates as USB 3.1 Type C interface",
              "Configuration: Enable UEFI option DisplayPort mode - Thunderbolt 3 system port operates as video-only DP interface",
              "Configuration: Enable UEFI option Mixed USB/DisplayPort mode - Thunderbolt 3 system port operates as USB 3.1 Type C interface with support for DP mode",
              "Configuration: Set Security Level to SL3 for Thunderbolt 2 system port",
              "Configuration: Disable PCIe tunneling to set Security Level to SL3",
              "Configuration: Disable Boot Camp upon MacOS systems"
            ],
            "related_cwe": [
              "CWE-345",
              "CWE-353",
              "CWE-288",
              "CWE-1188",
              "CWE-862"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-41266",
    "cve_name": "",
    "cve_description": "A path traversal vulnerability found in Qlik Sense Enterprise for Windows for versions May 2023 Patch 3 and earlier, February 2023 Patch 7 and earlier, November 2022 Patch 10 and earlier, and August 2022 Patch 12 and earlier allows an unauthenticated remote attacker to generate an anonymous session. This allows them to transmit HTTP requests to unauthorized endpoints. This is fixed in August 2023 IR, May 2023 Patch 4, February 2023 Patch 8, November 2022 Patch 11, and August 2022 Patch 13.",
    "cve_category": ["Directory traversal", "Input validation"],
    "cve_published_at": "Published 2023-08-29 23:15:09",
    "cve_updated_at": "Updated 2023-09-08 13:57:33",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.2",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N",
      "exploitability_score": "3.9",
      "impact_score": "4.2",
      "source": "cve@mitre.org"
    },
    "cpe": [
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:-:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 1 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_1:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 10 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_10:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 11 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_11:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 12 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_12:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 2 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_2:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 3 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_3:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 4 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_4:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 5 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_5:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 6 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_6:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 7 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_7:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 8 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_8:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 9 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_9:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:-:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 1 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_1:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 2 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_2:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 3 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_3:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 4 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_4:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 5 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_5:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 6 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_6:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 7 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_7:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: May 2023 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:may_2023:-:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: May 2023 Update Patch 1 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:may_2023:patch_1:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: May 2023 Update Patch 2 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:may_2023:patch_2:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: May 2023 Update Patch3 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:may_2023:patch3:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:-:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 1 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_1:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 10 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_10:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 2 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_2:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 3 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_3:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 4 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_4:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 5 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_5:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 6 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_6:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 7 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_7:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 8 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_8:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 9 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_9:*:*:enterprise:windows:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-20",
        "cwe_name": "Improper Input Validation",
        "cwe_description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
        "cwe_extended_description": "Input validation is a frequently-used technique for checking potentially dangerous inputs in order to ensure that the inputs are safe for processing within the code, or when communicating with other components. When software does not validate input properly, an attacker is able to craft the input in a form that is not expected by the rest of the application. This will lead to parts of the system receiving unintended input, which may result in altered control flow, arbitrary control of a resource, or arbitrary code execution.\n\nInput validation is not the only technique for processing input, however. Other techniques attempt to transform potentially-dangerous input into something safe, such as filtering (CWE-790) - which attempts to remove dangerous inputs - or encoding/escaping (CWE-116), which attempts to ensure that the input is not misinterpreted when it is included in output to another component. Other techniques exist as well (see CWE-138 for more examples.)\n\nInput validation can be applied to:\n\nraw data - strings, numbers, parameters, file contents, etc.\nmetadata - information about the raw data, such as headers or size\n\nData can be simple or structured. Structured data can be composed of many nested layers, composed of combinations of metadata and raw data, with other simple or structured data.\n\nMany properties of raw data or metadata may need to be validated upon entry into the code, such as:\n\nspecified quantities such as size, length, frequency, price, rate, number of operations, time, etc.\nimplied or derived quantities, such as the actual size of a file instead of a specified size\nindexes, offsets, or positions into more complex data structures\nsymbolic keys or other elements into hash tables, associative arrays, etc.\nwell-formedness, i.e. syntactic correctness - compliance with expected syntax\nlexical token correctness - compliance with rules for what is treated as a token\nspecified or derived type - the actual type of the input (or what the input appears to be)\nconsistency - between individual data elements, between raw data and metadata, between references, etc.\nconformance to domain-specific rules, e.g. business logic\nequivalence - ensuring that equivalent inputs are treated the same\nauthenticity, ownership, or other attestations about the input, e.g. a cryptographic signature to prove the source of the data\n\nImplied or derived properties of data must often be calculated or inferred by the code itself. Errors in deriving properties may be considered a contributing factor to improper input validation.\n\nNote that \"input validation\" has very different meanings to different people, or within different classification schemes. Caution must be used when referencing this CWE entry or mapping to it. For example, some weaknesses might involve inadvertently giving control to an attacker over an input when they should not be able to provide an input at all, but sometimes this is referred to as input validation.\n\nFinally, it is important to emphasize that the distinctions between input validation and output escaping are often blurred, and developers must be careful to understand the difference, including how input validation is not always sufficient to prevent vulnerabilities, especially when less stringent data types must be supported, such as free-form text. Consider a SQL injection scenario in which a person's last name is inserted into a query. The name \"O'Reilly\" would likely pass the validation step since it is a common last name in the English language. However, this valid name cannot be directly inserted into the database because it contains the \"'\" apostrophe character, which would need to be escaped or otherwise transformed. In this case, removing the apostrophe might reduce the risk of SQL injection, but it would produce incorrect behavior because the wrong name would be recorded.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-45918",
            "name": "CVE-2022-45918",
            "des": "Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-30860",
            "name": "CVE-2021-30860",
            "des": "Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-30663",
            "name": "CVE-2021-30663",
            "des": "Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-22205",
            "name": "CVE-2021-22205",
            "des": "Chain: backslash followed by a newline can bypass a validation step (CWE-20), leading to eval injection (CWE-95), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21220",
            "name": "CVE-2021-21220",
            "des": "Chain: insufficient input validation (CWE-20) in browser allows heap corruption (CWE-787), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-9054",
            "name": "CVE-2020-9054",
            "des": "Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-3452",
            "name": "CVE-2020-3452",
            "des": "Chain: security product has improper input validation (CWE-20) leading to directory traversal (CWE-22), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-3161",
            "name": "CVE-2020-3161",
            "des": "Improper input validation of HTTP requests in IP phone, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-3580",
            "name": "CVE-2020-3580",
            "des": "Chain: improper input validation (CWE-20) in firewall product leads to XSS (CWE-79), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-37147",
            "name": "CVE-2021-37147",
            "des": "Chain: caching proxy server has improper input validation (CWE-20) of headers, allowing HTTP response smuggling (CWE-444) using an \"LF line ending\""
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5305",
            "name": "CVE-2008-5305",
            "des": "Eval injection in Perl program using an ID that should only contain hyphens and numbers."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2223",
            "name": "CVE-2008-2223",
            "des": "SQL injection through an ID that was supposed to be numeric."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3477",
            "name": "CVE-2008-3477",
            "des": "lack of input validation in spreadsheet program leads to buffer overflows, integer overflows, array index errors, and memory corruption."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3843",
            "name": "CVE-2008-3843",
            "des": "insufficient validation enables XSS"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3174",
            "name": "CVE-2008-3174",
            "des": "driver in security product allows code execution due to insufficient validation"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-3409",
            "name": "CVE-2007-3409",
            "des": "infinite loop from DNS packet with a label that points to itself"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-6870",
            "name": "CVE-2006-6870",
            "des": "infinite loop from DNS packet with a label that points to itself"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-1303",
            "name": "CVE-2008-1303",
            "des": "missing parameter leads to crash"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-5893",
            "name": "CVE-2007-5893",
            "des": "HTTP request with missing protocol version number leads to crash"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-6658",
            "name": "CVE-2006-6658",
            "des": "request with missing parameters leads to information exposure"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4114",
            "name": "CVE-2008-4114",
            "des": "system crash with offset value that is inconsistent with packet size"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-3790",
            "name": "CVE-2006-3790",
            "des": "size field that is inconsistent with packet size leads to buffer over-read"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2309",
            "name": "CVE-2008-2309",
            "des": "product uses a denylist to identify potentially dangerous content, allowing attacker to bypass a warning"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3494",
            "name": "CVE-2008-3494",
            "des": "security bypass via an extra header"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3571",
            "name": "CVE-2008-3571",
            "des": "empty packet triggers reboot"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-5525",
            "name": "CVE-2006-5525",
            "des": "incomplete denylist allows SQL injection"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-1284",
            "name": "CVE-2008-1284",
            "des": "NUL byte in theme name causes directory traversal impact to be worse"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-0600",
            "name": "CVE-2008-0600",
            "des": "kernel does not validate an incoming pointer before dereferencing it"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-1738",
            "name": "CVE-2008-1738",
            "des": "anti-virus product has insufficient input validation of hooked SSDT functions, allowing code execution"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-1737",
            "name": "CVE-2008-1737",
            "des": "anti-virus product allows DoS via zero-length field"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3464",
            "name": "CVE-2008-3464",
            "des": "driver does not validate input from userland to the kernel"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2252",
            "name": "CVE-2008-2252",
            "des": "kernel does not validate parameters sent in from userland, allowing code execution"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2374",
            "name": "CVE-2008-2374",
            "des": "lack of validation of string length fields allows memory consumption or buffer over-read"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-1440",
            "name": "CVE-2008-1440",
            "des": "lack of validation of length field leads to infinite loop"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-1625",
            "name": "CVE-2008-1625",
            "des": "lack of validation of input to an IOCTL allows code execution"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3177",
            "name": "CVE-2008-3177",
            "des": "zero-length attachment causes crash"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-2442",
            "name": "CVE-2007-2442",
            "des": "zero-length input causes free of uninitialized pointer"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5563",
            "name": "CVE-2008-5563",
            "des": "crash via a malformed frame structure"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5285",
            "name": "CVE-2008-5285",
            "des": "infinite loop from a long SMTP request"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3812",
            "name": "CVE-2008-3812",
            "des": "router crashes with a malformed packet"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3680",
            "name": "CVE-2008-3680",
            "des": "packet with invalid version number leads to NULL pointer dereference"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3660",
            "name": "CVE-2008-3660",
            "des": "crash via multiple \".\" characters in file extension"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Consider using language-theoretic security (LangSec) techniques that characterize inputs using a formal language and build \"recognizers\" for that language. This effectively requires parsing to be a distinct layer that effectively enforces a boundary between raw input and internal data representations, instead of allowing parser code to be scattered throughout the program, where it could be subject to errors or inconsistencies that create weaknesses. [REF-1109] [REF-1110] [REF-1111]"
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use an input validation framework such as Struts or the OWASP ESAPI Validation API. Note that using a framework does not automatically address all input validation problems; be mindful of weaknesses that could arise from misusing the framework itself (CWE-1173)."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "Understand all the potential areas where untrusted inputs can enter your software: parameters or arguments, cookies, anything read from the network, environment variables, reverse DNS lookups, query results, request headers, URL components, e-mail, files, filenames, databases, and any external systems that provide data to the application. Remember that such inputs may be obtained indirectly through API calls."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.",
              "Even though client-side checks provide minimal benefits with respect to server-side security, they are still useful. First, they can support intrusion detection. If the server receives input that should have been rejected by the client, then it may be an indication of an attack. Second, client-side error-checking can provide helpful feedback to the user about the expectations for valid input. Third, there may be a reduction in server-side processing time for accidental input errors, although this is typically a small savings."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When your application combines data from multiple sources, perform the validation after the sources have been combined. The individual data elements may pass the validation step but violate the intended restrictions after they have been combined."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Be especially careful to validate all input when invoking code that crosses language boundaries, such as from an interpreted language to native code. This could create an unexpected interaction between the language boundaries. Ensure that you are not violating any of the expectations of the language with which you are interfacing. For example, even though Java may not be susceptible to buffer overflows, providing a large argument in a call to native code might trigger an overflow."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Directly convert your input type into the expected data type, such as using a conversion function that translates a string into a number. After converting to the expected data type, ensure that the input's values fall within the expected range of allowable values and that multi-field consistencies are maintained."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180, CWE-181). Make sure that your application does not inadvertently decode the same input twice (CWE-174). Such errors could be used to bypass allowlist schemes by introducing dangerous inputs after they have been checked. Use libraries such as the OWASP ESAPI Canonicalization control.",
              "Consider performing repeated canonicalization until your input does not change any more. This will avoid double-decoding and similar scenarios, but it might inadvertently modify inputs that are allowed to contain properly-encoded dangerous content."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When exchanging data between components, ensure that both components are using the same character encoding. Ensure that the proper encoding is applied at each interface. Explicitly set the encoding you are using whenever the protocol allows you to do so."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Some instances of improper input validation can be detected using automated static analysis.",
              "A static analysis tool might allow the user to specify which application-specific methods or functions perform input validation; the tool might also have built-in knowledge of validation frameworks such as Struts. The tool may then suppress or de-prioritize any associated warnings. This allows the analyst to focus on areas of the software in which input validation does not appear to be present.",
              "Except in the cases described in the previous paragraph, automated static analysis might not be able to recognize when proper input validation is being performed, leading to false positives - i.e., warnings that do not have any security consequences or require any code changes."
            ]
          },
          {
            "subheading": "Manual Static Analysis",
            "des": [
              "When custom input validation is required, such as when enforcing business rules, manual analysis is necessary to ensure that the validation is properly implemented."
            ]
          },
          {
            "subheading": "Fuzzing",
            "des": [
              "Fuzzing techniques can be useful for detecting input validation errors. When unexpected inputs are provided to the software, the software should not crash or otherwise become unstable, and it should generate application-controlled error messages. If exceptions or interpreter-generated error messages occur, this indicates that the input was not detected and handled within the application logic itself."
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-10",
            "capec_name": "Buffer Overflow via Environment Variables",
            "capec_description": "This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the adversary finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.",
            "capec_extended_description": "Although the focus of this attack is putting excessive content into an environment variable that is loaded into a buffer, environment variables can be used to assist a classic buffer overflow attack as well. In the case where the buffer used in a traditional buffer overflow attack is not large enough to store the adversary's shell code, they will store the shell code in an environment variable and attempt to return to its address, rather than back into the data they wrote to the buffer.",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Do not expose environment variable to the user.",
              "Do not use untrusted data in your environment variables.",
              "Use a language or compiler that performs automatic bounds checking",
              "There are tools such as Sharefuzz [REF-2] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-302",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-99",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-101",
            "capec_name": "Server Side Include (SSI) Injection",
            "capec_description": "An attacker can use Server Side Include (SSI) Injection to send code to a web application that then gets executed by the web server. Doing so enables the attacker to achieve similar results to Cross Site Scripting, viz., arbitrary code execution and information disclosure, albeit on a more limited scale, since the SSI directives are nowhere near as powerful as a full-fledged scripting language. Nonetheless, the attacker can conveniently gain access to sensitive files, such as password files, and execute shell commands.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Set the OPTIONS IncludesNOEXEC in the global access.conf file or local .htaccess (Apache) file to deny SSI execution in directories that do not need them",
              "All user controllable input must be appropriately sanitized before use in the application. This includes omitting, or encoding, certain characters or strings that have the potential of being interpreted as part of an SSI directive",
              "Server Side Includes must be enabled only if there is a strong business reason to do so. Every additional component enabled on the web server increases the attack surface as well as administrative overhead"
            ],
            "related_cwe": ["CWE-97", "CWE-74", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-104",
            "capec_name": "Cross Zone Scripting",
            "capec_description": "An attacker is able to cause a victim to load content into their web-browser that bypasses security zone controls and gain access to increased privileges to execute scripting code or other web objects such as unsigned ActiveX controls or applets. This is a privilege elevation attack targeted at zone-based web-browser security.",
            "capec_extended_description": "In a zone-based model, pages belong to one of a set of zones corresponding to the level of privilege assigned to that page. Pages in an untrusted zone would have a lesser level of access to the system and/or be restricted in the types of executable content it was allowed to invoke. In a cross-zone scripting attack, a page that should be assigned to a less privileged zone is granted the privileges of a more trusted zone. This can be accomplished by exploiting bugs in the browser, exploiting incorrect configuration in the zone controls, through a cross-site scripting attack that causes the attackers' content to be treated as coming from a more trusted page, or by leveraging some piece of system functionality that is accessible from both the trusted and less trusted zone. This attack differs from \"Restful Privilege Escalation\" in that the latter correlates to the inadequate securing of RESTful access methods (such as HTTP DELETE) on the server, while cross-zone scripting attacks the concept of security zones as implemented by a browser.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Disable script execution.",
              "Ensure that sufficient input validation is performed for any potentially untrusted data before it is used in any privileged context or zone",
              "Limit the flow of untrusted data into the privileged areas of the system that run in the higher trust zone",
              "Limit the sites that are being added to the local machine zone and restrict the privileges of the code running in that zone to the bare minimum",
              "Ensure proper HTML output encoding before writing user supplied data to the page"
            ],
            "related_cwe": [
              "CWE-250",
              "CWE-638",
              "CWE-285",
              "CWE-116",
              "CWE-20"
            ]
          },
          {
            "capec_id": "CAPEC-108",
            "capec_name": "Command Line Execution through SQL Injection",
            "capec_description": "An attacker uses standard SQL injection methods to inject data into the command line for execution. This could be done directly through misuse of directives such as MSSQL_xp_cmdshell or indirectly through injection of data into the database that would be interpreted as shell commands. Sometime later, an unscrupulous backend application (or could be part of the functionality of the same application) fetches the injected data stored in the database and uses this data as command line arguments without performing proper validation. The malicious data escapes that data plane by spawning new commands to be executed on the host.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Very High",
            "mitigations": [
              "Disable MSSQL xp_cmdshell directive on the database",
              "Properly validate the data (syntactically and semantically) before writing it to the database.",
              "Do not implicitly trust the data stored in the database. Re-validate it prior to usage to make sure that it is safe to use in a given context (e.g. as a command line argument)."
            ],
            "related_cwe": ["CWE-89", "CWE-74", "CWE-20", "CWE-78", "CWE-114"]
          },
          {
            "capec_id": "CAPEC-109",
            "capec_name": "Object Relational Mapping Injection",
            "capec_description": "An attacker leverages a weakness present in the database access layer code generated with an Object Relational Mapping (ORM) tool or a weakness in the way that a developer used a persistence framework to inject their own SQL commands to be executed against the underlying database. The attack here is similar to plain SQL injection, except that the application does not use JDBC to directly talk to the database, but instead it uses a data access layer generated by an ORM tool or framework (e.g. Hibernate). While most of the time code generated by an ORM tool contains safe access methods that are immune to SQL injection, sometimes either due to some weakness in the generated code or due to the fact that the developer failed to use the generated access methods properly, SQL injection is still possible.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "High",
            "mitigations": [
              "Remember to understand how to use the data access methods generated by the ORM tool / framework properly in a way that would leverage the built-in security mechanisms of the framework",
              "Ensure to keep up to date with security relevant updates to the persistence framework used within your application."
            ],
            "related_cwe": ["CWE-20", "CWE-89", "CWE-564"]
          },
          {
            "capec_id": "CAPEC-110",
            "capec_name": "SQL Injection through SOAP Parameter Tampering",
            "capec_description": "An attacker modifies the parameters of the SOAP message that is sent from the service consumer to the service provider to initiate a SQL injection attack. On the service provider side, the SOAP message is parsed and parameters are not properly validated before being used to access a database in a way that does not use parameter binding, thus enabling the attacker to control the structure of the executed SQL query. This pattern describes a SQL injection attack with the delivery mechanism being a SOAP message.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Properly validate and sanitize/reject user input at the service provider.",
              "Ensure that prepared statements or other mechanism that enables parameter binding is used when accessing the database in a way that would prevent the attackers' supplied data from controlling the structure of the executed query.",
              "At the database level, ensure that the database user used by the application in a particular context has the minimum needed privileges to the database that are needed to perform the operation. When possible, run queries against pre-generated views rather than the tables directly."
            ],
            "related_cwe": ["CWE-89", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-120",
            "capec_name": "Double Encoding",
            "capec_description": "The adversary utilizes a repeating of the encoding process for a set of characters (that is, character encoding a character encoding of a character) to obfuscate the payload of a particular request. This may allow the adversary to bypass filters that attempt to detect illegal characters or strings, such as those that might be used in traversal or injection attacks. Filters may be able to catch illegal encoded strings, but may not catch doubly encoded strings. For example, a dot (.), often used in path traversal attacks and therefore often blocked by filters, could be URL encoded as %2E. However, many filters recognize this encoding and would still block the request. In a double encoding, the % in the above URL encoding would be encoded again as %25, resulting in %252E which some filters might not catch, but which could still be interpreted as a dot (.) by interpreters on the target.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Medium",
            "mitigations": [
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input.",
              "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding.",
              "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.",
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
              "Refer to the RFCs to safely decode URL.",
              "Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive.",
              "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)."
            ],
            "related_cwe": [
              "CWE-173",
              "CWE-172",
              "CWE-177",
              "CWE-181",
              "CWE-183",
              "CWE-184",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-692"
            ]
          },
          {
            "capec_id": "CAPEC-13",
            "capec_name": "Subverting Environment Variable Values",
            "capec_description": "The adversary directly or indirectly modifies environment variables used by or controlling the target software. The adversary's goal is to cause the target software to deviate from its expected operation in a manner that benefits the adversary.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Protect environment variables against unauthorized read and write access.",
              "Protect the configuration files which contain environment variables against illegitimate read and write access.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system.",
              "Apply the least privilege principles. If a process has no legitimate reason to read an environment variable do not give that privilege."
            ],
            "related_cwe": [
              "CWE-353",
              "CWE-285",
              "CWE-302",
              "CWE-74",
              "CWE-15",
              "CWE-73",
              "CWE-20",
              "CWE-200"
            ]
          },
          {
            "capec_id": "CAPEC-135",
            "capec_name": "Format String Injection",
            "capec_description": "An adversary includes formatting characters in a string input field on the target application. Most applications assume that users will provide static text and may respond unpredictably to the presence of formatting character. For example, in certain functions of the C programming languages such as printf, the formatting character %s will print the contents of a memory location expecting this location to identify a string and the formatting character %n prints the number of DWORD written in the memory. An adversary can use this to read or write to memory locations or files, or simply to manipulate the value of the resulting text in unexpected ways. Reading or writing memory may result in program crashes and writing memory could result in the execution of arbitrary code if the adversary can write to the program stack.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Limit the usage of formatting string functions.",
              "Strong input validation - All user-controllable input must be validated and filtered for illegal formatting characters."
            ],
            "related_cwe": ["CWE-134", "CWE-20", "CWE-74"]
          },
          {
            "capec_id": "CAPEC-136",
            "capec_name": "LDAP Injection",
            "capec_description": "An attacker manipulates or crafts an LDAP query for the purpose of undermining the security of the target. Some applications use user input to create LDAP queries that are processed by an LDAP server. For example, a user might provide their username during authentication and the username might be inserted in an LDAP query during the authentication process. An attacker could use this input to inject additional commands into an LDAP query that could disclose sensitive information. For example, entering a * in the aforementioned query might return information about all users on the system. This attack is very similar to an SQL injection attack in that it manipulates a query to gather additional information or coerce a particular return value.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as LDAP content.",
              "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the LDAP or application."
            ],
            "related_cwe": ["CWE-77", "CWE-90", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-14",
            "capec_name": "Client-side Injection-induced Buffer Overflow",
            "capec_description": "This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service. This hostile service is created to deliver the correct content to the client software. For example, if the client-side application is a browser, the service will host a webpage that the browser loads.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "The client software should not install untrusted code from a non-authenticated server.",
              "The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers.",
              "Perform input validation for length of buffer inputs.",
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Ensure all buffer uses are consistently bounds-checked.",
              "Use OS-level preventative functionality. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-353",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-153",
            "capec_name": "Input Data Manipulation",
            "capec_description": "An attacker exploits a weakness in input validation by controlling the format, structure, and composition of data to an input-processing interface. By supplying input of a non-standard or unexpected form an attacker can adversely impact the security of the target.",
            "capec_extended_description": "For example, using a different character encoding might cause dangerous text to be treated as safe text. Alternatively, the attacker may use certain flags, such as file extensions, to make a target application believe that provided data should be handled using a certain interpreter when the data is not actually of the appropriate type. This can lead to bypassing protection mechanisms, forcing the target to use specific components for input processing, or otherwise causing the user's data to be handled differently than might otherwise be expected. This attack differs from Variable Manipulation in that Variable Manipulation attempts to subvert the target's processing through the value of the input while Input Data Manipulation seeks to control how the input is processed.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-20"]
          },
          {
            "capec_id": "CAPEC-182",
            "capec_name": "Flash Injection",
            "capec_description": "An attacker tricks a victim to execute malicious flash content that executes commands or makes flash calls specified by the attacker. One example of this attack is cross-site flashing, an attacker controlled parameter to a reference call loads from content specified by the attacker.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Medium",
            "mitigations": [
              "Implementation: remove sensitive information such as user name and password in the SWF file.",
              "Implementation: use validation on both client and server side.",
              "Implementation: remove debug information.",
              "Implementation: use SSL when loading external data",
              "Implementation: use crossdomain.xml file to allow the application domain to load stuff or the SWF file called by other domain."
            ],
            "related_cwe": ["CWE-20", "CWE-184", "CWE-697"]
          },
          {
            "capec_id": "CAPEC-209",
            "capec_name": "XSS Using MIME Type Mismatch",
            "capec_description": "An adversary creates a file with scripting content but where the specified MIME type of the file is such that scripting is not expected. The adversary tricks the victim into accessing a URL that responds with the script file. Some browsers will detect that the specified MIME type of the file does not match the actual type of its content and will automatically switch to using an interpreter for the real content type. If the browser does not invoke script filters before doing this, the adversary's script may run on the target unsanitized, possibly revealing the victim's cookies or executing arbitrary script in their browser.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-79", "CWE-20", "CWE-646"]
          },
          {
            "capec_id": "CAPEC-22",
            "capec_name": "Exploiting Trust in Client",
            "capec_description": "An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system.",
              "Design: Do not rely on client validation or encoding for security purposes.",
              "Design: Utilize digital signatures to increase authentication assurance.",
              "Design: Utilize two factor authentication to increase authentication assurance.",
              "Implementation: Perform input validation for all remote content."
            ],
            "related_cwe": [
              "CWE-290",
              "CWE-287",
              "CWE-20",
              "CWE-200",
              "CWE-693"
            ]
          },
          {
            "capec_id": "CAPEC-23",
            "capec_name": "File Content Injection",
            "capec_description": "An adversary poisons files with a malicious payload (targeting the file systems accessible by the target software), which may be passed through by standard channels such as via email, and standard web content like PDF and multimedia files. The adversary exploits known vulnerabilities or handling routines in the target processes, in order to exploit the host's trust in executing remote content, including binary files.",
            "capec_extended_description": "Vulnerabilities of this type have been found in a wide variety of commercial applications from Microsoft Office to Adobe Acrobat and Apple Safari web browser. When the adversary knows the standard handling routines and can identify vulnerabilities and entry points, they can be exploited by otherwise seemingly normal content. Once the attack is executed, the adversary's program can access relative directories such as C:\\Program Files or other standard system directories to launch further attacks. In a worst case scenario, these programs are combined with other propagation logic and work as a virus.",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege",
              "Design: Validate all input for content including files. Ensure that if files and remote content must be accepted that once accepted, they are placed in a sandbox type location so that lower assurance clients cannot write up to higher assurance processes (like Web server processes for example)",
              "Design: Execute programs with constrained privileges, so parent process does not open up further vulnerabilities. Ensure that all directories, temporary directories and files, and memory are executing with limited privileges to protect against remote execution.",
              "Design: Proxy communication to host, so that communications are terminated at the proxy, sanitizing the requests before forwarding to server host.",
              "Implementation: Virus scanning on host",
              "Implementation: Host integrity monitoring for critical files, directories, and processes. The goal of host integrity monitoring is to be aware when a security issue has occurred so that incident response and other forensic activities can begin."
            ],
            "related_cwe": ["CWE-20"]
          },
          {
            "capec_id": "CAPEC-230",
            "capec_name": "Serialized Data with Nested Payloads",
            "capec_description": "Applications often need to transform data in and out of a data format (e.g., XML and YAML) by using a parser. It may be possible for an adversary to inject data that may have an adverse effect on the parser when it is being processed. Many data format languages allow the definition of macro-like structures that can be used to simplify the creation of complex structures. By nesting these structures, causing the data to be repeatedly substituted, an adversary can cause the parser to consume more resources while processing, causing excessive memory consumption and CPU utilization.",
            "capec_extended_description": "An adversary's goal is to leverage parser failure to their advantage. In most cases this type of an attack will result in a Denial of Service due to an application becoming unstable, freezing, or crashing. However it may be possible to cause a crash resulting in arbitrary code execution, leading to a jump from the data plane to the control plane [REF-89].\n\nThis attack is most closely associated with web services using SOAP or a Rest API, because remote service requesters can post malicious payloads to the service provider. The main weakness is that the service provider generally must inspect, parse, and validate the messages to determine routing, workflow, security considerations, and so on. It is exactly these inspection, parsing, and validation routines that this attack targets. This attack exploits the loosely coupled nature of web services, where the service provider has little to no control over the service requester and any messages the service requester sends.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Carefully validate and sanitize all user-controllable data prior to passing it to the data parser routine. Ensure that the resultant data is safe to pass to the data parser.",
              "Perform validation on canonical data.",
              "Pick a robust implementation of the data parser."
            ],
            "related_cwe": ["CWE-112", "CWE-20", "CWE-674", "CWE-770"]
          },
          {
            "capec_id": "CAPEC-231",
            "capec_name": "Oversized Serialized Data Payloads",
            "capec_description": "An adversary injects oversized serialized data payloads into a parser during data processing to produce adverse effects upon the parser such as exhausting system resources and arbitrary code execution.",
            "capec_extended_description": "Applications often need to transform data in and out of serialized data formats, such as XML and YAML, by using a data parser. It may be possible for an adversary to inject data that may have an adverse effect on the parser when it is being processed. By supplying oversized payloads in input vectors that will be processed by the parser, an adversary can cause the parser to consume more resources while processing, causing excessive memory consumption and CPU utilization, and potentially cause execution of arbitrary code. An adversary's goal is to leverage parser failure to their advantage. DoS is most closely associated with web services, SOAP, and Rest, because remote service requesters can post malicious data payloads to the service provider designed to exhaust the service provider's memory, CPU, and/or disk space. This attack exploits the loosely coupled nature of web services, where the service provider has little to no control over the service requester and any messages the service requester sends.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Carefully validate and sanitize all user-controllable serialized data prior to passing it to the parser routine. Ensure that the resultant data is safe to pass to the parser.",
              "Perform validation on canonical data.",
              "Pick a robust implementation of the serialized data parser.",
              "Validate data against a valid schema or DTD prior to parsing."
            ],
            "related_cwe": ["CWE-112", "CWE-20", "CWE-674", "CWE-770"]
          },
          {
            "capec_id": "CAPEC-24",
            "capec_name": "Filter Failure through Buffer Overflow",
            "capec_description": "In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs.",
              "Pre-design: Use a language or compiler that performs automatic bounds checking.",
              "Pre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Operational: Use OS-level preventative functionality. Not a complete solution.",
              "Design: Use an abstraction library to abstract away risky APIs. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-119",
              "CWE-118",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-250",
            "capec_name": "XML Injection",
            "capec_description": "An attacker utilizes crafted XML user-controllable input to probe, attack, and inject data into the XML database, using techniques similar to SQL injection. The user-controllable input can allow for unauthorized viewing of data, bypassing authentication or the front-end application for direct XML database access, and possibly altering database information.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "",
            "mitigations": [
              "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as content that can be interpreted in the context of an XML data or a query.",
              "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."
            ],
            "related_cwe": ["CWE-91", "CWE-74", "CWE-20", "CWE-707"]
          },
          {
            "capec_id": "CAPEC-261",
            "capec_name": "Fuzzing for garnering other adjacent user/sensitive data",
            "capec_description": "An adversary who is authorized to send queries to a target sends variants of expected queries in the hope that these modified queries might return information (directly or indirectly through error logs) beyond what the expected set of queries should provide.",
            "capec_extended_description": "Many client applications use specific query templates when interacting with a server and often automatically fill in specific fields or attributes. If the server does not verify that the query matches one of the expected templates, an adversary who is allowed to send normal queries could modify their query to try to return additional information. The adversary may not know the names of fields to request or how other modifications will affect the server response, but by attempting multiple plausible variants, they might eventually trigger a server response that divulges sensitive information. Other possible outcomes include server crashes and resource consumption if the unexpected queries cause the server to enter an unstable state or perform excessive computation.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-20"]
          },
          {
            "capec_id": "CAPEC-267",
            "capec_name": "Leverage Alternate Encoding",
            "capec_description": "An adversary leverages the possibility to encode potentially harmful input or content used by applications such that the applications are ineffective at validating this encoding standard.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Assume all input might use an improper representation. Use canonicalized data inside the application; all data must be converted into the representation used inside the application (UTF-8, UTF-16, etc.)",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input."
            ],
            "related_cwe": [
              "CWE-173",
              "CWE-172",
              "CWE-180",
              "CWE-181",
              "CWE-73",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-692"
            ]
          },
          {
            "capec_id": "CAPEC-28",
            "capec_name": "Fuzzing",
            "capec_description": "In this attack pattern, the adversary leverages fuzzing to try to identify weaknesses in the system. Fuzzing is a software security and functionality testing method that feeds randomly constructed input to the system and looks for an indication that a failure in response to that input has occurred. Fuzzing treats the system as a black box and is totally free from any preconceptions or assumptions about the system. Fuzzing can help an attacker discover certain assumptions made about user input in the system. Fuzzing gives an attacker a quick way of potentially uncovering some of these assumptions despite not necessarily knowing anything about the internals of the system. These assumptions can then be turned against the system by specially crafting user input that may allow an attacker to achieve their goals.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Medium",
            "mitigations": [
              "Test to ensure that the software behaves as per specification and that there are no unintended side effects. Ensure that no assumptions about the validity of data are made.",
              "Use fuzz testing during the software QA process to uncover any surprises, uncover any assumptions or unexpected behavior."
            ],
            "related_cwe": ["CWE-74", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-3",
            "capec_name": "Using Leading 'Ghost' Character Sequences to Bypass Input Filters",
            "capec_description": "Some APIs will strip certain leading characters from a string of parameters. An adversary can intentionally introduce leading \"ghost\" characters (extra characters that don't affect the validity of the request at the API layer) that enable the input to pass the filters and therefore process the adversary's input. This occurs when the targeted API will accept input data in several syntactic forms and interpret it in the equivalent semantic way, while the filter does not take into account the full spectrum of the syntactic forms acceptable to the targeted API.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Medium",
            "mitigations": [
              "Use an allowlist rather than a denylist input validation.",
              "Canonicalize all data prior to validation.",
              "Take an iterative approach to input validation (defense in depth)."
            ],
            "related_cwe": [
              "CWE-173",
              "CWE-41",
              "CWE-172",
              "CWE-179",
              "CWE-180",
              "CWE-181",
              "CWE-183",
              "CWE-184",
              "CWE-20",
              "CWE-74",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-31",
            "capec_name": "Accessing/Intercepting/Modifying HTTP Cookies",
            "capec_description": "This attack relies on the use of HTTP Cookies to store credentials, state information and other critical data on client systems. There are several different forms of this attack. The first form of this attack involves accessing HTTP Cookies to mine for potentially sensitive data contained therein. The second form involves intercepting this data as it is transmitted from client to server. This intercepted information is then used by the adversary to impersonate the remote user/session. The third form is when the cookie's content is modified by the adversary before it is sent back to the server. Here the adversary seeks to convince the target server to operate on this falsified information.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Use input validation for cookies",
              "Design: Generate and validate MAC for cookies",
              "Implementation: Use SSL/TLS to protect cookie in transit",
              "Implementation: Ensure the web server implements all relevant security patches, many exploitable buffer overflows are fixed in patches issued for the software."
            ],
            "related_cwe": [
              "CWE-565",
              "CWE-302",
              "CWE-311",
              "CWE-113",
              "CWE-539",
              "CWE-20",
              "CWE-315",
              "CWE-384",
              "CWE-472",
              "CWE-602",
              "CWE-642"
            ]
          },
          {
            "capec_id": "CAPEC-42",
            "capec_name": "MIME Conversion",
            "capec_description": "An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Stay up to date with third party vendor patches",
              "Disable the 7 to 8 bit conversion. This can be done by removing the F=9 flag from all Mailer specifications in the sendmail.cf file.\n\nFor example, a sendmail.cf file with these changes applied should look similar to (depending on your system and configuration):\n\nMlocal, P=/usr/libexec/mail.local, F=lsDFMAw5:/|@qrmn, S=10/30, R=20/40,\nT=DNS/RFC822/X-Unix,\nA=mail -d $u\n\nMprog, P=/bin/sh, F=lsDFMoqeu, S=10/30, R=20/40,\nD=$z:/,\nT=X-Unix,\nA=sh -c $u\n\nThis can be achieved for the \"Mlocal\" and \"Mprog\" Mailers by modifying the \".mc\" file to include the following lines:\n\ndefine(`LOCAL_MAILER_FLAGS',\nifdef(`LOCAL_MAILER_FLAGS',\n`translit(LOCAL_MAILER_FLAGS, `9')',\n`rmn'))\n\ndefine(`LOCAL_SHELL_FLAGS',\nifdef(`LOCAL_SHELL_FLAGS',\n`translit(LOCAL_SHELL_FLAGS, `9')',\n`eu'))\n\nand then rebuilding the sendmail.cf file using m4(1).\n\nFrom \"Exploiting Software\", please see reference below.",
              "Use the sendmail restricted shell program (smrsh)",
              "Use mail.local"
            ],
            "related_cwe": ["CWE-120", "CWE-119", "CWE-74", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-43",
            "capec_name": "Exploiting Multiple Input Interpretation Layers",
            "capec_description": "An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: <parser1> --> <input validator> --> <parser2>. In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it.",
              "Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist would not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-179",
              "CWE-181",
              "CWE-184",
              "CWE-183",
              "CWE-77",
              "CWE-78",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-45",
            "capec_name": "Buffer Overflow via Symbolic Links",
            "capec_description": "This type of attack leverages the use of symbolic links to cause buffer overflows. An adversary can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource.",
              "Because Symlink can be modified by an adversary, make sure that the ones you read are located in protected directories.",
              "Pay attention to the resource pointed to by your symlink links (See attack pattern named \"Forced Symlink race\"), they can be replaced by malicious resources.",
              "Always check the size of the input data before copying to a buffer.",
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Use OS-level preventative functionality. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-285",
              "CWE-302",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-46",
            "capec_name": "Overflow Variables and Tags",
            "capec_description": "This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The adversary crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Use OS-level preventative functionality. Not a complete solution.",
              "Do not trust input data from user. Validate all user input."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-47",
            "capec_name": "Buffer Overflow via Parameter Expansion",
            "capec_description": "In this attack, the target software is given input that the adversary knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system"
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-119",
              "CWE-118",
              "CWE-130",
              "CWE-131",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-473",
            "capec_name": "Signature Spoof",
            "capec_description": "An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "",
            "mitigations": [],
            "related_cwe": ["CWE-20", "CWE-327", "CWE-290"]
          },
          {
            "capec_id": "CAPEC-52",
            "capec_name": "Embedding NULL Bytes",
            "capec_description": "An adversary embeds one or more null bytes in input to the target software. This attack relies on the usage of a null-valued byte as a string terminator in many environments. The goal is for certain components of the target software to stop processing the input when it encounters the null byte(s).",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Properly handle the NULL characters supplied as part of user input prior to doing anything with the data."
            ],
            "related_cwe": [
              "CWE-158",
              "CWE-172",
              "CWE-173",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-53",
            "capec_name": "Postfix, Null Terminate, and Backslash",
            "capec_description": "If a string is passed through a filter of some kind, then a terminal NULL may not be valid. Using alternate representation of NULL allows an adversary to embed the NULL mid-string while postfixing the proper data so that the filter is avoided. One example is a filter that looks for a trailing slash character. If a string insertion is possible, but the slash must exist, an alternate encoding of NULL in mid-string may be used.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Properly handle Null characters. Make sure canonicalization is properly applied. Do not pass Null characters to the underlying APIs.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-158",
              "CWE-172",
              "CWE-173",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-588",
            "capec_name": "DOM-Based XSS",
            "capec_description": "This type of attack is a form of Cross-Site Scripting (XSS) where a malicious script is inserted into the client-side HTML being parsed by a web browser. Content served by a vulnerable web application includes script code used to manipulate the Document Object Model (DOM). This script code either does not properly validate input, or does not perform proper output encoding, thus creating an opportunity for an adversary to inject a malicious script launch a XSS attack. A key distinction between other XSS attacks and DOM-based attacks is that in other XSS attacks, the malicious script runs when the vulnerable web page is initially loaded, while a DOM-based attack executes sometime after the page loads. Another distinction of DOM-based attacks is that in some cases, the malicious script is never sent to the vulnerable web server at all. An attack like this is guaranteed to bypass any server-side filtering attempts to protect users.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Use browser technologies that do not allow client-side scripting.",
              "Utilize proper character encoding for all output produced within client-site scripts manipulating the DOM.",
              "Ensure that all user-supplied input is validated before use."
            ],
            "related_cwe": ["CWE-79", "CWE-20", "CWE-83"]
          },
          {
            "capec_id": "CAPEC-63",
            "capec_name": "Cross-Site Scripting (XSS)",
            "capec_description": "An adversary embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level. An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Use browser technologies that do not allow client side scripting.",
              "Design: Utilize strict type, character, and encoding enforcement",
              "Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.",
              "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.",
              "Implementation: Perform input validation for all remote content.",
              "Implementation: Perform output validation for all remote content.",
              "Implementation: Session tokens for specific host",
              "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."
            ],
            "related_cwe": ["CWE-79", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-64",
            "capec_name": "Using Slashes and URL Encoding Combined to Bypass Validation Logic",
            "capec_description": "This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input.",
              "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding.",
              "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.",
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
              "Refer to the RFCs to safely decode URL.",
              "Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive.",
              "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)."
            ],
            "related_cwe": [
              "CWE-177",
              "CWE-173",
              "CWE-172",
              "CWE-73",
              "CWE-22",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-664",
            "capec_name": "Server Side Request Forgery",
            "capec_description": "An adversary exploits improper input validation by submitting maliciously crafted input to a target application running on a server, with the goal of forcing the server to make a request either to itself, to web services running in the server’s internal network, or to external third parties. If successful, the adversary’s request will be made with the server’s privilege level, bypassing its authentication controls. This ultimately allows the adversary to access sensitive data, execute commands on the server’s network, and make external requests with the stolen identity of the server. Server Side Request Forgery attacks differ from Cross Site Request Forgery attacks in that they target the server itself, whereas CSRF attacks exploit an insecure user authentication mechanism to perform unauthorized actions on the user's behalf.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Handling incoming requests securely is the first line of action to mitigate this vulnerability. This can be done through URL validation.",
              "Further down the process flow, examining the response and verifying that it is as expected before sending would be another way to secure the server.",
              "Allowlist the DNS name or IP address of every service the web application is required to access is another effective security measure. This ensures the server cannot make external requests to arbitrary services.",
              "Requiring authentication for local services adds another layer of security between the adversary and internal services running on the server. By enforcing local authentication, an adversary will not gain access to all internal services only with access to the server.",
              "Enforce the usage of relevant URL schemas. By limiting requests be made only through HTTP or HTTPS, for example, attacks made through insecure schemas such as file://, ftp://, etc. can be prevented."
            ],
            "related_cwe": ["CWE-918", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-67",
            "capec_name": "String Format Overflow in syslog()",
            "capec_description": "This attack targets applications and software that uses the syslog() function insecurely. If an application does not explicitely use a format string parameter in a call to syslog(), user input can be placed in the format string parameter leading to a format string injection attack. Adversaries can then inject malicious format string commands into the function call leading to a buffer overflow. There are many reported software vulnerabilities with the root cause being a misuse of the syslog() function.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "The code should be reviewed for misuse of the Syslog function call. Manual or automated code review can be used. The reviewer needs to ensure that all format string functions are passed a static string which cannot be controlled by the user and that the proper number of arguments are always sent to that function as well. If at all possible, do not use the %n operator in format strings. The following code shows a correct usage of Syslog():\n\nsyslog(LOG_ERR, \"%s\", cmdBuf);\n\nThe following code shows a vulnerable usage of Syslog():\n\nsyslog(LOG_ERR, cmdBuf);\n// the buffer cmdBuff is taking user supplied data."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-134",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-7",
            "capec_name": "Blind SQL Injection",
            "capec_description": "Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the adversary constructs input strings that probe the target through simple Boolean SQL expressions. The adversary can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the adversary determines how and where the target is vulnerable to SQL Injection.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Security by Obscurity is not a solution to preventing SQL Injection. Rather than suppress error messages and exceptions, the application must handle them gracefully, returning either a custom error page or redirecting the user to a default page, without revealing any information about the database or the application internals.",
              "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear."
            ],
            "related_cwe": [
              "CWE-89",
              "CWE-209",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-71",
            "capec_name": "Using Unicode Encoding to Bypass Validation Logic",
            "capec_description": "An attacker may provide a Unicode string to a system component that is not Unicode aware and use that to circumvent the filter or cause the classifying mechanism to fail to properly understanding the request. That may allow the attacker to slip malicious data past the content filter and/or possibly cause the application to route the request incorrectly.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Ensure that the system is Unicode aware and can properly process Unicode data. Do not make an assumption that data will be in ASCII.",
              "Ensure that filtering or input validation is applied to canonical data.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-176",
              "CWE-179",
              "CWE-180",
              "CWE-173",
              "CWE-172",
              "CWE-184",
              "CWE-183",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-692"
            ]
          },
          {
            "capec_id": "CAPEC-72",
            "capec_name": "URL Encoding",
            "capec_description": "This attack targets the encoding of the URL. An adversary can take advantage of the multiple way of encoding an URL and abuse the interpretation of the URL.",
            "capec_extended_description": "A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE).\n\nFor instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An adversary will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL.\n\nIt can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc. The adversary could also subvert the meaning of the URL string request by encoding the data being sent to the server through a GET request. For instance an adversary may subvert the meaning of parameters used in a SQL request and sent through the URL string (See Example section).",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Refer to the RFCs to safely decode URL.",
              "Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive.",
              "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx).",
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input.",
              "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)",
              "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible."
            ],
            "related_cwe": [
              "CWE-173",
              "CWE-177",
              "CWE-172",
              "CWE-73",
              "CWE-74",
              "CWE-20"
            ]
          },
          {
            "capec_id": "CAPEC-73",
            "capec_name": "User-Controlled Filename",
            "capec_description": "An attack of this type involves an adversary inserting malicious characters (such as a XSS redirection) into a filename, directly or indirectly that is then used by the target software to generate HTML text or other potentially executable content. Many websites rely on user-generated content and dynamically build resources like files, filenames, and URL links directly from user supplied data. In this attack pattern, the attacker uploads code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns. All XSS attack payload variants can be used to pass and exploit these vulnerabilities.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Use browser technologies that do not allow client side scripting.",
              "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.",
              "Implementation: Perform input validation for all remote content.",
              "Implementation: Perform output validation for all remote content.",
              "Implementation: Disable scripting languages such as JavaScript in browser",
              "Implementation: Scan dynamically generated content against validation specification"
            ],
            "related_cwe": [
              "CWE-20",
              "CWE-184",
              "CWE-96",
              "CWE-348",
              "CWE-116",
              "CWE-350",
              "CWE-86",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-78",
            "capec_name": "Using Escaped Slashes in Alternate Encoding",
            "capec_description": "This attack targets the use of the backslash in alternate encoding. An adversary can provide a backslash as a leading character and causes a parser to believe that the next character is special. This is called an escape. By using that trick, the adversary tries to exploit alternate ways to encode the same character which leads to filter problems and opens avenues to attack.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Verify that the user-supplied data does not use backslash character to escape malicious characters.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system.",
              "Be aware of the threat of alternative method of data encoding.",
              "Regular expressions can be used to filter out backslash. Make sure you decode before filtering and validating the untrusted input data.",
              "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.",
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
              "Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names."
            ],
            "related_cwe": [
              "CWE-180",
              "CWE-181",
              "CWE-173",
              "CWE-172",
              "CWE-73",
              "CWE-22",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-79",
            "capec_name": "Using Slashes in Alternate Encoding",
            "capec_description": "This attack targets the encoding of the Slash characters. An adversary would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the adversary many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL.",
              "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.",
              "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)",
              "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)",
              "Test your path decoding process against malicious input.",
              "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the application based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-173",
              "CWE-180",
              "CWE-181",
              "CWE-20",
              "CWE-74",
              "CWE-73",
              "CWE-22",
              "CWE-185",
              "CWE-200",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-8",
            "capec_name": "Buffer Overflow in an API Call",
            "capec_description": "This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An adversary who has knowledge of known vulnerable libraries or shared code can easily target software that makes use of these libraries. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use a language or compiler that performs automatic bounds checking.",
              "Use secure functions not vulnerable to buffer overflow.",
              "If you have to use dangerous functions, make sure that you do boundary checking.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Use OS-level preventative functionality. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-119",
              "CWE-118",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-80",
            "capec_name": "Using UTF-8 Encoding to Bypass Validation Logic",
            "capec_description": "This attack is a specific variation on leveraging alternate encodings to bypass validation logic. This attack leverages the possibility to encode potentially harmful input in UTF-8 and submit it to applications not expecting or effective at validating this encoding standard making input filtering difficult. UTF-8 (8-bit UCS/Unicode Transformation Format) is a variable-length character encoding for Unicode. Legal UTF-8 characters are one to four bytes long. However, early version of the UTF-8 specification got some entries wrong (in some cases it permitted overlong characters). UTF-8 encoders are supposed to use the \"shortest possible\" encoding, but naive decoders may accept encodings that are longer than necessary. According to the RFC 3629, a particularly subtle form of this attack can be carried out against a parser which performs security-critical validity checks against the UTF-8 encoded form of its input, but interprets certain illegal octet sequences as characters.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "The Unicode Consortium recognized multiple representations to be a problem and has revised the Unicode Standard to make multiple representations of the same code point with UTF-8 illegal. The UTF-8 Corrigendum lists the newly restricted UTF-8 range (See references). Many current applications may not have been revised to follow this rule. Verify that your application conform to the latest UTF-8 encoding specification. Pay extra attention to the filtering of illegal characters.",
              "The exact response required from an UTF-8 decoder on invalid input is not uniformly defined by the standards. In general, there are several ways a UTF-8 decoder might behave in the event of an invalid byte sequence:\n\n1. Insert a replacement character (e.g. '?', '').\n2. Ignore the bytes.\n3. Interpret the bytes according to a different character encoding (often the ISO-8859-1 character map).\n4. Not notice and decode as if the bytes were some similar bit of UTF-8.\n5. Stop decoding and report an error (possibly giving the caller the option to continue).\n\nIt is possible for a decoder to behave in different ways for different types of invalid input.\n\nRFC 3629 only requires that UTF-8 decoders must not decode \"overlong sequences\" (where a character is encoded in more bytes than needed but still adheres to the forms above). The Unicode Standard requires a Unicode-compliant decoder to \"...treat any ill-formed code unit sequence as an error condition. This guarantees that it will neither interpret nor emit an ill-formed code unit sequence.\"\n\nOverlong forms are one of the most troublesome types of UTF-8 data. The current RFC says they must not be decoded but older specifications for UTF-8 only gave a warning and many simpler decoders will happily decode them. Overlong forms have been used to bypass security validations in high profile products including Microsoft's IIS web server. Therefore, great care must be taken to avoid security issues if validation is performed before conversion from UTF-8, and it is generally much simpler to handle overlong forms before any input validation is done.\n\nTo maintain security in the case of invalid input, there are two options. The first is to decode the UTF-8 before doing any input validation checks. The second is to use a decoder that, in the event of invalid input, returns either an error or text that the application considers to be harmless. Another possibility is to avoid conversion out of UTF-8 altogether but this relies on any other software that the data is passed to safely handling the invalid data.\n\nAnother consideration is error recovery. To guarantee correct recovery after corrupt or lost bytes, decoders must be able to recognize the difference between lead and trail bytes, rather than just assuming that bytes will be of the type allowed in their position.",
              "For security reasons, a UTF-8 decoder must not accept UTF-8 sequences that are longer than necessary to encode a character. If you use a parser to decode the UTF-8 encoding, make sure that parser filter the invalid UTF-8 characters (invalid forms or overlong forms).",
              "Look for overlong UTF-8 sequences starting with malicious pattern. You can also use a UTF-8 decoder stress test to test your UTF-8 parser (See Markus Kuhn's UTF-8 and Unicode FAQ in reference section)",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input."
            ],
            "related_cwe": [
              "CWE-173",
              "CWE-172",
              "CWE-180",
              "CWE-181",
              "CWE-73",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-692"
            ]
          },
          {
            "capec_id": "CAPEC-81",
            "capec_name": "Web Server Logs Tampering",
            "capec_description": "Web Logs Tampering attacks involve an attacker injecting, deleting or otherwise tampering with the contents of web logs typically for the purposes of masking other malicious behavior. Additionally, writing malicious data to log files may target jobs, filters, reports, and other agents that process the logs in an asynchronous attack pattern. This pattern of attack is similar to \"Log Injection-Tampering-Forging\" except that in this case, the attack is targeting the logs of the web server and not the application.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Design: Use input validation before writing to web log",
              "Design: Validate all log data before it is output"
            ],
            "related_cwe": [
              "CWE-117",
              "CWE-93",
              "CWE-75",
              "CWE-221",
              "CWE-96",
              "CWE-20",
              "CWE-150",
              "CWE-276",
              "CWE-279",
              "CWE-116"
            ]
          },
          {
            "capec_id": "CAPEC-83",
            "capec_name": "XPath Injection",
            "capec_description": "An attacker can craft special user-controllable input consisting of XPath expressions to inject the XML database and bypass authentication or glean information that they normally would not be able to. XPath Injection enables an attacker to talk directly to the XML database, thus bypassing the application completely. XPath Injection results from the failure of an application to properly sanitize input used as part of dynamic XPath expressions used to query an XML database.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as content that can be interpreted in the context of an XPath expression. Characters such as a single-quote(') or operators such as or (|), and (&) and such should be filtered if the application does not expect them in the context in which they appear. If such content cannot be filtered, it must at least be properly escaped to avoid them being interpreted as part of XPath expressions.",
              "Use of parameterized XPath queries - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails.",
              "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."
            ],
            "related_cwe": ["CWE-91", "CWE-74", "CWE-20", "CWE-707"]
          },
          {
            "capec_id": "CAPEC-85",
            "capec_name": "AJAX Footprinting",
            "capec_description": "This attack utilizes the frequent client-server roundtrips in Ajax conversation to scan a system. While Ajax does not open up new vulnerabilities per se, it does optimize them from an attacker point of view. A common first step for an attacker is to footprint the target environment to understand what attacks will work. Since footprinting relies on enumeration, the conversational pattern of rapid, multiple requests and responses that are typical in Ajax applications enable an attacker to look for many vulnerabilities, well-known ports, network locations and so on. The knowledge gained through Ajax fingerprinting can be used to support other attacks, such as XSS.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Low",
            "mitigations": [
              "Design: Use browser technologies that do not allow client side scripting.",
              "Implementation: Perform input validation for all remote content."
            ],
            "related_cwe": [
              "CWE-79",
              "CWE-113",
              "CWE-348",
              "CWE-96",
              "CWE-20",
              "CWE-116",
              "CWE-184",
              "CWE-86",
              "CWE-692"
            ]
          },
          {
            "capec_id": "CAPEC-88",
            "capec_name": "OS Command Injection",
            "capec_description": "In this type of an attack, an adversary injects operating system commands into existing application functions. An application that uses untrusted input to build command strings is vulnerable. An adversary can leverage OS command injection in an application to elevate privileges, execute arbitrary commands and compromise the underlying operating system.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use language APIs rather than relying on passing data to the operating system shell or command line. Doing so ensures that the available protection mechanisms in the language are intact and applicable.",
              "Filter all incoming data to escape or remove characters or strings that can be potentially misinterpreted as operating system or shell commands",
              "All application processes should be run with the minimal privileges required. Also, processes must shed privileges as soon as they no longer require them."
            ],
            "related_cwe": ["CWE-78", "CWE-88", "CWE-20", "CWE-697"]
          },
          {
            "capec_id": "CAPEC-9",
            "capec_name": "Buffer Overflow in Local Command-Line Utilities",
            "capec_description": "This attack targets command-line utilities available in a number of shells. An adversary can leverage a vulnerability found in a command-line utility to escalate privilege to root.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow.",
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Operational: Use OS-level preventative functionality. Not a complete solution.",
              "Apply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack.",
              "Do not unnecessarily expose services."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-41265",
    "cve_name": "",
    "cve_description": "An HTTP Request Tunneling vulnerability found in Qlik Sense Enterprise for Windows for versions May 2023 Patch 3 and earlier, February 2023 Patch 7 and earlier, November 2022 Patch 10 and earlier, and August 2022 Patch 12 and earlier allows a remote attacker to elevate their privilege by tunneling HTTP requests in the raw HTTP request. This allows them to send requests that get executed by the backend server hosting the repository application. This is fixed in August 2023 IR, May 2023 Patch 4, February 2023 Patch 8, November 2022 Patch 11, and August 2022 Patch 13.",
    "cve_category": [],
    "cve_published_at": "Published 2023-08-29 23:15:09",
    "cve_updated_at": "Updated 2023-09-08 13:59:58",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.6",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:N",
      "exploitability_score": "3.1",
      "impact_score": "5.8",
      "source": "cve@mitre.org"
    },
    "cpe": [
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:-:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 1 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_1:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 10 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_10:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 11 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_11:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 12 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_12:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 2 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_2:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 3 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_3:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 4 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_4:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 5 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_5:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 6 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_6:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 7 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_7:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 8 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_8:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: August 2022 Update Patch 9 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:august_2022:patch_9:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:-:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 1 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_1:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 2 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_2:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 3 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_3:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 4 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_4:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 5 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_5:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 6 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_6:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: February 2023 Update Patch 7 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:february_2023:patch_7:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: May 2023 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:may_2023:-:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: May 2023 Update Patch 1 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:may_2023:patch_1:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: May 2023 Update Patch 2 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:may_2023:patch_2:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: May 2023 Update Patch3 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:may_2023:patch3:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:-:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 1 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_1:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 10 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_10:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 2 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_2:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 3 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_3:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 4 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_4:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 5 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_5:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 6 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_6:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 7 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_7:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 8 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_8:*:*:enterprise:windows:*:*"
      },
      {
        "version": "Qlik » Qlik Sense » Version: November 2022 Update Patch 9 Enterprise Edition For Windows ",
        "detail": "cpe:2.3:a:qlik:qlik_sense:november_2022:patch_9:*:*:enterprise:windows:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-444",
        "cwe_name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
        "cwe_description": "The product acts as an intermediary HTTP agent (such as a proxy or firewall) in the data flow between two entities such as a client and server, but it does not interpret malformed HTTP requests or responses in ways that are consistent with how the messages will be processed by those entities that are at the ultimate destination.",
        "cwe_extended_description": "HTTP requests or responses (\"messages\") can be malformed or unexpected in ways that cause web servers or clients to interpret the messages in different ways than intermediary HTTP agents such as load balancers, reverse proxies, web caching proxies, application firewalls, etc. For example, an adversary may be able to add duplicate or different header fields that a client or server might interpret as one set of messages, whereas the intermediary might interpret the same sequence of bytes as a different set of messages. For example, discrepancies can arise in how to handle duplicate headers like two Transfer-encoding (TE) or two Content-length (CL), or the malicious HTTP message will have different headers for TE and CL.\n\nThe inconsistent parsing and interpretation of messages can allow the adversary to \"smuggle\" a message to the client/server without the intermediary being aware of it.\n\nThis weakness is usually the result of the usage of outdated or incompatible HTTP protocol versions in the HTTP agents.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-24766",
            "name": "CVE-2022-24766",
            "des": "SSL/TLS-capable proxy allows HTTP smuggling when used in tandem with HTTP/1.0 services, due to inconsistent interpretation and input sanitization of HTTP messages within the body of another message"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-37147",
            "name": "CVE-2021-37147",
            "des": "Chain: caching proxy server has improper input validation (CWE-20) of headers, allowing HTTP response smuggling (CWE-444) using an \"LF line ending\""
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-8287",
            "name": "CVE-2020-8287",
            "des": "Node.js platform allows request smuggling via two Transfer-Encoding headers"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-6276",
            "name": "CVE-2006-6276",
            "des": "Web servers allow request smuggling via inconsistent HTTP headers."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2088",
            "name": "CVE-2005-2088",
            "des": "HTTP server allows request smuggling with both a \"Transfer-Encoding: chunked\" header and a Content-Length header"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2089",
            "name": "CVE-2005-2089",
            "des": "HTTP server allows request smuggling with both a \"Transfer-Encoding: chunked\" header and a Content-Length header"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Use a web server that employs a strict HTTP parsing procedure, such as Apache [REF-433]."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": ["Use only SSL communication."]
          },
          {
            "subheading": "Phase: Implementation",
            "des": ["Terminate the client session after each request."]
          },
          {
            "subheading": "Phase: System Configuration",
            "des": ["Turn all pages to non-cacheable."]
          }
        ],
        "detection_methods": [],
        "capec": [
          {
            "capec_id": "CAPEC-273",
            "capec_name": "HTTP Response Smuggling",
            "capec_description": "An adversary manipulates and injects malicious content in the form of secret unauthorized HTTP responses, into a single HTTP response from a vulnerable or compromised back-end HTTP agent (e.g., server).\n\nSee CanPrecede relationships for possible consequences.",
            "capec_extended_description": "In the maliciously manipulated HTTP response, an adversary can add duplicate header fields that HTTP agents interpret as belonging to separate responses.\n\nThe combined HTTP response ends up being parsed or interpreted as two or more HTTP responses by the targeted client HTTP agent. This allows malicious HTTP responses to bypass security controls. This is performed by the abuse of interpretation and parsing discrepancies in different intermediary HTTP agents (e.g., load balancer, reverse proxy, web caching proxies, application firewalls, etc.) or client HTTP agents (e.g., web browser) in the path of the malicious HTTP responses.\n\nThis attack usually involves the misuse of the HTTP headers: Content-Length and Transfer-Encoding. These abuses are discussed in RFC 2616 #4.4.3 and section #4.2 and are related to ordering and precedence of these headers. [REF-38]\n\nAdditionally this attack can be performed through modification and/or fuzzing of parameters composing the request-line of HTTP messages.\n\nThis attack is usually the result of the usage of outdated or incompatible HTTP protocol versions in the HTTP agents.\n\nThis differs from CAPEC-33 HTTP Request Smuggling, which is usually an attempt to compromise a back-end HTTP agent via HTTP Request messages. HTTP Response Smuggling is an attempt to compromise a client agent (e.g., web browser) .\n\nHTTP Splitting (CAPEC-105 and CAPEC-34) is different from HTTP Smuggling due to the fact that during implementation of asynchronous requests, HTTP Splitting requires the embedding/injection of arbitrary HTML headers and content through user input into browser cookies or Ajax web/browser object parameters like XMLHttpRequest.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Design: evaluate HTTP agents prior to deployment for parsing/interpretation discrepancies.",
              "Configuration: front-end HTTP agents notice ambiguous requests.",
              "Configuration: back-end HTTP agents reject ambiguous requests and close the network connection.",
              "Configuration: Disable reuse of back-end connections.",
              "Configuration: Use HTTP/2 for back-end connections.",
              "Configuration: Use the same web server software for front-end and back-end server.",
              "Implementation: Utilize a Web Application Firewall (WAF) that has built-in mitigation to detect abnormal requests/responses.",
              "Configuration: Prioritize Transfer-Encoding header over Content-Length, whenever an HTTP message contains both.",
              "Configuration: Disallow HTTP messages with both Transfer-Encoding and Content-Length or Double Content-Length Headers.",
              "Configuration: Disallow Malformed/Invalid Transfer-Encoding Headers used in obfuscation, such as:\nHeaders with no space before the value “chunked”\nHeaders with extra spaces\nHeaders beginning with trailing characters\nHeaders providing a value “chunk” instead of “chunked” (the server normalizes this as chunked encoding)\nHeaders with multiple spaces before the value “chunked”\nHeaders with quoted values (whether single or double quotations)\nHeaders with CRLF characters before the value “chunked”\nValues with invalid characters",
              "Configuration: Install latest vendor security patches available for both intermediary and back-end HTTP infrastructure (i.e. proxies and web servers)",
              "Configuration: Ensure that HTTP infrastructure in the chain or network path utilize a strict uniform parsing process.",
              "Implementation: Utilize intermediary HTTP infrastructure capable of filtering and/or sanitizing user-input."
            ],
            "related_cwe": ["CWE-74", "CWE-436", "CWE-444"]
          },
          {
            "capec_id": "CAPEC-33",
            "capec_name": "HTTP Request Smuggling",
            "capec_description": "An adversary abuses the flexibility and discrepancies in the parsing and interpretation of HTTP Request messages using various HTTP headers, request-line and body parameters as well as message sizes (denoted by the end of message signaled by a given HTTP header) by different intermediary HTTP agents (e.g., load balancer, reverse proxy, web caching proxies, application firewalls, etc.) to secretly send unauthorized and malicious HTTP requests to a back-end HTTP agent (e.g., web server).\n\nSee CanPrecede relationships for possible consequences.",
            "capec_extended_description": "A maliciously crafted HTTP request, which contains a second secretly embedded HTTP request is interpreted by an intermediary web proxy as single benign HTTP request, is forwarded to a back-end server, that interprets and parses the HTTP request as two authorized benign HTTP requests bypassing security controls.\n\nThis attack usually involves the misuse of the HTTP headers: Content-Length and Transfer-Encoding. These abuses are discussed in RFC 2616 #4.4.3 and section #4.2 and are related to ordering and precedence of these headers. [REF-38]\n\nAdditionally this attack can be performed through modification and/or fuzzing of parameters composing the request-line of HTTP messages.\n\nThis attack is usually the result of the usage of outdated or incompatible HTTP protocol versions in the HTTP agents.\n\nThis differs from CAPEC-273 HTTP Response Smuggling, which is usually an attempt to compromise a client agent (e.g., web browser) by sending malicious content in HTTP responses from back-end HTTP infrastructure. HTTP Request Smuggling is an attempt to compromise a back-end HTTP agent via HTTP Request messages.\n\nHTTP Splitting (CAPEC-105 and CAPEC-34) is different from HTTP Smuggling due to the fact that during implementation of asynchronous requests, HTTP Splitting requires the embedding/injection of arbitrary HTML headers and content through user input into browser cookies or Ajax web/browser object parameters like XMLHttpRequest.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Design: evaluate HTTP agents prior to deployment for parsing/interpretation discrepancies.",
              "Configuration: front-end HTTP agents notice ambiguous requests.",
              "Configuration: back-end HTTP agents reject ambiguous requests and close the network connection.",
              "Configuration: Disable reuse of back-end connections.",
              "Configuration: Use HTTP/2 for back-end connections.",
              "Configuration: Use the same web server software for front-end and back-end server.",
              "Implementation: Utilize a Web Application Firewall (WAF) that has built-in mitigation to detect abnormal requests/responses.",
              "Configuration: Prioritize Transfer-Encoding header over Content-Length, whenever an HTTP message contains both.",
              "Configuration: Disallow HTTP messages with both Transfer-Encoding and Content-Length or Double Content-Length Headers.",
              "Configuration: Disallow Malformed/Invalid Transfer-Encoding Headers used in obfuscation, such as:\nHeaders with no space before the value “chunked”\nHeaders with extra spaces\nHeaders beginning with trailing characters\nHeaders providing a value “chunk” instead of “chunked” (the server normalizes this as chunked encoding)\nHeaders with multiple spaces before the value “chunked”\nHeaders with quoted values (whether single or double quotations)\nHeaders with CRLF characters before the value “chunked”\nValues with invalid characters",
              "Configuration: Install latest vendor security patches available for both intermediary and back-end HTTP infrastructure (i.e. proxies and web servers)",
              "Configuration: Ensure that HTTP infrastructure in the chain or network path utilize a strict uniform parsing process.",
              "Implementation: Utilize intermediary HTTP infrastructure capable of filtering and/or sanitizing user-input."
            ],
            "related_cwe": ["CWE-444"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-33107",
    "cve_name": "",
    "cve_description": "Memory corruption in Graphics Linux while assigning shared virtual memory region during IOCTL call.",
    "cve_category": ["Overflow", "Memory Corruption"],
    "cve_published_at": "Published 2023-12-05 03:15:15",
    "cve_updated_at": "Updated 2023-12-11 15:02:42",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [],
    "cwe": [
      {
        "cwe_id": "CWE-190",
        "cwe_name": "Integer Overflow or Wraparound",
        "cwe_description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
        "cwe_extended_description": "An integer overflow or wraparound occurs when an integer value is incremented to a value that is too large to store in the associated representation. When this occurs, the value may wrap to become a very small or negative number. While this may be intended behavior in circumstances that rely on wrapping, it can have security consequences if the wrap is unexpected. This is especially the case if the integer overflow can be triggered using user-supplied inputs. This becomes security-critical when the result is used to control looping, make a security decision, or determine the offset or size in behaviors such as memory allocation, copying, concatenation, etc.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-43537",
            "name": "CVE-2021-43537",
            "des": "Chain: in a web browser, an unsigned 64-bit integer is foribly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory corruption (CWE-122)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-21668",
            "name": "CVE-2022-21668",
            "des": "Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-0545",
            "name": "CVE-2022-0545",
            "des": "Chain: 3D renderer has an integer overflow (CWE-190) leading to write-what-where condition (CWE-123) using a crafted image."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-30860",
            "name": "CVE-2021-30860",
            "des": "Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-30663",
            "name": "CVE-2021-30663",
            "des": "Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2018-10887",
            "name": "CVE-2018-10887",
            "des": "Chain: unexpected sign extension (CWE-194) leads to integer overflow (CWE-190), causing an out-of-bounds read (CWE-125)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-1010006",
            "name": "CVE-2019-1010006",
            "des": "Chain: compiler optimization (CWE-733) removes or modifies code used to detect integer overflow (CWE-190), allowing out-of-bounds write (CWE-787)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1866",
            "name": "CVE-2010-1866",
            "des": "Chain: integer overflow (CWE-190) causes a negative signed value, which later bypasses a maximum-only check (CWE-839), leading to heap-based buffer overflow (CWE-122)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2753",
            "name": "CVE-2010-2753",
            "des": "Chain: integer overflow leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1513",
            "name": "CVE-2005-1513",
            "des": "Chain: integer overflow in securely-coded mail program leads to buffer overflow. In 2005, this was regarded as unrealistic to exploit, but in 2020, it was rediscovered to be easier to exploit due to evolutions of the technology."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0391",
            "name": "CVE-2002-0391",
            "des": "Integer overflow via a large number of arguments."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0639",
            "name": "CVE-2002-0639",
            "des": "Integer overflow in OpenSSH as listed in the demonstrative examples."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1141",
            "name": "CVE-2005-1141",
            "des": "Image with large width and height leads to integer overflow."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0102",
            "name": "CVE-2005-0102",
            "des": "Length value of -1 leads to allocation of 0 bytes and resultant heap overflow."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-2013",
            "name": "CVE-2004-2013",
            "des": "Length value of -1 leads to allocation of 0 bytes and resultant heap overflow."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2017-1000121",
            "name": "CVE-2017-1000121",
            "des": "chain: unchecked message size metadata allows integer overflow (CWE-190) leading to buffer overflow (CWE-119)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2013-1591",
            "name": "CVE-2013-1591",
            "des": "Chain: an integer overflow (CWE-190) in the image size calculation causes an infinite loop (CWE-835) which sequentially allocates buffers without limits (CWE-1325) until the stack is full."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Ensure that all protocols are strictly defined, such that all out-of-bounds behavior can be identified simply, and require strict conformance to the protocol."
            ]
          },
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "If possible, choose a language or compiler that performs automatic bounds checking."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Use libraries or frameworks that make it easier to handle numbers without unexpected consequences.",
              "Examples include safe integer handling packages such as SafeInt (C++) or IntegerLib (C or C++). [REF-106]"
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Perform input validation on any numeric input by ensuring that it is within the expected range. Enforce that the input meets both the minimum and maximum requirements for the expected range.",
              "Use unsigned integers where possible. This makes it easier to perform validation for integer overflows. When signed integers are required, ensure that the range check includes minimum values as well as maximum values."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Understand the programming language's underlying representation and how it interacts with numeric calculation (CWE-681). Pay close attention to byte size discrepancies, precision, signed/unsigned distinctions, truncation, conversion and casting between types, \"not-a-number\" calculations, and how the language handles numbers that are too large or too small for its underlying representation. [REF-7]",
              "Also be careful to account for 32-bit, 64-bit, and other potential differences that may affect the numeric representation."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Examine compiler warnings closely and eliminate problems with potential security implications, such as signed / unsigned mismatch in memory operations, or use of uninitialized variables. Even if the weakness is rarely exploitable, a single failure may lead to the compromise of the entire system."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Black Box",
            "des": [
              "Sometimes, evidence of this weakness can be detected using dynamic tools and techniques that interact with the product using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The product's operation may slow down, but it should not become unstable, crash, or generate incorrect results.",
              "Effectiveness: Moderate",
              "Note: Without visibility into the code, black box methods may not be able to sufficiently distinguish this weakness from others, requiring follow-up manual methods to diagnose the underlying problem."
            ]
          },
          {
            "subheading": "Manual Analysis",
            "des": [
              "This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.",
              "Specifically, manual static analysis is useful for evaluating the correctness of allocation calculations. This can be useful for detecting overflow conditions (CWE-190) or similar weaknesses that might have serious security impacts on the program.",
              "Effectiveness: High",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-92",
            "capec_name": "Forced Integer Overflow",
            "capec_description": "This attack forces an integer variable to go out of range. The integer variable is often used as an offset such as size of memory allocation or similarly. The attacker would typically control the value of such variable and try to get it out of range. For instance the integer in question is incremented past the maximum possible value, it may wrap to become a very small, or negative number, therefore providing a very incorrect value which can lead to unexpected behavior. At worst the attacker can execute arbitrary code.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use a language or compiler that performs automatic bounds checking.",
              "Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as integer overflow.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Always do bound checking before consuming user input data."
            ],
            "related_cwe": [
              "CWE-190",
              "CWE-128",
              "CWE-120",
              "CWE-122",
              "CWE-196",
              "CWE-680",
              "CWE-697"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-33106",
    "cve_name": "",
    "cve_description": "Memory corruption while submitting a large list of sync points in an AUX command to the IOCTL_KGSL_GPU_AUX_COMMAND.",
    "cve_category": ["Memory Corruption"],
    "cve_published_at": "Published 2023-12-05 03:15:15",
    "cve_updated_at": "Updated 2023-12-11 15:06:16",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Qualcomm » Qca6174a Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6174a_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6574au Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6574au_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca9377 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca9377_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6574 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6574_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca8081 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca8081_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sxr2130 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sxr2130_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa6155p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa6155p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs610 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs610_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6391 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6391_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6595au Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6595au_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9335 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9335_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9341 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9341_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3990 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3990_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8810 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8810_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8815 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8815_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa8155p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa8155p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcm4290 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcm4290_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs4290 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs4290_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sm7250p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sm7250p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa6145p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa6145p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa6150p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa6150p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa8150p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa8150p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa8195p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa8195p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs410 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs410_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sm4125 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sm4125_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Ar8035 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:ar8035_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Csra6620 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:csra6620_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Csra6640 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:csra6640_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6426 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6426_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6436 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6436_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6574a Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6574a_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6595 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6595_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6696 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6696_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca8337 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca8337_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcn6024 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcn6024_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcn9012 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcn9012_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcn9024 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcn9024_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd660 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd660_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd865 5g Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd865_5g_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9326 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9326_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9370 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9370_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9375 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9375_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9380 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9380_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9385 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9385_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3615 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3615_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3660b Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3660b_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3680b Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3680b_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3910 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3910_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3950 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3950_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3980 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3980_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3988 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3988_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8830 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8830_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8835 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8835_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcm2290 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcm2290_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs2290 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs2290_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn6740 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn6740_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd888 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd888_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa8145p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa8145p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sm7325p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sm7325p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sm7315 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sm7315_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcm6490 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcm6490_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs6490 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs6490_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qrb5165n Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qrb5165n_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa9000p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa9000p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd 8 Gen1 5g Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd_8_gen1_5g_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcn9011 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcn9011_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qrb5165m Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qrb5165m_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sw5100 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sw5100_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sw5100p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sw5100p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa4150p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa4150p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa4155p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa4155p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8832 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8832_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qam8295p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qam8295p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa8295p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa8295p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sg8275p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sg8275p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9390 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9390_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9395 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9395_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8840 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8840_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8845 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8845_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8845h Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8845h_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6698aq Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6698aq_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcm4325 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcm4325_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sg4150p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sg4150p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Ssg2115p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:ssg2115p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Ssg2125p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:ssg2125p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sxr1230p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sxr1230p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sxr2230p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sxr2230p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon Ar2 Gen 1 Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_ar2_gen_1_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon Auto 5g Modem-rf Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_auto_5g_modem-rf_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon W5+ Gen 1 Wearable Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_w5\\+_gen_1_wearable_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon X12 Lte Modem Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_x12_lte_modem_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon X55 5g Modem-rf System Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_x55_5g_modem-rf_system_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon X65 5g Modem-rf System Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_x65_5g_modem-rf_system_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon Xr2 5g Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_xr2_5g_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Flight Rb5 5g Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:flight_rb5_5g_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon Xr2+ Gen 1 Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_xr2\\+_gen_1_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Smart Audio 400 Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:smart_audio_400_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 662 Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_662_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 7c+ Gen 3 Compute Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_7c\\+_gen_3_compute_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcm4490 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcm4490_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs4490 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs4490_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs8250 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs8250_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qam8255p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qam8255p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qam8650p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qam8650p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qam8775p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qam8775p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6797aq Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6797aq_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs8550 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs8550_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa8255p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa8255p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 680 4g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_680_4g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 690 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_690_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 695 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_695_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Fastconnect 6200 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:fastconnect_6200_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Fastconnect 6800 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:fastconnect_6800_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Fastconnect 6900 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:fastconnect_6900_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Fastconnect 6700 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:fastconnect_6700_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Fastconnect 7800 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:fastconnect_7800_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 750g 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_750g_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 4 Gen 1 Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_4_gen_1_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 460 Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_460_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 480 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_480_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 480+ 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_480\\+_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 660 Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_660_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 685 4g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_685_4g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 765g 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_765g_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 768g 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_768g_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 780g 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_780g_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 865 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_865_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 865+ 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_865\\+_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 870 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_870_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 888 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_888_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 888+ 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_888\\+_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 765 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_765_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 778g 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_778g_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 778g+ 5g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_778g\\+_5g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 782g Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_782g_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 8 Gen 1 Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_8_gen_1_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 8+ Gen 1 Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_8\\+_gen_1_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcm8550 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcm8550_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs7230 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs7230_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qualcomm Video Collaboration Vc3 Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qualcomm_video_collaboration_vc3_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qualcomm Video Collaboration Vc5 Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qualcomm_video_collaboration_vc5_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Robotics Rb5 Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:robotics_rb5_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sm8550p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sm8550p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 4 Gen 2 Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_4_gen_2_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 8 Gen 2 Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_8_gen_2_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 8+ Gen 2 Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_8\\+_gen_2_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qualcomm 215 Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qualcomm_215_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qualcomm Video Collaboration Vc1 Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qualcomm_video_collaboration_vc1_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Snapdragon 439 Mobile Platform Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:snapdragon_439_mobile_platform_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa8770p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa8770p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa8775p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa8775p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcm5430 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcm5430_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs5430 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs5430_firmware:-:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-416",
        "cwe_name": "Use After Free",
        "cwe_description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
        "cwe_extended_description": "The use of previously-freed memory can have any number of adverse consequences, ranging from the corruption of valid data to the execution of arbitrary code, depending on the instantiation and timing of the flaw. The simplest way data corruption may occur involves the system's reuse of the freed memory. Use-after-free errors have two common and sometimes overlapping causes:\n\nError conditions and other exceptional circumstances.\nConfusion over which part of the program is responsible for freeing the memory.\n\nIn this scenario, the memory in question is allocated to another pointer validly at some point after it has been freed. The original pointer to the freed memory is used again and points to somewhere within the new allocation. As the data is changed, it corrupts the validly used memory; this induces undefined behavior in the process.\n\nIf the newly allocated data happens to hold a class, in C++ for example, various function pointers may be scattered within the heap data. If one of these function pointers is overwritten with an address to valid shellcode, execution of arbitrary code can be achieved.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-20141",
            "name": "CVE-2022-20141",
            "des": "Chain: an operating system kernel has insufficent resource locking (CWE-413) leading to a use after free (CWE-416)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-2621",
            "name": "CVE-2022-2621",
            "des": "Chain: two threads in a web browser use the same resource (CWE-366), but one of those threads can destroy the resource before the other has completed (CWE-416)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-0920",
            "name": "CVE-2021-0920",
            "des": "Chain: mobile platform race condition (CWE-362) leading to use-after-free (CWE-416), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-6819",
            "name": "CVE-2020-6819",
            "des": "Chain: race condition (CWE-362) leads to use-after-free (CWE-416), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-4168",
            "name": "CVE-2010-4168",
            "des": "Use-after-free triggered by closing a connection while data is still being transmitted."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2941",
            "name": "CVE-2010-2941",
            "des": "Improper allocation for invalid data leads to use-after-free."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2547",
            "name": "CVE-2010-2547",
            "des": "certificate with a large number of Subject Alternate Names not properly handled in realloc, leading to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1772",
            "name": "CVE-2010-1772",
            "des": "Timers are not disabled when a related object is deleted"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1437",
            "name": "CVE-2010-1437",
            "des": "Access to a \"dead\" object that is being cleaned up"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1208",
            "name": "CVE-2010-1208",
            "des": "object is deleted even with a non-zero reference count, and later accessed"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0629",
            "name": "CVE-2010-0629",
            "des": "use-after-free involving request containing an invalid version number"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0378",
            "name": "CVE-2010-0378",
            "des": "unload of an object that is currently being accessed by other functionality"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0302",
            "name": "CVE-2010-0302",
            "des": "incorrectly tracking a reference count leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0249",
            "name": "CVE-2010-0249",
            "des": "use-after-free related to use of uninitialized memory"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0050",
            "name": "CVE-2010-0050",
            "des": "HTML document with incorrectly-nested tags"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3658",
            "name": "CVE-2009-3658",
            "des": "Use after free in ActiveX object by providing a malformed argument to a method"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3616",
            "name": "CVE-2009-3616",
            "des": "use-after-free by disconnecting during data transfer, or a message containing incorrect data types"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3553",
            "name": "CVE-2009-3553",
            "des": "disconnect during a large data transfer causes incorrect reference count, leading to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2416",
            "name": "CVE-2009-2416",
            "des": "use-after-free found by fuzzing"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1837",
            "name": "CVE-2009-1837",
            "des": "Chain: race condition (CWE-362) from improper handling of a page transition in web client while an applet is loading (CWE-368) leads to use after free (CWE-416)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0749",
            "name": "CVE-2009-0749",
            "des": "realloc generates new buffer and pointer, but previous pointer is still retained, leading to use after free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-3328",
            "name": "CVE-2010-3328",
            "des": "Use-after-free in web browser, probably resultant from not initializing memory."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5038",
            "name": "CVE-2008-5038",
            "des": "use-after-free when one thread accessed memory that was freed by another thread"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-0077",
            "name": "CVE-2008-0077",
            "des": "assignment of malformed values to certain properties triggers use after free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4434",
            "name": "CVE-2006-4434",
            "des": "mail server does not properly handle a long header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2753",
            "name": "CVE-2010-2753",
            "des": "chain: integer overflow leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4997",
            "name": "CVE-2006-4997",
            "des": "freed pointer dereference"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Choose a language that provides automatic memory management."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple or complex data structures may lower the usefulness of this strategy."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Fuzzing",
            "des": [
              "Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2023-33063",
    "cve_name": "",
    "cve_description": "Memory corruption in DSP Services during a remote call from HLOS to DSP.",
    "cve_category": ["Memory Corruption"],
    "cve_published_at": "Published 2023-12-05 03:15:12",
    "cve_updated_at": "Updated 2023-12-11 18:20:11",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [],
    "cwe": [
      {
        "cwe_id": "CWE-416",
        "cwe_name": "Use After Free",
        "cwe_description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
        "cwe_extended_description": "The use of previously-freed memory can have any number of adverse consequences, ranging from the corruption of valid data to the execution of arbitrary code, depending on the instantiation and timing of the flaw. The simplest way data corruption may occur involves the system's reuse of the freed memory. Use-after-free errors have two common and sometimes overlapping causes:\n\nError conditions and other exceptional circumstances.\nConfusion over which part of the program is responsible for freeing the memory.\n\nIn this scenario, the memory in question is allocated to another pointer validly at some point after it has been freed. The original pointer to the freed memory is used again and points to somewhere within the new allocation. As the data is changed, it corrupts the validly used memory; this induces undefined behavior in the process.\n\nIf the newly allocated data happens to hold a class, in C++ for example, various function pointers may be scattered within the heap data. If one of these function pointers is overwritten with an address to valid shellcode, execution of arbitrary code can be achieved.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-20141",
            "name": "CVE-2022-20141",
            "des": "Chain: an operating system kernel has insufficent resource locking (CWE-413) leading to a use after free (CWE-416)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-2621",
            "name": "CVE-2022-2621",
            "des": "Chain: two threads in a web browser use the same resource (CWE-366), but one of those threads can destroy the resource before the other has completed (CWE-416)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-0920",
            "name": "CVE-2021-0920",
            "des": "Chain: mobile platform race condition (CWE-362) leading to use-after-free (CWE-416), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-6819",
            "name": "CVE-2020-6819",
            "des": "Chain: race condition (CWE-362) leads to use-after-free (CWE-416), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-4168",
            "name": "CVE-2010-4168",
            "des": "Use-after-free triggered by closing a connection while data is still being transmitted."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2941",
            "name": "CVE-2010-2941",
            "des": "Improper allocation for invalid data leads to use-after-free."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2547",
            "name": "CVE-2010-2547",
            "des": "certificate with a large number of Subject Alternate Names not properly handled in realloc, leading to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1772",
            "name": "CVE-2010-1772",
            "des": "Timers are not disabled when a related object is deleted"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1437",
            "name": "CVE-2010-1437",
            "des": "Access to a \"dead\" object that is being cleaned up"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1208",
            "name": "CVE-2010-1208",
            "des": "object is deleted even with a non-zero reference count, and later accessed"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0629",
            "name": "CVE-2010-0629",
            "des": "use-after-free involving request containing an invalid version number"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0378",
            "name": "CVE-2010-0378",
            "des": "unload of an object that is currently being accessed by other functionality"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0302",
            "name": "CVE-2010-0302",
            "des": "incorrectly tracking a reference count leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0249",
            "name": "CVE-2010-0249",
            "des": "use-after-free related to use of uninitialized memory"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0050",
            "name": "CVE-2010-0050",
            "des": "HTML document with incorrectly-nested tags"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3658",
            "name": "CVE-2009-3658",
            "des": "Use after free in ActiveX object by providing a malformed argument to a method"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3616",
            "name": "CVE-2009-3616",
            "des": "use-after-free by disconnecting during data transfer, or a message containing incorrect data types"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3553",
            "name": "CVE-2009-3553",
            "des": "disconnect during a large data transfer causes incorrect reference count, leading to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2416",
            "name": "CVE-2009-2416",
            "des": "use-after-free found by fuzzing"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1837",
            "name": "CVE-2009-1837",
            "des": "Chain: race condition (CWE-362) from improper handling of a page transition in web client while an applet is loading (CWE-368) leads to use after free (CWE-416)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0749",
            "name": "CVE-2009-0749",
            "des": "realloc generates new buffer and pointer, but previous pointer is still retained, leading to use after free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-3328",
            "name": "CVE-2010-3328",
            "des": "Use-after-free in web browser, probably resultant from not initializing memory."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5038",
            "name": "CVE-2008-5038",
            "des": "use-after-free when one thread accessed memory that was freed by another thread"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-0077",
            "name": "CVE-2008-0077",
            "des": "assignment of malformed values to certain properties triggers use after free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4434",
            "name": "CVE-2006-4434",
            "des": "mail server does not properly handle a long header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2753",
            "name": "CVE-2010-2753",
            "des": "chain: integer overflow leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4997",
            "name": "CVE-2006-4997",
            "des": "freed pointer dereference"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Choose a language that provides automatic memory management."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple or complex data structures may lower the usefulness of this strategy."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Fuzzing",
            "des": [
              "Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2022-22071",
    "cve_name": "",
    "cve_description": "Possible use after free when process shell memory is freed using IOCTL munmap call and process initialization is in progress in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music",
    "cve_category": ["Memory Corruption"],
    "cve_published_at": "Published 2022-06-14 10:15:19",
    "cve_updated_at": "Updated 2022-06-22 14:46:08",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.2",
      "base_severity": "HIGH",
      "cvss_vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
      "exploitability_score": "3.9",
      "impact_score": "10.0",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Qualcomm » Qca6174a Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6174a_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6574au Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6574au_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca9377 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca9377_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6574 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6574_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Mdm9150 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:mdm9150_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd855 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd855_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca8081 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca8081_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs405 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs405_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Apq8053 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:apq8053_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sdx55 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sdx55_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Msm8953 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:msm8953_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa6155p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa6155p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs610 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs610_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6390 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6390_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6391 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6391_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6595au Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6595au_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9335 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9335_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9341 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9341_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3998 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3998_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn6850 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn6850_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn6851 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn6851_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn6855 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn6855_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn6856 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn6856_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8810 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8810_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8815 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8815_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa8155p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa8155p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qrb5165 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qrb5165_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcm4290 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcm4290_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs4290 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs4290_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sdx55m Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sdx55m_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sm7250p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sm7250p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sa8195p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sa8195p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs410 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs410_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sm4125 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sm4125_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Ar8031 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:ar8031_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Ar8035 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:ar8035_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Csra6620 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:csra6620_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Csra6640 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:csra6640_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6426 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6426_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6436 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6436_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6574a Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6574a_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca6696 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca6696_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qca8337 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qca8337_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd460 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd460_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd662 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd662_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd690 5g Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd690_5g_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd750g Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd750g_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd765 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd765_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd765g Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd765g_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd768g Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd768g_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd865 5g Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd865_5g_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd888 5g Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd888_5g_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sdxr2 5g Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sdxr2_5g_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9326 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9326_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9370 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9370_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9375 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9375_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9380 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9380_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcd9385 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcd9385_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3615 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3615_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3660b Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3660b_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3680b Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3680b_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3910 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3910_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3950 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3950_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3980 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3980_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3988 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3988_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3991 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3991_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn3999 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn3999_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn6750 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn6750_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8830 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8830_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wsa8835 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wsa8835_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd439 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd439_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcm2290 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcm2290_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs2290 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs2290_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qualcomm215 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qualcomm215_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn6740 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn6740_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd870 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd870_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd480 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd480_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd778g Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd778g_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sm7325p Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sm7325p_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd780g Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd780g_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sdx12 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sdx12_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcm6490 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcm6490_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qcs6490 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qcs6490_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qrb5165n Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qrb5165n_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sdx65 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sdx65_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn7850 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn7850_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Wcn7851 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:wcn7851_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Qrb5165m Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:qrb5165m_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd680 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd680_firmware:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Qualcomm » Sd695 Firmware » Version: N/A ",
        "detail": "cpe:2.3:o:qualcomm:sd695_firmware:-:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-416",
        "cwe_name": "Use After Free",
        "cwe_description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
        "cwe_extended_description": "The use of previously-freed memory can have any number of adverse consequences, ranging from the corruption of valid data to the execution of arbitrary code, depending on the instantiation and timing of the flaw. The simplest way data corruption may occur involves the system's reuse of the freed memory. Use-after-free errors have two common and sometimes overlapping causes:\n\nError conditions and other exceptional circumstances.\nConfusion over which part of the program is responsible for freeing the memory.\n\nIn this scenario, the memory in question is allocated to another pointer validly at some point after it has been freed. The original pointer to the freed memory is used again and points to somewhere within the new allocation. As the data is changed, it corrupts the validly used memory; this induces undefined behavior in the process.\n\nIf the newly allocated data happens to hold a class, in C++ for example, various function pointers may be scattered within the heap data. If one of these function pointers is overwritten with an address to valid shellcode, execution of arbitrary code can be achieved.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-20141",
            "name": "CVE-2022-20141",
            "des": "Chain: an operating system kernel has insufficent resource locking (CWE-413) leading to a use after free (CWE-416)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-2621",
            "name": "CVE-2022-2621",
            "des": "Chain: two threads in a web browser use the same resource (CWE-366), but one of those threads can destroy the resource before the other has completed (CWE-416)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-0920",
            "name": "CVE-2021-0920",
            "des": "Chain: mobile platform race condition (CWE-362) leading to use-after-free (CWE-416), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-6819",
            "name": "CVE-2020-6819",
            "des": "Chain: race condition (CWE-362) leads to use-after-free (CWE-416), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-4168",
            "name": "CVE-2010-4168",
            "des": "Use-after-free triggered by closing a connection while data is still being transmitted."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2941",
            "name": "CVE-2010-2941",
            "des": "Improper allocation for invalid data leads to use-after-free."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2547",
            "name": "CVE-2010-2547",
            "des": "certificate with a large number of Subject Alternate Names not properly handled in realloc, leading to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1772",
            "name": "CVE-2010-1772",
            "des": "Timers are not disabled when a related object is deleted"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1437",
            "name": "CVE-2010-1437",
            "des": "Access to a \"dead\" object that is being cleaned up"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1208",
            "name": "CVE-2010-1208",
            "des": "object is deleted even with a non-zero reference count, and later accessed"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0629",
            "name": "CVE-2010-0629",
            "des": "use-after-free involving request containing an invalid version number"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0378",
            "name": "CVE-2010-0378",
            "des": "unload of an object that is currently being accessed by other functionality"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0302",
            "name": "CVE-2010-0302",
            "des": "incorrectly tracking a reference count leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0249",
            "name": "CVE-2010-0249",
            "des": "use-after-free related to use of uninitialized memory"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0050",
            "name": "CVE-2010-0050",
            "des": "HTML document with incorrectly-nested tags"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3658",
            "name": "CVE-2009-3658",
            "des": "Use after free in ActiveX object by providing a malformed argument to a method"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3616",
            "name": "CVE-2009-3616",
            "des": "use-after-free by disconnecting during data transfer, or a message containing incorrect data types"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3553",
            "name": "CVE-2009-3553",
            "des": "disconnect during a large data transfer causes incorrect reference count, leading to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2416",
            "name": "CVE-2009-2416",
            "des": "use-after-free found by fuzzing"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1837",
            "name": "CVE-2009-1837",
            "des": "Chain: race condition (CWE-362) from improper handling of a page transition in web client while an applet is loading (CWE-368) leads to use after free (CWE-416)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0749",
            "name": "CVE-2009-0749",
            "des": "realloc generates new buffer and pointer, but previous pointer is still retained, leading to use after free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-3328",
            "name": "CVE-2010-3328",
            "des": "Use-after-free in web browser, probably resultant from not initializing memory."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5038",
            "name": "CVE-2008-5038",
            "des": "use-after-free when one thread accessed memory that was freed by another thread"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-0077",
            "name": "CVE-2008-0077",
            "des": "assignment of malformed values to certain properties triggers use after free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4434",
            "name": "CVE-2006-4434",
            "des": "mail server does not properly handle a long header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2753",
            "name": "CVE-2010-2753",
            "des": "chain: integer overflow leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4997",
            "name": "CVE-2006-4997",
            "des": "freed pointer dereference"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Choose a language that provides automatic memory management."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple or complex data structures may lower the usefulness of this strategy."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Fuzzing",
            "des": [
              "Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2023-42917",
    "cve_name": "",
    "cve_description": "A memory corruption vulnerability was addressed with improved locking. This issue is fixed in iOS 17.1.2 and iPadOS 17.1.2, macOS Sonoma 14.1.2, Safari 17.1.2. Processing web content may lead to arbitrary code execution. Apple is aware of a report that this issue may have been exploited against versions of iOS before iOS 16.7.1.",
    "cve_category": ["Memory Corruption"],
    "cve_published_at": "Published 2023-11-30 23:15:07",
    "cve_updated_at": "Updated 2024-01-05 14:15:48",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
      "exploitability_score": "2.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Apple » Safari Versions before (<) 17.1.2",
        "detail": "cpe:2.3:a:apple:safari:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Iphone Os Versions before (<) 17.1.2",
        "detail": "cpe:2.3:o:apple:iphone_os:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Macos Versions from including (>=) 14.0 and before (<) 14.1.2",
        "detail": "cpe:2.3:o:apple:macos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados Versions before (<) 17.1.2",
        "detail": "cpe:2.3:o:apple:ipados:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-787",
        "cwe_name": "Out-of-bounds Write",
        "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "cwe_extended_description": "Typically, this can result in corruption of data, a crash, or code execution. The product may modify an index or perform pointer arithmetic that references a memory location that is outside of the boundaries of the buffer. A subsequent write operation then produces undefined or unexpected results.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21220",
            "name": "CVE-2021-21220",
            "des": "Chain: insufficient input validation (CWE-20) in browser allows heap corruption (CWE-787), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-28664",
            "name": "CVE-2021-28664",
            "des": "GPU kernel driver allows memory corruption because a user can obtain read/write access to read-only pages, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-17087",
            "name": "CVE-2020-17087",
            "des": "Chain: integer truncation (CWE-197) causes small buffer allocation (CWE-131) leading to out-of-bounds write (CWE-787) in kernel pool, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-1054",
            "name": "CVE-2020-1054",
            "des": "Out-of-bounds write in kernel-mode driver, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0041",
            "name": "CVE-2020-0041",
            "des": "Escape from browser sandbox using out-of-bounds write due to incorrect bounds check, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0968",
            "name": "CVE-2020-0968",
            "des": "Memory corruption in web browser scripting engine, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0022",
            "name": "CVE-2020-0022",
            "des": "chain: mobile phone Bluetooth implementation does not include offset when calculating packet length (CWE-682), leading to out-of-bounds write (CWE-787)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-1010006",
            "name": "CVE-2019-1010006",
            "des": "Chain: compiler optimization (CWE-733) removes or modifies code used to detect integer overflow (CWE-190), allowing out-of-bounds write (CWE-787)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1532",
            "name": "CVE-2009-1532",
            "des": "malformed inputs cause accesses of uninitialized or previously-deleted objects, leading to memory corruption"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0269",
            "name": "CVE-2009-0269",
            "des": "chain: -1 value from a function call was intended to indicate an error, but is used as an array index instead."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-2227",
            "name": "CVE-2002-2227",
            "des": "Unchecked length of SSLv2 challenge value leads to buffer underflow."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4580",
            "name": "CVE-2007-4580",
            "des": "Buffer underflow from a small size value with a large buffer (length parameter inconsistency, CWE-130)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4268",
            "name": "CVE-2007-4268",
            "des": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2550",
            "name": "CVE-2009-2550",
            "des": "Classic stack-based buffer overflow in media player using a long entry in a playlist"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2403",
            "name": "CVE-2009-2403",
            "des": "Heap-based buffer overflow in media player using a long entry in a playlist"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, many languages that perform their own memory management, such as Java and Perl, are not subject to buffer overflows. Other languages, such as Ada and C#, typically provide overflow protection, but the protection can be disabled by the programmer.",
              "Be wary that a language's interface to native code may still be subject to overflows, even if the language itself is theoretically safe."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Examples include the Safe C String Library (SafeStr) by Messier and Viega [REF-57], and the Strsafe.h library from Microsoft [REF-56]. These libraries provide safer versions of overflow-prone string-handling functions.",
              "Note: This is not a complete solution, since many buffer overflows are not related to strings."
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking.",
              "D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Consider adhering to the following rules when allocating and managing an application's memory:"
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code.",
              "Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as \"rebasing\" (for Windows) and \"prelinking\" (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking.",
              "For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].",
              "Note: These techniques do not provide a complete solution. For instance, exploits frequently use a bug that discloses memory addresses in order to maximize reliability of code execution [REF-1337]. It has also been shown that a side-channel attack can bypass ASLR [REF-1333]"
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment.",
              "For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].",
              "Note: This is not a complete solution, since buffer overflows could be used to overwrite nearby variables to modify the software's state in dangerous ways. In addition, it cannot be used in cases in which self-modifying code is required. Finally, an attack could still cause a denial of service, since the typical response is to exit the application."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Replace unbounded copy functions with analogous functions that support length arguments, such as strcpy with strncpy. Create these if they are not available.",
              "Note: This approach is still susceptible to calculation errors, including issues such as off-by-one errors (CWE-193) and incorrectly calculating buffer lengths (CWE-131)."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Automated static analysis generally does not account for environmental considerations when reporting out-of-bounds memory operations. This can make it difficult for users to determine which warnings should be investigated first. For example, an analysis tool might report buffer overflows that originate from command line arguments in a program that is not expected to run with setuid or other special privileges.",
              "Effectiveness: High",
              "Note: Detection techniques for buffer-related errors are more mature than for most other weakness types."
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results."
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2023-42916",
    "cve_name": "",
    "cve_description": "An out-of-bounds read was addressed with improved input validation. This issue is fixed in iOS 17.1.2 and iPadOS 17.1.2, macOS Sonoma 14.1.2, Safari 17.1.2. Processing web content may disclose sensitive information. Apple is aware of a report that this issue may have been exploited against versions of iOS before iOS 16.7.1.",
    "cve_category": [],
    "cve_published_at": "Published 2023-11-30 23:15:07",
    "cve_updated_at": "Updated 2024-01-05 14:15:48",
    "cve_required_action": "",
    "cvss": {
      "base_score": "6.5",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
      "exploitability_score": "2.8",
      "impact_score": "3.6",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Apple » Safari Versions before (<) 17.1.2",
        "detail": "cpe:2.3:a:apple:safari:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Iphone Os Versions before (<) 17.1.2",
        "detail": "cpe:2.3:o:apple:iphone_os:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Macos Versions from including (>=) 14.0 and before (<) 14.1.2",
        "detail": "cpe:2.3:o:apple:macos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados Versions before (<) 17.1.2",
        "detail": "cpe:2.3:o:apple:ipados:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-125",
        "cwe_name": "Out-of-bounds Read",
        "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "cwe_extended_description": "Typically, this can allow attackers to read sensitive information from other memory locations or cause a crash. A crash can occur when the code reads a variable amount of data and assumes that a sentinel exists to stop the read operation, such as a NUL in a string. The expected sentinel might not be located in the out-of-bounds memory, causing excessive data to be read, leading to a segmentation fault or a buffer overflow. The product may modify an index or perform pointer arithmetic that references a memory location that is outside of the boundaries of the buffer. A subsequent read operation then produces undefined or unexpected results.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-11899",
            "name": "CVE-2020-11899",
            "des": "Out-of-bounds read in IP stack used in embedded systems, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2014-0160",
            "name": "CVE-2014-0160",
            "des": "Chain: \"Heartbleed\" bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-40985",
            "name": "CVE-2021-40985",
            "des": "HTML conversion package has a buffer under-read, allowing a crash"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2018-10887",
            "name": "CVE-2018-10887",
            "des": "Chain: unexpected sign extension (CWE-194) leads to integer overflow (CWE-190), causing an out-of-bounds read (CWE-125)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2523",
            "name": "CVE-2009-2523",
            "des": "Chain: product does not handle when an input string is not NULL terminated (CWE-170), leading to buffer over-read (CWE-125) or heap-based buffer overflow (CWE-122)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2018-16069",
            "name": "CVE-2018-16069",
            "des": "Chain: series of floating-point precision errors (CWE-1339) in a web browser rendering engine causes out-of-bounds read (CWE-125), giving access to cross-origin data"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0112",
            "name": "CVE-2004-0112",
            "des": "out-of-bounds read due to improper length check"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0183",
            "name": "CVE-2004-0183",
            "des": "packet with large number of specified elements cause out-of-bounds read."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0221",
            "name": "CVE-2004-0221",
            "des": "packet with large number of specified elements cause out-of-bounds read."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0184",
            "name": "CVE-2004-0184",
            "des": "out-of-bounds read, resultant from integer underflow"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-1940",
            "name": "CVE-2004-1940",
            "des": "large length value causes out-of-bounds read"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0421",
            "name": "CVE-2004-0421",
            "des": "malformed image causes out-of-bounds read"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4113",
            "name": "CVE-2008-4113",
            "des": "OS kernel trusts userland-supplied length value, allowing reading of sensitive information"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "To reduce the likelihood of introducing an out-of-bounds read, ensure that you validate and ensure correct calculations for any length argument, buffer size calculation, or offset. Be especially careful of relying on a sentinel (i.e. special character such as NUL) in untrusted inputs."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a language that provides appropriate memory abstractions."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Fuzzing",
            "des": [
              "Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-540",
            "capec_name": "Overread Buffers",
            "capec_description": "An adversary attacks a target by providing input that causes an application to read beyond the boundary of a defined buffer. This typically occurs when a value influencing where to start or stop reading is set to reflect positions outside of the valid memory location of the buffer. This type of attack may result in exposure of sensitive information, a system crash, or arbitrary code execution.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "High",
            "mitigations": [],
            "related_cwe": ["CWE-125"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-49103",
    "cve_name": "",
    "cve_description": "An issue was discovered in ownCloud owncloud/graphapi 0.2.x before 0.2.1 and 0.3.x before 0.3.1. The graphapi app relies on a third-party GetPhpInfo.php library that provides a URL. When this URL is accessed, it reveals the configuration details of the PHP environment (phpinfo). This information includes all the environment variables of the webserver. In containerized deployments, these environment variables may include sensitive data such as the ownCloud admin password, mail server credentials, and license key. Simply disabling the graphapi app does not eliminate the vulnerability. Additionally, phpinfo exposes various other potentially sensitive configuration details that could be exploited by an attacker to gather information about the system. Therefore, even if ownCloud is not running in a containerized environment, this vulnerability should still be a cause for concern. Note that Docker containers from before February 2023 are not vulnerable to the credential disclosure.",
    "cve_category": [],
    "cve_published_at": "Published 2023-11-21 22:15:08",
    "cve_updated_at": "Updated 2023-12-05 01:15:10",
    "cve_required_action": "",
    "cvss": {
      "base_score": "10.0",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "6.0",
      "source": "cve@mitre.org"
    },
    "cpe": [
      {
        "version": "Owncloud » Graph Api » Version: 0.2.0 ",
        "detail": "cpe:2.3:a:owncloud:graph_api:0.2.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Owncloud » Graph Api » Version: 0.3.0 ",
        "detail": "cpe:2.3:a:owncloud:graph_api:0.3.0:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-6345",
    "cve_name": "",
    "cve_description": "Integer overflow in Skia in Google Chrome prior to 119.0.6045.199 allowed a remote attacker who had compromised the renderer process to potentially perform a sandbox escape via a malicious file. (Chromium security severity: High)",
    "cve_category": ["Overflow"],
    "cve_published_at": "Published 2023-11-29 12:15:07",
    "cve_updated_at": "Updated 2023-12-15 20:09:41",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.6",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
      "exploitability_score": "2.8",
      "impact_score": "6.0",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Debian » Debian Linux » Version: 11.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:11.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Debian » Debian Linux » Version: 12.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:12.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Edge Chromium Versions before (<) 119.0.2151.97",
        "detail": "cpe:2.3:a:microsoft:edge_chromium:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Google » Chrome Versions before (<) 119.0.6045.199",
        "detail": "cpe:2.3:a:google:chrome:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 37 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:37:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 38 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:38:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 39 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:39:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-190",
        "cwe_name": "Integer Overflow or Wraparound",
        "cwe_description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
        "cwe_extended_description": "An integer overflow or wraparound occurs when an integer value is incremented to a value that is too large to store in the associated representation. When this occurs, the value may wrap to become a very small or negative number. While this may be intended behavior in circumstances that rely on wrapping, it can have security consequences if the wrap is unexpected. This is especially the case if the integer overflow can be triggered using user-supplied inputs. This becomes security-critical when the result is used to control looping, make a security decision, or determine the offset or size in behaviors such as memory allocation, copying, concatenation, etc.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-43537",
            "name": "CVE-2021-43537",
            "des": "Chain: in a web browser, an unsigned 64-bit integer is foribly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory corruption (CWE-122)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-21668",
            "name": "CVE-2022-21668",
            "des": "Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-0545",
            "name": "CVE-2022-0545",
            "des": "Chain: 3D renderer has an integer overflow (CWE-190) leading to write-what-where condition (CWE-123) using a crafted image."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-30860",
            "name": "CVE-2021-30860",
            "des": "Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-30663",
            "name": "CVE-2021-30663",
            "des": "Chain: improper input validation (CWE-20) leads to integer overflow (CWE-190) in mobile OS, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2018-10887",
            "name": "CVE-2018-10887",
            "des": "Chain: unexpected sign extension (CWE-194) leads to integer overflow (CWE-190), causing an out-of-bounds read (CWE-125)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-1010006",
            "name": "CVE-2019-1010006",
            "des": "Chain: compiler optimization (CWE-733) removes or modifies code used to detect integer overflow (CWE-190), allowing out-of-bounds write (CWE-787)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1866",
            "name": "CVE-2010-1866",
            "des": "Chain: integer overflow (CWE-190) causes a negative signed value, which later bypasses a maximum-only check (CWE-839), leading to heap-based buffer overflow (CWE-122)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2753",
            "name": "CVE-2010-2753",
            "des": "Chain: integer overflow leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1513",
            "name": "CVE-2005-1513",
            "des": "Chain: integer overflow in securely-coded mail program leads to buffer overflow. In 2005, this was regarded as unrealistic to exploit, but in 2020, it was rediscovered to be easier to exploit due to evolutions of the technology."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0391",
            "name": "CVE-2002-0391",
            "des": "Integer overflow via a large number of arguments."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0639",
            "name": "CVE-2002-0639",
            "des": "Integer overflow in OpenSSH as listed in the demonstrative examples."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1141",
            "name": "CVE-2005-1141",
            "des": "Image with large width and height leads to integer overflow."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0102",
            "name": "CVE-2005-0102",
            "des": "Length value of -1 leads to allocation of 0 bytes and resultant heap overflow."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-2013",
            "name": "CVE-2004-2013",
            "des": "Length value of -1 leads to allocation of 0 bytes and resultant heap overflow."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2017-1000121",
            "name": "CVE-2017-1000121",
            "des": "chain: unchecked message size metadata allows integer overflow (CWE-190) leading to buffer overflow (CWE-119)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2013-1591",
            "name": "CVE-2013-1591",
            "des": "Chain: an integer overflow (CWE-190) in the image size calculation causes an infinite loop (CWE-835) which sequentially allocates buffers without limits (CWE-1325) until the stack is full."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Ensure that all protocols are strictly defined, such that all out-of-bounds behavior can be identified simply, and require strict conformance to the protocol."
            ]
          },
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "If possible, choose a language or compiler that performs automatic bounds checking."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Use libraries or frameworks that make it easier to handle numbers without unexpected consequences.",
              "Examples include safe integer handling packages such as SafeInt (C++) or IntegerLib (C or C++). [REF-106]"
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Perform input validation on any numeric input by ensuring that it is within the expected range. Enforce that the input meets both the minimum and maximum requirements for the expected range.",
              "Use unsigned integers where possible. This makes it easier to perform validation for integer overflows. When signed integers are required, ensure that the range check includes minimum values as well as maximum values."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Understand the programming language's underlying representation and how it interacts with numeric calculation (CWE-681). Pay close attention to byte size discrepancies, precision, signed/unsigned distinctions, truncation, conversion and casting between types, \"not-a-number\" calculations, and how the language handles numbers that are too large or too small for its underlying representation. [REF-7]",
              "Also be careful to account for 32-bit, 64-bit, and other potential differences that may affect the numeric representation."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Examine compiler warnings closely and eliminate problems with potential security implications, such as signed / unsigned mismatch in memory operations, or use of uninitialized variables. Even if the weakness is rarely exploitable, a single failure may lead to the compromise of the entire system."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Black Box",
            "des": [
              "Sometimes, evidence of this weakness can be detected using dynamic tools and techniques that interact with the product using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The product's operation may slow down, but it should not become unstable, crash, or generate incorrect results.",
              "Effectiveness: Moderate",
              "Note: Without visibility into the code, black box methods may not be able to sufficiently distinguish this weakness from others, requiring follow-up manual methods to diagnose the underlying problem."
            ]
          },
          {
            "subheading": "Manual Analysis",
            "des": [
              "This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.",
              "Specifically, manual static analysis is useful for evaluating the correctness of allocation calculations. This can be useful for detecting overflow conditions (CWE-190) or similar weaknesses that might have serious security impacts on the program.",
              "Effectiveness: High",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-92",
            "capec_name": "Forced Integer Overflow",
            "capec_description": "This attack forces an integer variable to go out of range. The integer variable is often used as an offset such as size of memory allocation or similarly. The attacker would typically control the value of such variable and try to get it out of range. For instance the integer in question is incremented past the maximum possible value, it may wrap to become a very small, or negative number, therefore providing a very incorrect value which can lead to unexpected behavior. At worst the attacker can execute arbitrary code.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use a language or compiler that performs automatic bounds checking.",
              "Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as integer overflow.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Always do bound checking before consuming user input data."
            ],
            "related_cwe": [
              "CWE-190",
              "CWE-128",
              "CWE-120",
              "CWE-122",
              "CWE-196",
              "CWE-680",
              "CWE-697"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-4911",
    "cve_name": "",
    "cve_description": "A buffer overflow was discovered in the GNU C Library's dynamic loader ld.so while processing the GLIBC_TUNABLES environment variable. This issue could allow a local attacker to use maliciously crafted GLIBC_TUNABLES environment variables when launching binaries with SUID permission to execute code with elevated privileges.",
    "cve_category": ["Overflow", "Memory Corruption", "Execute code"],
    "cve_published_at": "Published 2023-10-03 18:15:10",
    "cve_updated_at": "Updated 2024-01-03 15:15:10",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Redhat » Enterprise Linux » Version: 8.0 ",
        "detail": "cpe:2.3:o:redhat:enterprise_linux:8.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Enterprise Linux » Version: 9.0 ",
        "detail": "cpe:2.3:o:redhat:enterprise_linux:9.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Virtualization » Version: 4.0 ",
        "detail": "cpe:2.3:a:redhat:virtualization:4.0:*:*:*:*:*:*:*"
      },
      {
        "version": "GNU » Glibc » Version: N/A ",
        "detail": "cpe:2.3:a:gnu:glibc:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 37 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:37:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 38 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:38:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 39 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:39:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-122",
        "cwe_name": "Heap-based Buffer Overflow",
        "cwe_description": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-43537",
            "name": "CVE-2021-43537",
            "des": "Chain: in a web browser, an unsigned 64-bit integer is foribly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory corruption (CWE-122)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4268",
            "name": "CVE-2007-4268",
            "des": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2523",
            "name": "CVE-2009-2523",
            "des": "Chain: product does not handle when an input string is not NULL terminated (CWE-170), leading to buffer over-read (CWE-125) or heap-based buffer overflow (CWE-122)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-29529",
            "name": "CVE-2021-29529",
            "des": "Chain: machine-learning product can have a heap-based buffer overflow (CWE-122) when some integer-oriented bounds are calculated by using ceiling() and floor() on floating point values (CWE-1339)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1866",
            "name": "CVE-2010-1866",
            "des": "Chain: integer overflow (CWE-190) causes a negative signed value, which later bypasses a maximum-only check (CWE-839), leading to heap-based buffer overflow (CWE-122)."
          }
        ],
        "potential_mitigations": [
          {
            "des": [
              "Pre-design: Use a language or compiler that performs automatic bounds checking."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use an abstraction library to abstract away risky APIs. Not a complete solution."
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking.",
              "D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail."
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code.",
              "Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as \"rebasing\" (for Windows) and \"prelinking\" (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking.",
              "For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].",
              "Note: These techniques do not provide a complete solution. For instance, exploits frequently use a bug that discloses memory addresses in order to maximize reliability of code execution [REF-1337]. It has also been shown that a side-channel attack can bypass ASLR [REF-1333]"
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": ["Implement and perform bounds checking on input."]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Do not use dangerous functions such as gets. Look for their safe equivalent, which checks for the boundary."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use OS-level preventative functionality. This is not a complete solution, but it provides some defense in depth."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Fuzzing",
            "des": [
              "Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-92",
            "capec_name": "Forced Integer Overflow",
            "capec_description": "This attack forces an integer variable to go out of range. The integer variable is often used as an offset such as size of memory allocation or similarly. The attacker would typically control the value of such variable and try to get it out of range. For instance the integer in question is incremented past the maximum possible value, it may wrap to become a very small, or negative number, therefore providing a very incorrect value which can lead to unexpected behavior. At worst the attacker can execute arbitrary code.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use a language or compiler that performs automatic bounds checking.",
              "Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as integer overflow.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Always do bound checking before consuming user input data."
            ],
            "related_cwe": [
              "CWE-190",
              "CWE-128",
              "CWE-120",
              "CWE-122",
              "CWE-196",
              "CWE-680",
              "CWE-697"
            ]
          }
        ]
      },
      {
        "cwe_id": "CWE-787",
        "cwe_name": "Out-of-bounds Write",
        "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "cwe_extended_description": "Typically, this can result in corruption of data, a crash, or code execution. The product may modify an index or perform pointer arithmetic that references a memory location that is outside of the boundaries of the buffer. A subsequent write operation then produces undefined or unexpected results.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21220",
            "name": "CVE-2021-21220",
            "des": "Chain: insufficient input validation (CWE-20) in browser allows heap corruption (CWE-787), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-28664",
            "name": "CVE-2021-28664",
            "des": "GPU kernel driver allows memory corruption because a user can obtain read/write access to read-only pages, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-17087",
            "name": "CVE-2020-17087",
            "des": "Chain: integer truncation (CWE-197) causes small buffer allocation (CWE-131) leading to out-of-bounds write (CWE-787) in kernel pool, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-1054",
            "name": "CVE-2020-1054",
            "des": "Out-of-bounds write in kernel-mode driver, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0041",
            "name": "CVE-2020-0041",
            "des": "Escape from browser sandbox using out-of-bounds write due to incorrect bounds check, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0968",
            "name": "CVE-2020-0968",
            "des": "Memory corruption in web browser scripting engine, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0022",
            "name": "CVE-2020-0022",
            "des": "chain: mobile phone Bluetooth implementation does not include offset when calculating packet length (CWE-682), leading to out-of-bounds write (CWE-787)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-1010006",
            "name": "CVE-2019-1010006",
            "des": "Chain: compiler optimization (CWE-733) removes or modifies code used to detect integer overflow (CWE-190), allowing out-of-bounds write (CWE-787)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1532",
            "name": "CVE-2009-1532",
            "des": "malformed inputs cause accesses of uninitialized or previously-deleted objects, leading to memory corruption"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0269",
            "name": "CVE-2009-0269",
            "des": "chain: -1 value from a function call was intended to indicate an error, but is used as an array index instead."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-2227",
            "name": "CVE-2002-2227",
            "des": "Unchecked length of SSLv2 challenge value leads to buffer underflow."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4580",
            "name": "CVE-2007-4580",
            "des": "Buffer underflow from a small size value with a large buffer (length parameter inconsistency, CWE-130)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4268",
            "name": "CVE-2007-4268",
            "des": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2550",
            "name": "CVE-2009-2550",
            "des": "Classic stack-based buffer overflow in media player using a long entry in a playlist"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2403",
            "name": "CVE-2009-2403",
            "des": "Heap-based buffer overflow in media player using a long entry in a playlist"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, many languages that perform their own memory management, such as Java and Perl, are not subject to buffer overflows. Other languages, such as Ada and C#, typically provide overflow protection, but the protection can be disabled by the programmer.",
              "Be wary that a language's interface to native code may still be subject to overflows, even if the language itself is theoretically safe."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Examples include the Safe C String Library (SafeStr) by Messier and Viega [REF-57], and the Strsafe.h library from Microsoft [REF-56]. These libraries provide safer versions of overflow-prone string-handling functions.",
              "Note: This is not a complete solution, since many buffer overflows are not related to strings."
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking.",
              "D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Consider adhering to the following rules when allocating and managing an application's memory:"
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code.",
              "Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as \"rebasing\" (for Windows) and \"prelinking\" (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking.",
              "For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].",
              "Note: These techniques do not provide a complete solution. For instance, exploits frequently use a bug that discloses memory addresses in order to maximize reliability of code execution [REF-1337]. It has also been shown that a side-channel attack can bypass ASLR [REF-1333]"
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment.",
              "For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].",
              "Note: This is not a complete solution, since buffer overflows could be used to overwrite nearby variables to modify the software's state in dangerous ways. In addition, it cannot be used in cases in which self-modifying code is required. Finally, an attack could still cause a denial of service, since the typical response is to exit the application."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Replace unbounded copy functions with analogous functions that support length arguments, such as strcpy with strncpy. Create these if they are not available.",
              "Note: This approach is still susceptible to calculation errors, including issues such as off-by-one errors (CWE-193) and incorrectly calculating buffer lengths (CWE-131)."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Automated static analysis generally does not account for environmental considerations when reporting out-of-bounds memory operations. This can make it difficult for users to determine which warnings should be investigated first. For example, an analysis tool might report buffer overflows that originate from command line arguments in a program that is not expected to run with setuid or other special privileges.",
              "Effectiveness: High",
              "Note: Detection techniques for buffer-related errors are more mature than for most other weakness types."
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results."
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2023-36584",
    "cve_name": "",
    "cve_description": "Windows Mark of the Web Security Feature Bypass Vulnerability",
    "cve_category": [],
    "cve_published_at": "Published 2023-10-10 18:15:14",
    "cve_updated_at": "Updated 2023-10-13 19:07:41",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.4",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L",
      "exploitability_score": "2.8",
      "impact_score": "2.5",
      "source": "secure@microsoft.com"
    },
    "cpe": [
      {
        "version": "Microsoft » Windows Server 2008 » Version: N/A Update SP2 For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2008:-:sp2:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows Server 2008 » Version: N/A Update SP2 For X86 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2008:-:sp2:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows Server 2008 » Version: R2 Update SP1 For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2008:r2:sp1:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows Server 2012 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2012:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2012 » Version: R2 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2012:r2:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2016 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2016:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2019 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2019:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2022 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2022:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 11 21h2 » For X64 Versions before (<) 10.0.22000.2538",
        "detail": "cpe:2.3:o:microsoft:windows_11_21h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 11 21h2 » For Arm64 Versions before (<) 10.0.22000.2538",
        "detail": "cpe:2.3:o:microsoft:windows_11_21h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 11 22h2 » For X64 Versions before (<) 10.0.22621.2428",
        "detail": "cpe:2.3:o:microsoft:windows_11_22h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 11 22h2 » For Arm64 Versions before (<) 10.0.22621.2428",
        "detail": "cpe:2.3:o:microsoft:windows_11_22h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 21h1 » For X86 Versions before (<) 10.0.19041.3570",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h1:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 21h1 » For Arm64 Versions before (<) 10.0.19041.3570",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h1:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 21h1 » For X64 Versions before (<) 10.0.19041.3570",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h1:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » For X86 Versions before (<) 10.0.17763.4974",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » For Arm64 Versions before (<) 10.0.17763.4974",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » For X64 Versions before (<) 10.0.17763.4974",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » For X64 Versions before (<) 10.0.19041.3570",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » For Arm64 Versions before (<) 10.0.19041.3570",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » For X86 Versions before (<) 10.0.19041.3570",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 1507 » For X86 Versions before (<) 10.0.10240.20232",
        "detail": "cpe:2.3:o:microsoft:windows_10_1507:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 1507 » For X64 Versions before (<) 10.0.10240.20232",
        "detail": "cpe:2.3:o:microsoft:windows_10_1507:*:*:*:*:*:*:x64:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-1671",
    "cve_name": "",
    "cve_description": "A pre-auth command injection vulnerability in the warn-proceed handler of Sophos Web Appliance older than version 4.3.10.4 allows execution of arbitrary code.",
    "cve_category": [],
    "cve_published_at": "Published 2023-04-04 10:15:07",
    "cve_updated_at": "Updated 2023-04-26 17:15:11",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Sophos » Web Appliance Versions before (<) 4.3.10.4",
        "detail": "cpe:2.3:a:sophos:web_appliance:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-77",
        "cwe_name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
        "cwe_description": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
        "cwe_extended_description": "Command injection vulnerabilities typically occur when:\n\n1. Data enters the application from an untrusted source.\n2. The data is part of a string that is executed as a command by the application.\n3. By executing the command, the application gives an attacker a privilege or capability that the attacker would not otherwise have.\n\nMany protocols and products have their own custom command language. While OS or shell command strings are frequently discovered and targeted, developers may not realize that these other command languages might also be vulnerable to attacks.\n\nCommand injection is a common problem with wrapper programs.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-36069",
            "name": "CVE-2022-36069",
            "des": "Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash, potentially allowing for code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-1999-0067",
            "name": "CVE-1999-0067",
            "des": "Canonical example of OS command injection. CGI program does not neutralize \"|\" metacharacter when invoking a phonebook program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-9054",
            "name": "CVE-2020-9054",
            "des": "Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-1509",
            "name": "CVE-2022-1509",
            "des": "injection of sed script syntax (\"sed injection\")"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-41282",
            "name": "CVE-2021-41282",
            "des": "injection of sed script syntax (\"sed injection\")"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-13398",
            "name": "CVE-2019-13398",
            "des": "injection of sed script syntax (\"sed injection\")"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-12921",
            "name": "CVE-2019-12921",
            "des": "image program allows injection of commands in \"Magick Vector Graphics (MVG)\" language."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-11698",
            "name": "CVE-2020-11698",
            "des": "anti-spam product allows injection of SNMP commands into confiuration file"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "If at all possible, use library calls rather than external processes to recreate the desired functionality."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "If possible, ensure that all external commands called from the program are statically created."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run time: Run time policy enforcement may be used in an allowlist fashion to prevent use of any non-sanctioned commands."
            ]
          },
          {
            "subheading": "Phase: System Configuration",
            "des": [
              "Assign permissions that prevent the user from accessing/opening privileged files."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-136",
            "capec_name": "LDAP Injection",
            "capec_description": "An attacker manipulates or crafts an LDAP query for the purpose of undermining the security of the target. Some applications use user input to create LDAP queries that are processed by an LDAP server. For example, a user might provide their username during authentication and the username might be inserted in an LDAP query during the authentication process. An attacker could use this input to inject additional commands into an LDAP query that could disclose sensitive information. For example, entering a * in the aforementioned query might return information about all users on the system. This attack is very similar to an SQL injection attack in that it manipulates a query to gather additional information or coerce a particular return value.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as LDAP content.",
              "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the LDAP or application."
            ],
            "related_cwe": ["CWE-77", "CWE-90", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-15",
            "capec_name": "Command Delimiters",
            "capec_description": "An attack of this type exploits a programs' vulnerabilities that allows an attacker's commands to be concatenated onto a legitimate command with the intent of targeting other resources such as the file system or database. The system that uses a filter or denylist input validation, as opposed to allowlist validation is vulnerable to an attacker who predicts delimiters (or combinations of delimiters) not present in the filter or denylist. As with other injection attacks, the attacker uses the command delimiter payload as an entry point to tunnel through the application and activate additional attacks through SQL queries, shell commands, network scanning, and so on.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Perform allowlist validation against a positive specification for command length, type, and parameters.",
              "Design: Limit program privileges, so if commands circumvent program input validation or filter routines then commands do not running under a privileged account",
              "Implementation: Perform input validation for all remote content.",
              "Implementation: Use type conversions such as JDBC prepared statements."
            ],
            "related_cwe": [
              "CWE-146",
              "CWE-77",
              "CWE-184",
              "CWE-78",
              "CWE-185",
              "CWE-93",
              "CWE-140",
              "CWE-157",
              "CWE-138",
              "CWE-154",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-183",
            "capec_name": "IMAP/SMTP Command Injection",
            "capec_description": "An adversary exploits weaknesses in input validation on web-mail servers to execute commands on the IMAP/SMTP server. Web-mail servers often sit between the Internet and the IMAP or SMTP mail server. User requests are received by the web-mail servers which then query the back-end mail server for the requested information and return this response to the user. In an IMAP/SMTP command injection attack, mail-server commands are embedded in parts of the request sent to the web-mail server. If the web-mail server fails to adequately sanitize these requests, these commands are then sent to the back-end mail server when it is queried by the web-mail server, where the commands are then executed. This attack can be especially dangerous since administrators may assume that the back-end server is protected against direct Internet access and therefore may not secure it adequately against the execution of malicious commands.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-77"]
          },
          {
            "capec_id": "CAPEC-248",
            "capec_name": "Command Injection",
            "capec_description": "An adversary looking to execute a command of their choosing, injects new items into an existing command thus modifying interpretation away from what was intended. Commands in this context are often standalone strings that are interpreted by a downstream component and cause specific responses. This type of attack is possible when untrusted values are used to build these command strings. Weaknesses in input validation or command construction can enable the attack and lead to successful exploitation.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "All user-controllable input should be validated and filtered for potentially unwanted characters. Using an allowlist for input is desired, but if use of a denylist approach is necessary, then focusing on command related terms and delimiters is necessary.",
              "Input should be encoded prior to use in commands to make sure command related characters are not treated as part of the command. For example, quotation characters may need to be encoded so that the application does not treat the quotation as a delimiter.",
              "Input should be parameterized, or restricted to data sections of a command, thus removing the chance that the input will be treated as part of the command itself."
            ],
            "related_cwe": ["CWE-77"]
          },
          {
            "capec_id": "CAPEC-40",
            "capec_name": "Manipulating Writeable Terminal Devices",
            "capec_description": "This attack exploits terminal devices that allow themselves to be written to by other users. The attacker sends command strings to the target terminal device hoping that the target user will hit enter and thereby execute the malicious command with their privileges. The attacker can send the results (such as copying /etc/passwd) to a known directory and collect once the attack has succeeded.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Ensure that terminals are only writeable by named owner user and/or administrator",
              "Design: Enforce principle of least privilege"
            ],
            "related_cwe": ["CWE-77"]
          },
          {
            "capec_id": "CAPEC-43",
            "capec_name": "Exploiting Multiple Input Interpretation Layers",
            "capec_description": "An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: <parser1> --> <input validator> --> <parser2>. In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it.",
              "Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist would not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-179",
              "CWE-181",
              "CWE-184",
              "CWE-183",
              "CWE-77",
              "CWE-78",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-75",
            "capec_name": "Manipulating Writeable Configuration Files",
            "capec_description": "Generally these are manually edited files that are not in the preview of the system administrators, any ability on the attackers' behalf to modify these files, for example in a CVS repository, gives unauthorized access directly to the application, the same as authorized users.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege",
              "Design: Backup copies of all configuration files",
              "Implementation: Integrity monitoring for configuration files",
              "Implementation: Enforce audit logging on code and configuration promotion procedures.",
              "Implementation: Load configuration from separate process and memory space, for example a separate physical device like a CD"
            ],
            "related_cwe": [
              "CWE-349",
              "CWE-99",
              "CWE-77",
              "CWE-346",
              "CWE-353",
              "CWE-354"
            ]
          },
          {
            "capec_id": "CAPEC-76",
            "capec_name": "Manipulating Web Input to File System Calls",
            "capec_description": "An attacker manipulates inputs to the target software which the target software passes to file system calls in the OS. The goal is to gain access to, and perhaps modify, areas of the file system that the target software did not intend to be accessible.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege.",
              "Design: Ensure all input is validated, and does not contain file system commands",
              "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
              "Design: For interactive user applications, consider if direct file system interface is necessary, instead consider having the application proxy communication.",
              "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables."
            ],
            "related_cwe": [
              "CWE-23",
              "CWE-22",
              "CWE-73",
              "CWE-77",
              "CWE-346",
              "CWE-348",
              "CWE-285",
              "CWE-272",
              "CWE-59",
              "CWE-74",
              "CWE-15"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2020-2551",
    "cve_name": "",
    "cve_description": "Vulnerability in the Oracle WebLogic Server product of Oracle Fusion Middleware (component: WLS Core Components). Supported versions that are affected are 10.3.6.0.0, 12.1.3.0.0, 12.2.1.3.0 and 12.2.1.4.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via IIOP to compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in takeover of Oracle WebLogic Server. CVSS 3.0 Base Score 9.8 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).",
    "cve_category": [],
    "cve_published_at": "Published 2020-01-15 17:15:17",
    "cve_updated_at": "Updated 2022-10-25 17:59:12",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.5",
      "base_severity": "HIGH",
      "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
      "exploitability_score": "10.0",
      "impact_score": "6.4",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Oracle » Weblogic Server » Version: 10.3.6.0.0 ",
        "detail": "cpe:2.3:a:oracle:weblogic_server:10.3.6.0.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Oracle » Weblogic Server » Version: 12.1.3.0.0 ",
        "detail": "cpe:2.3:a:oracle:weblogic_server:12.1.3.0.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Oracle » Weblogic Server » Version: 12.2.1.3.0 ",
        "detail": "cpe:2.3:a:oracle:weblogic_server:12.2.1.3.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Oracle » Weblogic Server » Version: 12.2.1.4.0 ",
        "detail": "cpe:2.3:a:oracle:weblogic_server:12.2.1.4.0:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-36036",
    "cve_name": "",
    "cve_description": "Windows Cloud Files Mini Filter Driver Elevation of Privilege Vulnerability",
    "cve_category": ["Gain privilege"],
    "cve_published_at": "Published 2023-11-14 18:15:33",
    "cve_updated_at": "Updated 2023-11-20 19:53:11",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Microsoft » Windows Server 2008 » Version: N/A Update SP2 For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2008:-:sp2:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows Server 2008 » Version: R2 Update SP1 For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2008:r2:sp1:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows Server 2012 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2012:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2012 » Version: R2 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2012:r2:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2016 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2016:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2019 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2019:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2022 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2022:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 11 21h2 » For X64 Versions before (<) 10.0.22000.2600",
        "detail": "cpe:2.3:o:microsoft:windows_11_21h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 11 21h2 » For Arm64 Versions before (<) 10.0.22000.2600",
        "detail": "cpe:2.3:o:microsoft:windows_11_21h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 11 22h2 » For Arm64 Versions before (<) 10.0.22621.2715",
        "detail": "cpe:2.3:o:microsoft:windows_11_22h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 11 22h2 » For X64 Versions before (<) 10.0.22621.2715",
        "detail": "cpe:2.3:o:microsoft:windows_11_22h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1607 » For X86 Versions before (<) 10.0.14393.6452",
        "detail": "cpe:2.3:o:microsoft:windows_10_1607:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 1607 » For X64 Versions before (<) 10.0.14393.6452",
        "detail": "cpe:2.3:o:microsoft:windows_10_1607:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » For X86 Versions before (<) 10.0.17763.5122",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » For X64 Versions before (<) 10.0.17763.5122",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » For Arm64 Versions before (<) 10.0.17763.5122",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 » For X86 Versions before (<) 10.0.19041.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 » For X64 Versions before (<) 10.0.19041.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 » For Arm64 Versions before (<) 10.0.19041.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » For X86 Versions before (<) 10.0.19045.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » For Arm64 Versions before (<) 10.0.19045.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » For X64 Versions before (<) 10.0.19045.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1507 » For X64 Versions before (<) 10.0.10240.20308",
        "detail": "cpe:2.3:o:microsoft:windows_10_1507:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1507 » For X86 Versions before (<) 10.0.10240.20308",
        "detail": "cpe:2.3:o:microsoft:windows_10_1507:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 11 23h2 » For X64 Versions before (<) 10.0.22621.2715",
        "detail": "cpe:2.3:o:microsoft:windows_11_23h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 11 23h2 » For Arm64 Versions before (<) 10.0.22621.2715",
        "detail": "cpe:2.3:o:microsoft:windows_11_23h2:*:*:*:*:*:*:arm64:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-36033",
    "cve_name": "",
    "cve_description": "Windows DWM Core Library Elevation of Privilege Vulnerability",
    "cve_category": ["Gain privilege"],
    "cve_published_at": "Published 2023-11-14 18:15:33",
    "cve_updated_at": "Updated 2023-11-20 19:53:40",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Microsoft » Windows Server 2016 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2016:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2019 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2019:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2022 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2022:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 11 21h2 » For X64 Versions before (<) 10.0.22000.2600",
        "detail": "cpe:2.3:o:microsoft:windows_11_21h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 11 21h2 » For Arm64 Versions before (<) 10.0.22000.2600",
        "detail": "cpe:2.3:o:microsoft:windows_11_21h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 11 22h2 » For Arm64 Versions before (<) 10.0.22621.2715",
        "detail": "cpe:2.3:o:microsoft:windows_11_22h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 11 22h2 » For X64 Versions before (<) 10.0.22621.2715",
        "detail": "cpe:2.3:o:microsoft:windows_11_22h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » For X86 Versions before (<) 10.0.17763.5122",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » For X64 Versions before (<) 10.0.17763.5122",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » For Arm64 Versions before (<) 10.0.17763.5122",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 » For X64 Versions before (<) 10.0.19041.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 » For X86 Versions before (<) 10.0.19041.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 » For Arm64 Versions before (<) 10.0.19041.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » For X86 Versions before (<) 10.0.19045.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » For Arm64 Versions before (<) 10.0.19045.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » For X64 Versions before (<) 10.0.19045.3693",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 11 23h2 » For Arm64 Versions before (<) 10.0.22621.2715",
        "detail": "cpe:2.3:o:microsoft:windows_11_23h2:*:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 11 23h2 » For X64 Versions before (<) 10.0.22621.2715",
        "detail": "cpe:2.3:o:microsoft:windows_11_23h2:*:*:*:*:*:*:x64:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-36025",
    "cve_name": "",
    "cve_description": "Windows SmartScreen Security Feature Bypass Vulnerability",
    "cve_category": [],
    "cve_published_at": "Published 2023-11-14 18:15:32",
    "cve_updated_at": "Updated 2023-11-21 01:33:14",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
      "exploitability_score": "2.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Microsoft » Windows Server 2008 » Version: N/A Update SP2 For X86 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2008:-:sp2:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows Server 2008 » Version: R2 Update SP1 For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2008:r2:sp1:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows Server 2012 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2012:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2012 » Version: R2 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2012:r2:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2016 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2016:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2019 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2019:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2022 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2022:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 11 21h2 » Version: N/A For Arm64 ",
        "detail": "cpe:2.3:o:microsoft:windows_11_21h2:-:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 11 21h2 » Version: N/A For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_11_21h2:-:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 11 22h2 » Version: N/A For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_11_22h2:-:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 11 22h2 » Version: N/A For Arm64 ",
        "detail": "cpe:2.3:o:microsoft:windows_11_22h2:-:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 1607 » Version: N/A For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_1607:-:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1607 » Version: N/A For X86 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_1607:-:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » Version: N/A For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:-:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » Version: N/A For Arm64 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:-:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 » Version: N/A For X86 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:-:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 » Version: N/A For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:-:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 » Version: N/A For Arm64 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:-:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 » Version: N/A For X86 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:-:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » Version: N/A For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:-:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » Version: N/A For Arm64 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:-:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 » Version: N/A For X86 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:-:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 1507 » Version: N/A For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_1507:-:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1507 » Version: N/A For X86 ",
        "detail": "cpe:2.3:o:microsoft:windows_10_1507:-:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 11 23h2 » Version: N/A For Arm64 ",
        "detail": "cpe:2.3:o:microsoft:windows_11_23h2:-:*:*:*:*:*:arm64:*"
      },
      {
        "version": "Microsoft » Windows 11 23h2 » Version: N/A For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_11_23h2:-:*:*:*:*:*:x64:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-47246",
    "cve_name": "",
    "cve_description": "In SysAid On-Premise before 23.3.36, a path traversal vulnerability leads to code execution after an attacker writes a file to the Tomcat webroot, as exploited in the wild in November 2023.",
    "cve_category": ["Directory traversal"],
    "cve_published_at": "Published 2023-11-10 06:15:31",
    "cve_updated_at": "Updated 2023-11-13 17:28:37",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Sysaid » Sysaid On-premises Versions before (<) 23.3.36",
        "detail": "cpe:2.3:a:sysaid:sysaid_on-premises:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-22",
        "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "cwe_extended_description": "Many file operations are intended to take place within a restricted directory. By using special elements such as \"..\" and \"/\" separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the \"../\" sequence, which in most modern operating systems is interpreted as the parent directory of the current location. This is referred to as relative path traversal. Path traversal also covers the use of absolute pathnames such as \"/usr/local/bin\", which may also be useful in accessing unexpected files. This is referred to as absolute path traversal.\n\nIn many programming languages, the injection of a null byte (the 0 or NUL) may allow an attacker to truncate a generated filename to widen the scope of attack. For example, the product may add \".txt\" to any pathname, thus limiting the attacker to text files, but a null injection may effectively remove this restriction.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-45918",
            "name": "CVE-2022-45918",
            "des": "Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-20916",
            "name": "CVE-2019-20916",
            "des": "Python package manager does not correctly restrict the filename specified in a Content-Disposition header, allowing arbitrary file read using path traversal sequences such as \"../\""
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-31503",
            "name": "CVE-2022-31503",
            "des": "Python package constructs filenames using an unsafe os.path.join call on untrusted input, allowing absolute path traversal because os.path.join resets the pathname to an absolute path that is specified as part of the input."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-24877",
            "name": "CVE-2022-24877",
            "des": "directory traversal in Go-based Kubernetes operator app allows accessing data from the controller's pod file system via ../ sequences in a yaml file"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21972",
            "name": "CVE-2021-21972",
            "des": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-4053",
            "name": "CVE-2020-4053",
            "des": "a Kubernetes package manager written in Go allows malicious plugins to inject path traversal sequences into a plugin archive (\"Zip slip\") to copy a file outside the intended directory"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-3452",
            "name": "CVE-2020-3452",
            "des": "Chain: security product has improper input validation (CWE-20) leading to directory traversal (CWE-22), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-10743",
            "name": "CVE-2019-10743",
            "des": "Go-based archive library allows extraction of files to locations outside of the target folder with \"../\" path traversal sequences in filenames in a zip file, aka \"Zip Slip\""
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0467",
            "name": "CVE-2010-0467",
            "des": "Newsletter module allows reading arbitrary files using \"../\" sequences."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-7079",
            "name": "CVE-2006-7079",
            "des": "Chain: PHP app uses extract for register_globals compatibility layer (CWE-621), enabling path traversal (CWE-22)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-4194",
            "name": "CVE-2009-4194",
            "des": "FTP server allows deletion of arbitrary files using \"..\" in the DELE command."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-4053",
            "name": "CVE-2009-4053",
            "des": "FTP server allows creation of arbitrary directories using \"..\" in the MKD command."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0244",
            "name": "CVE-2009-0244",
            "des": "FTP service for a Bluetooth device allows listing of directories, and creation or reading of files using \"..\" sequences."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-4013",
            "name": "CVE-2009-4013",
            "des": "Software package maintenance program allows overwriting arbitrary files using \"../\" sequences."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-4449",
            "name": "CVE-2009-4449",
            "des": "Bulletin board allows attackers to determine the existence of files using the avatar."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-4581",
            "name": "CVE-2009-4581",
            "des": "PHP program allows arbitrary code execution using \"..\" in filenames that are fed to the include() function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0012",
            "name": "CVE-2010-0012",
            "des": "Overwrite of files using a .. in a Torrent file."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0013",
            "name": "CVE-2010-0013",
            "des": "Chat program allows overwriting files using a custom smiley request."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5748",
            "name": "CVE-2008-5748",
            "des": "Chain: external control of values for user's desired language and theme enables path traversal."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1936",
            "name": "CVE-2009-1936",
            "des": "Chain: library file sends a redirect if it is directly requested but continues to execute, allowing remote file inclusion and path traversal."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "When validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.",
              "Do not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.",
              "Use a built-in path canonicalization function (such as realpath() in C) that produces the canonical version of the pathname, which effectively removes \"..\" sequences and symbolic links (CWE-23, CWE-59). This includes:"
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.",
              "Note: An application firewall might not cover all possible input vectors. In addition, attack techniques might be available to bypass the protection mechanism, such as using malformed inputs that can still be processed by the component that receives those inputs. Depending on functionality, an application firewall might inadvertently reject or modify legitimate requests. Finally, some manual effort may be required for customization."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.",
              "For example, ID 1 could map to \"inbox.txt\" and ID 2 could map to \"profile.txt\". Features such as the ESAPI AccessReferenceMap [REF-185] provide this capability."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Run the code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software.",
              "OS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations.",
              "This may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise.",
              "Be careful to avoid CWE-243 and other weaknesses related to jails.",
              "Note: The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting the portion of the file system that can be accessed."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Store library, include, and utility files outside of the web document root, if possible. Otherwise, store them in a separate directory and use the web server's access control capabilities to prevent attackers from directly requesting them. One common practice is to define a fixed constant in each calling program, then check for the existence of the constant in the library/include file; if the constant does not exist, then the file was directly requested, and it can exit immediately.",
              "This significantly reduces the chance of an attacker being able to bypass any protection mechanisms that are in the base program but not in the include files. It will also reduce the attack surface."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success.",
              "If errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files.",
              "Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.",
              "In the context of path traversal, error messages which disclose path information can help attackers craft the appropriate attack strings to move through the file system hierarchy."
            ]
          },
          {
            "subheading": "Phases: Operation; Implementation",
            "des": [
              "When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated techniques can find areas where path traversal weaknesses exist. However, tuning or customization may be required to remove or de-prioritize path-traversal problems that are only exploitable by the product's administrator - or other privileged users - and thus potentially valid behavior or, at worst, a bug instead of a vulnerability.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Manual Static Analysis",
            "des": [
              "Manual white box techniques may be able to provide sufficient code coverage and reduction of false positives if all file access operations can be assessed within limited time constraints.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-126",
            "capec_name": "Path Traversal",
            "capec_description": "An adversary uses path manipulation methods to exploit insufficient input validation of a target to obtain access to data that should be not be retrievable by ordinary well-formed requests. A typical variety of this attack involves specifying a path to a desired file together with dot-dot-slash characters, resulting in the file access API or function traversing out of the intended directory structure and into the root file system. By replacing or modifying the expected path information the access function or API retrieves the file desired by the attacker. These attacks either involve the attacker providing a complete path to a targeted file or using control characters (e.g. path separators (/ or \\) and/or dots (.)) to reach desired directories or files.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Configure the access control correctly.",
              "Design: Enforce principle of least privilege.",
              "Design: Execute programs with constrained privileges, so parent process does not open up further vulnerabilities. Ensure that all directories, temporary directories and files, and memory are executing with limited privileges to protect against remote execution.",
              "Design: Input validation. Assume that user inputs are malicious. Utilize strict type, character, and encoding enforcement.",
              "Design: Proxy communication to host, so that communications are terminated at the proxy, sanitizing the requests before forwarding to server host.",
              "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
              "Implementation: Host integrity monitoring for critical files, directories, and processes. The goal of host integrity monitoring is to be aware when a security issue has occurred so that incident response and other forensic activities can begin.",
              "Implementation: Perform input validation for all remote content, including remote and user-generated content.",
              "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables.",
              "Implementation: Use indirect references rather than actual file names.",
              "Implementation: Use possible permissions on file access when developing and deploying web applications.",
              "Implementation: Validate user input by only accepting known good. Ensure all content that is delivered to client is sanitized against an acceptable content specification -- using an allowlist approach."
            ],
            "related_cwe": ["CWE-22"]
          },
          {
            "capec_id": "CAPEC-64",
            "capec_name": "Using Slashes and URL Encoding Combined to Bypass Validation Logic",
            "capec_description": "This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input.",
              "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding.",
              "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.",
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
              "Refer to the RFCs to safely decode URL.",
              "Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive.",
              "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)."
            ],
            "related_cwe": [
              "CWE-177",
              "CWE-173",
              "CWE-172",
              "CWE-73",
              "CWE-22",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-76",
            "capec_name": "Manipulating Web Input to File System Calls",
            "capec_description": "An attacker manipulates inputs to the target software which the target software passes to file system calls in the OS. The goal is to gain access to, and perhaps modify, areas of the file system that the target software did not intend to be accessible.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege.",
              "Design: Ensure all input is validated, and does not contain file system commands",
              "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
              "Design: For interactive user applications, consider if direct file system interface is necessary, instead consider having the application proxy communication.",
              "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables."
            ],
            "related_cwe": [
              "CWE-23",
              "CWE-22",
              "CWE-73",
              "CWE-77",
              "CWE-346",
              "CWE-348",
              "CWE-285",
              "CWE-272",
              "CWE-59",
              "CWE-74",
              "CWE-15"
            ]
          },
          {
            "capec_id": "CAPEC-78",
            "capec_name": "Using Escaped Slashes in Alternate Encoding",
            "capec_description": "This attack targets the use of the backslash in alternate encoding. An adversary can provide a backslash as a leading character and causes a parser to believe that the next character is special. This is called an escape. By using that trick, the adversary tries to exploit alternate ways to encode the same character which leads to filter problems and opens avenues to attack.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Verify that the user-supplied data does not use backslash character to escape malicious characters.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system.",
              "Be aware of the threat of alternative method of data encoding.",
              "Regular expressions can be used to filter out backslash. Make sure you decode before filtering and validating the untrusted input data.",
              "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.",
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
              "Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names."
            ],
            "related_cwe": [
              "CWE-180",
              "CWE-181",
              "CWE-173",
              "CWE-172",
              "CWE-73",
              "CWE-22",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-79",
            "capec_name": "Using Slashes in Alternate Encoding",
            "capec_description": "This attack targets the encoding of the Slash characters. An adversary would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the adversary many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL.",
              "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.",
              "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)",
              "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)",
              "Test your path decoding process against malicious input.",
              "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the application based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-173",
              "CWE-180",
              "CWE-181",
              "CWE-20",
              "CWE-74",
              "CWE-73",
              "CWE-22",
              "CWE-185",
              "CWE-200",
              "CWE-697",
              "CWE-707"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-36851",
    "cve_name": "",
    "cve_description": "A Missing Authentication for Critical Function vulnerability in Juniper Networks Junos OS on SRX Series allows an unauthenticated, network-based attacker to cause limited impact to the file system integrity.\n\n\n\nWith a specific request to\n\nwebauth_operation.php\n\nthat doesn't require authentication, an attacker is able to upload arbitrary files via J-Web, leading to a loss of\n\nintegrity\n\nfor a certain part of the file system, which may allow chaining to other vulnerabilities.\n\n\nThis issue affects Juniper Networks Junos OS on SRX Series:\n\n\n\n* 22.4 versions prior to 22,4R2-S2, 22.4R3;\n* 23.2 versions prior to 23.2R2.",
    "cve_category": [],
    "cve_published_at": "Published 2023-09-27 15:18:55",
    "cve_updated_at": "Updated 2023-09-28 15:34:11",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.3",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "exploitability_score": "3.9",
      "impact_score": "1.4",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Juniper » Junos Versions before (<) 20.4",
        "detail": "cpe:2.3:o:juniper:junos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s6 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s6:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s7 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s7:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s8 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s8:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s6 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s6:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 23.2 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:23.2:r1:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-306",
        "cwe_name": "Missing Authentication for Critical Function",
        "cwe_description": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
        "cwe_extended_description": "As data is migrated to the cloud, if access does not require authentication, it can be easier for attackers to access the data from anywhere on the Internet.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-31260",
            "name": "CVE-2022-31260",
            "des": "Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29951",
            "name": "CVE-2022-29951",
            "des": "TCP-based protocol in Programmable Logic Controller (PLC) has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29952",
            "name": "CVE-2022-29952",
            "des": "Condition Monitor firmware uses a protocol that does not require authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30276",
            "name": "CVE-2022-30276",
            "des": "SCADA-based protocol for bridging WAN and LAN traffic has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30313",
            "name": "CVE-2022-30313",
            "des": "Safety Instrumented System uses proprietary TCP protocols with no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30317",
            "name": "CVE-2022-30317",
            "des": "Distributed Control System (DCS) uses a protocol that has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21972",
            "name": "CVE-2021-21972",
            "des": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-37415",
            "name": "CVE-2021-37415",
            "des": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-13927",
            "name": "CVE-2020-13927",
            "des": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1810",
            "name": "CVE-2002-1810",
            "des": "MFV. Access TFTP server without authentication and obtain configuration file with sensitive plaintext information."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-6827",
            "name": "CVE-2008-6827",
            "des": "Agent software running at privileges does not authenticate incoming requests over an unprotected channel, allowing a Shatter\" attack."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0213",
            "name": "CVE-2004-0213",
            "des": "Product enforces restrictions through a GUI but not through privileged APIs."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-15483",
            "name": "CVE-2020-15483",
            "des": "monitor device allows access to physical UART debug port without authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-9201",
            "name": "CVE-2019-9201",
            "des": "Programmable Logic Controller (PLC) does not have an authentication feature on its communication protocols."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Divide the software into anonymous, normal, privileged, and administrative areas. Identify which of these areas require a proven user identity, and use a centralized authentication capability.",
              "Identify all potential communication channels, or other means of interaction with the software, to ensure that all channels are appropriately protected. Developers sometimes perform authentication at the primary channel, but open up a secondary channel that is assumed to be private. For example, a login mechanism may be listening on one network port, but after successful authentication, it may open up a second port where it waits for the connection, but avoids authentication because it assumes that only the authenticated party will connect to the port.",
              "In general, if the software or protocol allows a single session or user state to persist across multiple connections or channels, authentication and appropriate credential management need to be used throughout."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Where possible, avoid implementing custom authentication routines and consider using authentication capabilities as provided by the surrounding framework, operating system, or environment. These may make it easier to provide a clear separation between authentication tasks and authorization tasks.",
              "In environments such as the World Wide Web, the line between authentication and authorization is sometimes blurred. If custom authentication routines are required instead of those provided by the server, then these routines must be applied to every single page, since these pages could be requested directly."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator [REF-45]."
            ]
          },
          {
            "subheading": "Phases: Implementation; System Configuration; Operation",
            "des": [
              "When storing data in the cloud (e.g., S3 buckets, Azure blobs, Google Cloud Storage, etc.), use the provider's controls to require strong authentication for users who should be allowed to access the data [REF-1297] [REF-1298] [REF-1302]."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Manual Analysis",
            "des": [
              "This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.",
              "Specifically, manual static analysis is useful for evaluating the correctness of custom authentication mechanisms.",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis is useful for detecting commonly-used idioms for authentication. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authentication libraries.",
              "Generally, automated static analysis tools have difficulty detecting custom authentication schemes. In addition, the software's design may include some functionality that is accessible to any user and does not require an established identity; an automated technique that detects the absence of authentication may report false positives.",
              "Effectiveness: Limited"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-12",
            "capec_name": "Choosing Message Identifier",
            "capec_description": "This pattern of attack is defined by the selection of messages distributed via multicast or public information channels that are intended for another client by determining the parameter value assigned to that client. This attack allows the adversary to gain access to potentially privileged information, and to possibly perpetrate other attacks through the distribution means by impersonation. If the channel/message being manipulated is an input rather than output mechanism for the system, (such as a command bus), this style of attack could be used to change the adversary's identifier to more a privileged one.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Associate some ACL (in the form of a token) with an authenticated user which they provide middleware. The middleware uses this token as part of its channel/message selection for that client, or part of a discerning authorization decision for privileged channels/messages.\n\nThe purpose is to architect the system in a way that associates proper authentication/authorization with each channel/message.",
              "Re-architect system input/output channels as appropriate to distribute self-protecting data. That is, encrypt (or otherwise protect) channels/messages so that only authorized readers can see them."
            ],
            "related_cwe": ["CWE-201", "CWE-306"]
          },
          {
            "capec_id": "CAPEC-166",
            "capec_name": "Force the System to Reset Values",
            "capec_description": "An attacker forces the target into a previous state in order to leverage potential weaknesses in the target dependent upon a prior configuration or state-dependent factors. Even in cases where an attacker may not be able to directly control the configuration of the targeted application, they may be able to reset the configuration to a prior state since many applications implement reset functions.",
            "capec_extended_description": "Since these functions are usually intended as emergency features to return an application to a stable configuration if the current configuration degrades functionality, they may not be as strongly secured as other configuration options. The resetting of values is dangerous as it may enable undesired functionality, disable services, or modify access controls. At the very least this is a nuisance attack since the administrator will need to re-apply their configuration. At worst, this attack can open avenues for powerful attacks against the application, and, if it isn't obvious that the configuration has been reset, these vulnerabilities may be present a long time before they are notices.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-306", "CWE-1221", "CWE-1232"]
          },
          {
            "capec_id": "CAPEC-216",
            "capec_name": "Communication Channel Manipulation",
            "capec_description": "An adversary manipulates a setting or parameter on communications channel in order to compromise its security. This can result in information exposure, insertion/removal of information from the communications stream, and/or potentially system compromise.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "",
            "mitigations": [
              "Encrypt all sensitive communications using properly-configured cryptography.",
              "Design the communication system such that it associates proper authentication/authorization with each channel/message."
            ],
            "related_cwe": ["CWE-306"]
          },
          {
            "capec_id": "CAPEC-36",
            "capec_name": "Using Unpublished Interfaces or Functionality",
            "capec_description": "An adversary searches for and invokes interfaces or functionality that the target system designers did not intend to be publicly available. If interfaces fail to authenticate requests, the attacker may be able to invoke functionality they are not authorized for.",
            "capec_extended_description": "Adversaries can also search for undocumented bits on a hardware device, commonly known as \"chicken bits\". These bits are used to enable/disable certain functionality, but are not published. Adversaries can reverse engineer firmware to identify hidden features and change these bits at runtime to achieve malicious behavior.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Authenticating both services and their discovery, and protecting that authentication mechanism simply fixes the bulk of this problem. Protecting the authentication involves the standard means, including: 1) protecting the channel over which authentication occurs, 2) preventing the theft, forgery, or prediction of authentication credentials or the resultant tokens, or 3) subversion of password reset and the like."
            ],
            "related_cwe": ["CWE-306", "CWE-693", "CWE-695", "CWE-1242"]
          },
          {
            "capec_id": "CAPEC-62",
            "capec_name": "Cross Site Request Forgery",
            "capec_description": "An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level. This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply \"riding\" the existing session cookie.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Use cryptographic tokens to associate a request with a specific action. The token can be regenerated at every request so that if a request with an invalid token is encountered, it can be reliably discarded. The token is considered invalid if it arrived with a request other than the action it was supposed to be associated with.",
              "Although less reliable, the use of the optional HTTP Referrer header can also be used to determine whether an incoming request was actually one that the user is authorized for, in the current context.",
              "Additionally, the user can also be prompted to confirm an action every time an action concerning potentially sensitive data is invoked. This way, even if the attacker manages to get the user to click on a malicious link and request the desired action, the user has a chance to recover by denying confirmation. This solution is also implicitly tied to using a second factor of authentication before performing such actions.",
              "In general, every request must be checked for the appropriate authentication token as well as authorization in the current session context."
            ],
            "related_cwe": [
              "CWE-352",
              "CWE-306",
              "CWE-664",
              "CWE-732",
              "CWE-1275"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-36847",
    "cve_name": "",
    "cve_description": "A Missing Authentication for Critical Function vulnerability in Juniper Networks Junos OS on EX Series allows an unauthenticated, network-based attacker to cause limited impact to the file system integrity.\n\n\n\n\n\nWith a specific request to installAppPackage.php that doesn't require authentication an attacker is able to upload arbitrary files via J-Web, leading to a loss of\n\nintegrity\n\nfor a certain\n\npart of the file system, which may allow chaining to other vulnerabilities.\n\n\nThis issue affects Juniper Networks Junos OS on EX Series:\n\n\n\n* All versions prior to 20.4R3-S8;\n* 21.1 versions 21.1R1 and later;\n* 21.2 versions prior to 21.2R3-S6;\n* 21.3 versions\n\nprior to\n\n21.3R3-S5;\n* 21.4 versions\n\nprior to\n\n21.4R3-S4;\n* 22.1 versions\n\nprior to\n\n22.1R3-S3;\n* 22.2 versions\n\nprior to\n\n22.2R3-S1;\n* 22.3 versions\n\nprior to\n\n22.3R2-S2, 22.3R3;\n* 22.4 versions\n\nprior to\n\n22.4R2-S1, 22.4R3.",
    "cve_category": [],
    "cve_published_at": "Published 2023-08-17 20:15:11",
    "cve_updated_at": "Updated 2023-09-27 15:18:54",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.3",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "exploitability_score": "3.9",
      "impact_score": "1.4",
      "source": "sirt@juniper.net"
    },
    "cpe": [
      {
        "version": "Juniper » Junos Versions before (<) 20.4",
        "detail": "cpe:2.3:o:juniper:junos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s6 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s6:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s7 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s7:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s4:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-306",
        "cwe_name": "Missing Authentication for Critical Function",
        "cwe_description": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
        "cwe_extended_description": "As data is migrated to the cloud, if access does not require authentication, it can be easier for attackers to access the data from anywhere on the Internet.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-31260",
            "name": "CVE-2022-31260",
            "des": "Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29951",
            "name": "CVE-2022-29951",
            "des": "TCP-based protocol in Programmable Logic Controller (PLC) has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29952",
            "name": "CVE-2022-29952",
            "des": "Condition Monitor firmware uses a protocol that does not require authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30276",
            "name": "CVE-2022-30276",
            "des": "SCADA-based protocol for bridging WAN and LAN traffic has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30313",
            "name": "CVE-2022-30313",
            "des": "Safety Instrumented System uses proprietary TCP protocols with no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30317",
            "name": "CVE-2022-30317",
            "des": "Distributed Control System (DCS) uses a protocol that has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21972",
            "name": "CVE-2021-21972",
            "des": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-37415",
            "name": "CVE-2021-37415",
            "des": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-13927",
            "name": "CVE-2020-13927",
            "des": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1810",
            "name": "CVE-2002-1810",
            "des": "MFV. Access TFTP server without authentication and obtain configuration file with sensitive plaintext information."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-6827",
            "name": "CVE-2008-6827",
            "des": "Agent software running at privileges does not authenticate incoming requests over an unprotected channel, allowing a Shatter\" attack."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0213",
            "name": "CVE-2004-0213",
            "des": "Product enforces restrictions through a GUI but not through privileged APIs."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-15483",
            "name": "CVE-2020-15483",
            "des": "monitor device allows access to physical UART debug port without authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-9201",
            "name": "CVE-2019-9201",
            "des": "Programmable Logic Controller (PLC) does not have an authentication feature on its communication protocols."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Divide the software into anonymous, normal, privileged, and administrative areas. Identify which of these areas require a proven user identity, and use a centralized authentication capability.",
              "Identify all potential communication channels, or other means of interaction with the software, to ensure that all channels are appropriately protected. Developers sometimes perform authentication at the primary channel, but open up a secondary channel that is assumed to be private. For example, a login mechanism may be listening on one network port, but after successful authentication, it may open up a second port where it waits for the connection, but avoids authentication because it assumes that only the authenticated party will connect to the port.",
              "In general, if the software or protocol allows a single session or user state to persist across multiple connections or channels, authentication and appropriate credential management need to be used throughout."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Where possible, avoid implementing custom authentication routines and consider using authentication capabilities as provided by the surrounding framework, operating system, or environment. These may make it easier to provide a clear separation between authentication tasks and authorization tasks.",
              "In environments such as the World Wide Web, the line between authentication and authorization is sometimes blurred. If custom authentication routines are required instead of those provided by the server, then these routines must be applied to every single page, since these pages could be requested directly."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator [REF-45]."
            ]
          },
          {
            "subheading": "Phases: Implementation; System Configuration; Operation",
            "des": [
              "When storing data in the cloud (e.g., S3 buckets, Azure blobs, Google Cloud Storage, etc.), use the provider's controls to require strong authentication for users who should be allowed to access the data [REF-1297] [REF-1298] [REF-1302]."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Manual Analysis",
            "des": [
              "This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.",
              "Specifically, manual static analysis is useful for evaluating the correctness of custom authentication mechanisms.",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis is useful for detecting commonly-used idioms for authentication. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authentication libraries.",
              "Generally, automated static analysis tools have difficulty detecting custom authentication schemes. In addition, the software's design may include some functionality that is accessible to any user and does not require an established identity; an automated technique that detects the absence of authentication may report false positives.",
              "Effectiveness: Limited"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-12",
            "capec_name": "Choosing Message Identifier",
            "capec_description": "This pattern of attack is defined by the selection of messages distributed via multicast or public information channels that are intended for another client by determining the parameter value assigned to that client. This attack allows the adversary to gain access to potentially privileged information, and to possibly perpetrate other attacks through the distribution means by impersonation. If the channel/message being manipulated is an input rather than output mechanism for the system, (such as a command bus), this style of attack could be used to change the adversary's identifier to more a privileged one.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Associate some ACL (in the form of a token) with an authenticated user which they provide middleware. The middleware uses this token as part of its channel/message selection for that client, or part of a discerning authorization decision for privileged channels/messages.\n\nThe purpose is to architect the system in a way that associates proper authentication/authorization with each channel/message.",
              "Re-architect system input/output channels as appropriate to distribute self-protecting data. That is, encrypt (or otherwise protect) channels/messages so that only authorized readers can see them."
            ],
            "related_cwe": ["CWE-201", "CWE-306"]
          },
          {
            "capec_id": "CAPEC-166",
            "capec_name": "Force the System to Reset Values",
            "capec_description": "An attacker forces the target into a previous state in order to leverage potential weaknesses in the target dependent upon a prior configuration or state-dependent factors. Even in cases where an attacker may not be able to directly control the configuration of the targeted application, they may be able to reset the configuration to a prior state since many applications implement reset functions.",
            "capec_extended_description": "Since these functions are usually intended as emergency features to return an application to a stable configuration if the current configuration degrades functionality, they may not be as strongly secured as other configuration options. The resetting of values is dangerous as it may enable undesired functionality, disable services, or modify access controls. At the very least this is a nuisance attack since the administrator will need to re-apply their configuration. At worst, this attack can open avenues for powerful attacks against the application, and, if it isn't obvious that the configuration has been reset, these vulnerabilities may be present a long time before they are notices.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-306", "CWE-1221", "CWE-1232"]
          },
          {
            "capec_id": "CAPEC-216",
            "capec_name": "Communication Channel Manipulation",
            "capec_description": "An adversary manipulates a setting or parameter on communications channel in order to compromise its security. This can result in information exposure, insertion/removal of information from the communications stream, and/or potentially system compromise.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "",
            "mitigations": [
              "Encrypt all sensitive communications using properly-configured cryptography.",
              "Design the communication system such that it associates proper authentication/authorization with each channel/message."
            ],
            "related_cwe": ["CWE-306"]
          },
          {
            "capec_id": "CAPEC-36",
            "capec_name": "Using Unpublished Interfaces or Functionality",
            "capec_description": "An adversary searches for and invokes interfaces or functionality that the target system designers did not intend to be publicly available. If interfaces fail to authenticate requests, the attacker may be able to invoke functionality they are not authorized for.",
            "capec_extended_description": "Adversaries can also search for undocumented bits on a hardware device, commonly known as \"chicken bits\". These bits are used to enable/disable certain functionality, but are not published. Adversaries can reverse engineer firmware to identify hidden features and change these bits at runtime to achieve malicious behavior.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Authenticating both services and their discovery, and protecting that authentication mechanism simply fixes the bulk of this problem. Protecting the authentication involves the standard means, including: 1) protecting the channel over which authentication occurs, 2) preventing the theft, forgery, or prediction of authentication credentials or the resultant tokens, or 3) subversion of password reset and the like."
            ],
            "related_cwe": ["CWE-306", "CWE-693", "CWE-695", "CWE-1242"]
          },
          {
            "capec_id": "CAPEC-62",
            "capec_name": "Cross Site Request Forgery",
            "capec_description": "An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level. This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply \"riding\" the existing session cookie.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Use cryptographic tokens to associate a request with a specific action. The token can be regenerated at every request so that if a request with an invalid token is encountered, it can be reliably discarded. The token is considered invalid if it arrived with a request other than the action it was supposed to be associated with.",
              "Although less reliable, the use of the optional HTTP Referrer header can also be used to determine whether an incoming request was actually one that the user is authorized for, in the current context.",
              "Additionally, the user can also be prompted to confirm an action every time an action concerning potentially sensitive data is invoked. This way, even if the attacker manages to get the user to click on a malicious link and request the desired action, the user has a chance to recover by denying confirmation. This solution is also implicitly tied to using a second factor of authentication before performing such actions.",
              "In general, every request must be checked for the appropriate authentication token as well as authorization in the current session context."
            ],
            "related_cwe": [
              "CWE-352",
              "CWE-306",
              "CWE-664",
              "CWE-732",
              "CWE-1275"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-36846",
    "cve_name": "",
    "cve_description": "A Missing Authentication for Critical Function vulnerability in Juniper Networks Junos OS on SRX Series allows an unauthenticated, network-based attacker to cause limited impact to the file system integrity.\n\n\n\nWith a specific request to user.php that doesn't require authentication an attacker is able to upload arbitrary files via J-Web, leading to a loss of\n\nintegrity\n\nfor a certain \n\npart of the file system, which may allow chaining to other vulnerabilities.\n\n\nThis issue affects Juniper Networks Junos OS on SRX Series:\n\n\n\n* All versions prior to 20.4R3-S8;\n* 21.1 versions 21.1R1 and later;\n* 21.2 versions prior to 21.2R3-S6;\n* 21.3 versions\n\nprior to\n\n21.3R3-S5;\n* 21.4 versions\n\nprior to\n\n21.4R3-S5;\n* 22.1 versions\n\nprior to\n\n22.1R3-S3;\n* 22.2 versions\n\nprior to\n\n22.2R3-S2;\n* 22.3 versions\n\nprior to\n\n22.3R2-S2, 22.3R3;\n* 22.4 versions\n\nprior to\n\n22.4R2-S1, 22.4R3.",
    "cve_category": [],
    "cve_published_at": "Published 2023-08-17 20:15:10",
    "cve_updated_at": "Updated 2023-09-27 15:18:54",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.3",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "exploitability_score": "3.9",
      "impact_score": "1.4",
      "source": "sirt@juniper.net"
    },
    "cpe": [
      {
        "version": "Juniper » Junos Versions before (<) 20.4",
        "detail": "cpe:2.3:o:juniper:junos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s6 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s6:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s7 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s7:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s4:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-306",
        "cwe_name": "Missing Authentication for Critical Function",
        "cwe_description": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
        "cwe_extended_description": "As data is migrated to the cloud, if access does not require authentication, it can be easier for attackers to access the data from anywhere on the Internet.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-31260",
            "name": "CVE-2022-31260",
            "des": "Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29951",
            "name": "CVE-2022-29951",
            "des": "TCP-based protocol in Programmable Logic Controller (PLC) has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29952",
            "name": "CVE-2022-29952",
            "des": "Condition Monitor firmware uses a protocol that does not require authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30276",
            "name": "CVE-2022-30276",
            "des": "SCADA-based protocol for bridging WAN and LAN traffic has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30313",
            "name": "CVE-2022-30313",
            "des": "Safety Instrumented System uses proprietary TCP protocols with no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30317",
            "name": "CVE-2022-30317",
            "des": "Distributed Control System (DCS) uses a protocol that has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21972",
            "name": "CVE-2021-21972",
            "des": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-37415",
            "name": "CVE-2021-37415",
            "des": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-13927",
            "name": "CVE-2020-13927",
            "des": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1810",
            "name": "CVE-2002-1810",
            "des": "MFV. Access TFTP server without authentication and obtain configuration file with sensitive plaintext information."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-6827",
            "name": "CVE-2008-6827",
            "des": "Agent software running at privileges does not authenticate incoming requests over an unprotected channel, allowing a Shatter\" attack."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0213",
            "name": "CVE-2004-0213",
            "des": "Product enforces restrictions through a GUI but not through privileged APIs."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-15483",
            "name": "CVE-2020-15483",
            "des": "monitor device allows access to physical UART debug port without authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-9201",
            "name": "CVE-2019-9201",
            "des": "Programmable Logic Controller (PLC) does not have an authentication feature on its communication protocols."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Divide the software into anonymous, normal, privileged, and administrative areas. Identify which of these areas require a proven user identity, and use a centralized authentication capability.",
              "Identify all potential communication channels, or other means of interaction with the software, to ensure that all channels are appropriately protected. Developers sometimes perform authentication at the primary channel, but open up a secondary channel that is assumed to be private. For example, a login mechanism may be listening on one network port, but after successful authentication, it may open up a second port where it waits for the connection, but avoids authentication because it assumes that only the authenticated party will connect to the port.",
              "In general, if the software or protocol allows a single session or user state to persist across multiple connections or channels, authentication and appropriate credential management need to be used throughout."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Where possible, avoid implementing custom authentication routines and consider using authentication capabilities as provided by the surrounding framework, operating system, or environment. These may make it easier to provide a clear separation between authentication tasks and authorization tasks.",
              "In environments such as the World Wide Web, the line between authentication and authorization is sometimes blurred. If custom authentication routines are required instead of those provided by the server, then these routines must be applied to every single page, since these pages could be requested directly."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator [REF-45]."
            ]
          },
          {
            "subheading": "Phases: Implementation; System Configuration; Operation",
            "des": [
              "When storing data in the cloud (e.g., S3 buckets, Azure blobs, Google Cloud Storage, etc.), use the provider's controls to require strong authentication for users who should be allowed to access the data [REF-1297] [REF-1298] [REF-1302]."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Manual Analysis",
            "des": [
              "This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.",
              "Specifically, manual static analysis is useful for evaluating the correctness of custom authentication mechanisms.",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis is useful for detecting commonly-used idioms for authentication. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authentication libraries.",
              "Generally, automated static analysis tools have difficulty detecting custom authentication schemes. In addition, the software's design may include some functionality that is accessible to any user and does not require an established identity; an automated technique that detects the absence of authentication may report false positives.",
              "Effectiveness: Limited"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-12",
            "capec_name": "Choosing Message Identifier",
            "capec_description": "This pattern of attack is defined by the selection of messages distributed via multicast or public information channels that are intended for another client by determining the parameter value assigned to that client. This attack allows the adversary to gain access to potentially privileged information, and to possibly perpetrate other attacks through the distribution means by impersonation. If the channel/message being manipulated is an input rather than output mechanism for the system, (such as a command bus), this style of attack could be used to change the adversary's identifier to more a privileged one.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Associate some ACL (in the form of a token) with an authenticated user which they provide middleware. The middleware uses this token as part of its channel/message selection for that client, or part of a discerning authorization decision for privileged channels/messages.\n\nThe purpose is to architect the system in a way that associates proper authentication/authorization with each channel/message.",
              "Re-architect system input/output channels as appropriate to distribute self-protecting data. That is, encrypt (or otherwise protect) channels/messages so that only authorized readers can see them."
            ],
            "related_cwe": ["CWE-201", "CWE-306"]
          },
          {
            "capec_id": "CAPEC-166",
            "capec_name": "Force the System to Reset Values",
            "capec_description": "An attacker forces the target into a previous state in order to leverage potential weaknesses in the target dependent upon a prior configuration or state-dependent factors. Even in cases where an attacker may not be able to directly control the configuration of the targeted application, they may be able to reset the configuration to a prior state since many applications implement reset functions.",
            "capec_extended_description": "Since these functions are usually intended as emergency features to return an application to a stable configuration if the current configuration degrades functionality, they may not be as strongly secured as other configuration options. The resetting of values is dangerous as it may enable undesired functionality, disable services, or modify access controls. At the very least this is a nuisance attack since the administrator will need to re-apply their configuration. At worst, this attack can open avenues for powerful attacks against the application, and, if it isn't obvious that the configuration has been reset, these vulnerabilities may be present a long time before they are notices.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-306", "CWE-1221", "CWE-1232"]
          },
          {
            "capec_id": "CAPEC-216",
            "capec_name": "Communication Channel Manipulation",
            "capec_description": "An adversary manipulates a setting or parameter on communications channel in order to compromise its security. This can result in information exposure, insertion/removal of information from the communications stream, and/or potentially system compromise.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "",
            "mitigations": [
              "Encrypt all sensitive communications using properly-configured cryptography.",
              "Design the communication system such that it associates proper authentication/authorization with each channel/message."
            ],
            "related_cwe": ["CWE-306"]
          },
          {
            "capec_id": "CAPEC-36",
            "capec_name": "Using Unpublished Interfaces or Functionality",
            "capec_description": "An adversary searches for and invokes interfaces or functionality that the target system designers did not intend to be publicly available. If interfaces fail to authenticate requests, the attacker may be able to invoke functionality they are not authorized for.",
            "capec_extended_description": "Adversaries can also search for undocumented bits on a hardware device, commonly known as \"chicken bits\". These bits are used to enable/disable certain functionality, but are not published. Adversaries can reverse engineer firmware to identify hidden features and change these bits at runtime to achieve malicious behavior.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Authenticating both services and their discovery, and protecting that authentication mechanism simply fixes the bulk of this problem. Protecting the authentication involves the standard means, including: 1) protecting the channel over which authentication occurs, 2) preventing the theft, forgery, or prediction of authentication credentials or the resultant tokens, or 3) subversion of password reset and the like."
            ],
            "related_cwe": ["CWE-306", "CWE-693", "CWE-695", "CWE-1242"]
          },
          {
            "capec_id": "CAPEC-62",
            "capec_name": "Cross Site Request Forgery",
            "capec_description": "An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level. This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply \"riding\" the existing session cookie.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Use cryptographic tokens to associate a request with a specific action. The token can be regenerated at every request so that if a request with an invalid token is encountered, it can be reliably discarded. The token is considered invalid if it arrived with a request other than the action it was supposed to be associated with.",
              "Although less reliable, the use of the optional HTTP Referrer header can also be used to determine whether an incoming request was actually one that the user is authorized for, in the current context.",
              "Additionally, the user can also be prompted to confirm an action every time an action concerning potentially sensitive data is invoked. This way, even if the attacker manages to get the user to click on a malicious link and request the desired action, the user has a chance to recover by denying confirmation. This solution is also implicitly tied to using a second factor of authentication before performing such actions.",
              "In general, every request must be checked for the appropriate authentication token as well as authorization in the current session context."
            ],
            "related_cwe": [
              "CWE-352",
              "CWE-306",
              "CWE-664",
              "CWE-732",
              "CWE-1275"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-36845",
    "cve_name": "",
    "cve_description": "A PHP External Variable Modification vulnerability in J-Web of Juniper Networks Junos OS on EX Series\n\nand SRX Series\n\nallows an unauthenticated, network-based attacker to remotely execute code.\n\nUsing a crafted request which sets the variable PHPRC an attacker is able to modify the PHP execution environment allowing the injection und execution of code.\n\n\nThis issue affects Juniper Networks Junos OS on EX Series\n\n\nand\n\n\nSRX Series:\n\n\n\n* All versions prior to\n\n20.4R3-S9;\n* 21.1 versions 21.1R1 and later;\n* 21.2 versions prior to 21.2R3-S7;\n* 21.3 versions prior to 21.3R3-S5;\n* 21.4 versions prior to 21.4R3-S5;\n* 22.1 versions\n\nprior to\n\n22.1R3-S4;\n* 22.2 versions\n\nprior to\n\n22.2R3-S2;\n* 22.3 versions\n\nprior to\n\n22.3R2-S2, 22.3R3-S1;\n* 22.4 versions\n\nprior to\n\n22.4R2-S1, 22.4R3;\n* 23.2 versions prior to 23.2R1-S1, 23.2R2.",
    "cve_category": ["Execute code"],
    "cve_published_at": "Published 2023-08-17 20:15:10",
    "cve_updated_at": "Updated 2023-10-02 19:15:10",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "sirt@juniper.net"
    },
    "cpe": [
      {
        "version": "Juniper » Junos Versions before (<) 20.4",
        "detail": "cpe:2.3:o:juniper:junos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s6 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s6:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s7 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s7:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s4:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-473",
        "cwe_name": "PHP External Variable Modification",
        "cwe_description": "A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise.",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2000-0860",
            "name": "CVE-2000-0860",
            "des": "File upload allows arbitrary file read by setting hidden form variables to match internal variable names."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-0854",
            "name": "CVE-2001-0854",
            "des": "Mistakenly trusts $PHP_SELF variable to determine if include script was called by its parent."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0764",
            "name": "CVE-2002-0764",
            "des": "PHP remote file inclusion by modified assumed-immutable variable."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1025",
            "name": "CVE-2001-1025",
            "des": "Modify key variable when calling scripts that don't load a library that initializes it."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0754",
            "name": "CVE-2003-0754",
            "des": "Authentication bypass by modifying array used for authentication."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phases: Requirements; Implementation",
            "des": [
              "Carefully identify which variables can be controlled or influenced by an external user, and consider adopting a naming convention to emphasize when externally modifiable variables are being used. An application should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary. Do not allow your application to run with register_globals enabled. If you implement a register_globals emulator, be extremely careful of variable extraction, dynamic evaluation, and similar issues, since weaknesses in your emulation could allow external variable modification to take place even without register_globals."
            ]
          }
        ],
        "detection_methods": [],
        "capec": [
          {
            "capec_id": "CAPEC-77",
            "capec_name": "Manipulating User-Controlled Variables",
            "capec_description": "This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An adversary can override variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the adversary can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Do not allow override of global variables and do Not Trust Global Variables.\n\nIf the register_globals option is enabled, PHP will create global variables for each GET, POST, and cookie variable included in the HTTP request. This means that a malicious user may be able to set variables unexpectedly. For instance make sure that the server setting for PHP does not expose global variables.",
              "A software system should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary.",
              "Separate the presentation layer and the business logic layer. Variables at the business logic layer should not be exposed at the presentation layer. This is to prevent computation of business logic from user controlled input data.",
              "Use encapsulation when declaring your variables. This is to lower the exposure of your variables.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should be rejected by the program."
            ],
            "related_cwe": [
              "CWE-15",
              "CWE-94",
              "CWE-96",
              "CWE-285",
              "CWE-302",
              "CWE-473",
              "CWE-1321"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-36844",
    "cve_name": "",
    "cve_description": "A PHP External Variable Modification vulnerability in J-Web of Juniper Networks Junos OS on EX Series allows an unauthenticated, network-based attacker to control certain, important environment variables.\n\nUsing a crafted request an attacker is able to modify\n\ncertain PHP environment variables leading to partial loss of integrity, which may allow chaining to other vulnerabilities.\nThis issue affects Juniper Networks Junos OS on EX Series:\n\n\n\n* All versions prior to 20.4R3-S9;\n* 21.1 versions 21.1R1 and later;\n* 21.2 versions prior to 21.2R3-S7;\n* 21.3 versions\n\nprior to\n\n21.3R3-S5;\n* 21.4 versions\n\nprior to\n\n21.4R3-S5;\n* 22.1 versions\n\nprior to\n\n22.1R3-S4;\n* 22.2 versions\n\nprior to\n\n22.2R3-S2;\n* 22.3 versions\n\nprior to 22.3R3-S1;\n* 22.4 versions\n\nprior to\n\n22.4R2-S2, 22.4R3;\n* 23.2 versions prior to\n\n23.2R1-S1, 23.2R2.",
    "cve_category": [],
    "cve_published_at": "Published 2023-08-17 20:15:10",
    "cve_updated_at": "Updated 2023-10-02 19:15:10",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.3",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
      "exploitability_score": "3.9",
      "impact_score": "1.4",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Juniper » Junos Versions before (<) 20.4",
        "detail": "cpe:2.3:o:juniper:junos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:-:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s6 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s6:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R3 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.1 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:21.1:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.3 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.3:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s3 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s3:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.1 Update R3-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.1:r3-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R2-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r2-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R1-s2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r1-s2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 20.4 Update R3-s7 ",
        "detail": "cpe:2.3:o:juniper:junos:20.4:r3-s7:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s4:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.3 Update R2-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.3:r2-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.4 Update R2 ",
        "detail": "cpe:2.3:o:juniper:junos:22.4:r2:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 22.2 Update R3-s1 ",
        "detail": "cpe:2.3:o:juniper:junos:22.2:r3-s1:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.2 Update R3-s5 ",
        "detail": "cpe:2.3:o:juniper:junos:21.2:r3-s5:*:*:*:*:*:*"
      },
      {
        "version": "Juniper » Junos » Version: 21.4 Update R3-s4 ",
        "detail": "cpe:2.3:o:juniper:junos:21.4:r3-s4:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-473",
        "cwe_name": "PHP External Variable Modification",
        "cwe_description": "A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise.",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2000-0860",
            "name": "CVE-2000-0860",
            "des": "File upload allows arbitrary file read by setting hidden form variables to match internal variable names."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-0854",
            "name": "CVE-2001-0854",
            "des": "Mistakenly trusts $PHP_SELF variable to determine if include script was called by its parent."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0764",
            "name": "CVE-2002-0764",
            "des": "PHP remote file inclusion by modified assumed-immutable variable."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1025",
            "name": "CVE-2001-1025",
            "des": "Modify key variable when calling scripts that don't load a library that initializes it."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0754",
            "name": "CVE-2003-0754",
            "des": "Authentication bypass by modifying array used for authentication."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phases: Requirements; Implementation",
            "des": [
              "Carefully identify which variables can be controlled or influenced by an external user, and consider adopting a naming convention to emphasize when externally modifiable variables are being used. An application should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary. Do not allow your application to run with register_globals enabled. If you implement a register_globals emulator, be extremely careful of variable extraction, dynamic evaluation, and similar issues, since weaknesses in your emulation could allow external variable modification to take place even without register_globals."
            ]
          }
        ],
        "detection_methods": [],
        "capec": [
          {
            "capec_id": "CAPEC-77",
            "capec_name": "Manipulating User-Controlled Variables",
            "capec_description": "This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An adversary can override variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the adversary can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Do not allow override of global variables and do Not Trust Global Variables.\n\nIf the register_globals option is enabled, PHP will create global variables for each GET, POST, and cookie variable included in the HTTP request. This means that a malicious user may be able to set variables unexpectedly. For instance make sure that the server setting for PHP does not expose global variables.",
              "A software system should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary.",
              "Separate the presentation layer and the business logic layer. Variables at the business logic layer should not be exposed at the presentation layer. This is to prevent computation of business logic from user controlled input data.",
              "Use encapsulation when declaring your variables. This is to lower the exposure of your variables.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should be rejected by the program."
            ],
            "related_cwe": [
              "CWE-15",
              "CWE-94",
              "CWE-96",
              "CWE-285",
              "CWE-302",
              "CWE-473",
              "CWE-1321"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-29552",
    "cve_name": "",
    "cve_description": "The Service Location Protocol (SLP, RFC 2608) allows an unauthenticated, remote attacker to register arbitrary services. This could allow the attacker to use spoofed UDP traffic to conduct a denial-of-service attack with a significant amplification factor.",
    "cve_category": ["Denial of service"],
    "cve_published_at": "Published 2023-04-25 16:15:10",
    "cve_updated_at": "Updated 2023-05-04 19:07:24",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.5",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "exploitability_score": "3.9",
      "impact_score": "3.6",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Suse » Linux Enterprise Server » Version: 11 ",
        "detail": "cpe:2.3:o:suse:linux_enterprise_server:11:-:*:*:*:*:*:*"
      },
      {
        "version": "Suse » Linux Enterprise Server » Version: 12 ",
        "detail": "cpe:2.3:o:suse:linux_enterprise_server:12:-:*:*:*:*:*:*"
      },
      {
        "version": "Suse » Linux Enterprise Server » Version: 15 ",
        "detail": "cpe:2.3:o:suse:linux_enterprise_server:15:*:*:*:*:-:*:*"
      },
      {
        "version": "Suse » Linux Enterprise Server » Version: 15 For SAP ",
        "detail": "cpe:2.3:o:suse:linux_enterprise_server:15:*:*:*:*:sap:*:*"
      },
      {
        "version": "Suse » Linux Enterprise Server » Version: 12 For SAP ",
        "detail": "cpe:2.3:o:suse:linux_enterprise_server:12:-:*:*:*:sap:*:*"
      },
      {
        "version": "Suse » Manager Server » Version: N/A ",
        "detail": "cpe:2.3:a:suse:manager_server:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Vmware » Esxi Versions before (<) 7.0",
        "detail": "cpe:2.3:o:vmware:esxi:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Netapp » Smi-s Provider » Version: N/A ",
        "detail": "cpe:2.3:a:netapp:smi-s_provider:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Service Location Protocol Project » Service Location Protocol » Version: N/A ",
        "detail": "cpe:2.3:a:service_location_protocol_project:service_location_protocol:-:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-22518",
    "cve_name": "",
    "cve_description": "All versions of Confluence Data Center and Server are affected by this unexploited vulnerability. This Improper Authorization vulnerability allows an unauthenticated attacker to reset Confluence and create a Confluence instance administrator account. Using this account, an attacker can then perform all administrative actions that are available to Confluence instance administrator leading to - but not limited to - full loss of confidentiality, integrity and availability. \n\nAtlassian Cloud sites are not affected by this vulnerability. If your Confluence site is accessed via an atlassian.net domain, it is hosted by Atlassian and is not vulnerable to this issue.",
    "cve_category": [],
    "cve_published_at": "Published 2023-10-31 15:15:09",
    "cve_updated_at": "Updated 2023-12-19 16:15:08",
    "cve_required_action": "",
    "cvss": {
      "base_score": "10.0",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "6.0",
      "source": "security@atlassian.com"
    },
    "cpe": [
      {
        "version": "Atlassian » Confluence Server Versions from including (>=) 7.20.0 and before (<) 8.3.4",
        "detail": "cpe:2.3:a:atlassian:confluence_server:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Server Versions from including (>=) 1.0.0 and before (<) 7.19.16",
        "detail": "cpe:2.3:a:atlassian:confluence_server:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Server Versions from including (>=) 8.5.0 and before (<) 8.5.3",
        "detail": "cpe:2.3:a:atlassian:confluence_server:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Server Versions from including (>=) 8.4.0 and before (<) 8.4.4",
        "detail": "cpe:2.3:a:atlassian:confluence_server:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Server » Version: 8.6.0 ",
        "detail": "cpe:2.3:a:atlassian:confluence_server:8.6.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Data Center Versions from including (>=) 8.5.0 and before (<) 8.5.3",
        "detail": "cpe:2.3:a:atlassian:confluence_data_center:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Data Center Versions from including (>=) 1.0.0 and before (<) 7.19.16",
        "detail": "cpe:2.3:a:atlassian:confluence_data_center:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Data Center Versions from including (>=) 8.4.0 and before (<) 8.4.4",
        "detail": "cpe:2.3:a:atlassian:confluence_data_center:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Data Center Versions from including (>=) 7.20.0 and before (<) 8.3.4",
        "detail": "cpe:2.3:a:atlassian:confluence_data_center:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Data Center » Version: 8.6.0 ",
        "detail": "cpe:2.3:a:atlassian:confluence_data_center:8.6.0:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-863",
        "cwe_name": "Incorrect Authorization",
        "cwe_description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.",
        "cwe_extended_description": "Assuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\nWhen access control checks are incorrectly applied, users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposures, denial of service, and arbitrary code execution.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-39155",
            "name": "CVE-2021-39155",
            "des": "Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-15900",
            "name": "CVE-2019-15900",
            "des": "Chain: sscanf() call is used to check if a username and group exists, but the return value of sscanf() call is not checked (CWE-252), causing an uninitialized variable to be checked (CWE-457), returning success to allow authorization bypass for executing a privileged (CWE-863)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2213",
            "name": "CVE-2009-2213",
            "des": "Gateway uses default \"Allow\" configuration for its authorization settings."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0034",
            "name": "CVE-2009-0034",
            "des": "Chain: product does not properly interpret a configuration option for a system group, allowing users to gain privileges."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-6123",
            "name": "CVE-2008-6123",
            "des": "Chain: SNMP product does not properly parse a configuration option for which hosts are allowed to connect, allowing unauthorized IP addresses to connect."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-7109",
            "name": "CVE-2008-7109",
            "des": "Chain: reliance on client-side security (CWE-602) allows attackers to bypass authorization using a custom client."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-3424",
            "name": "CVE-2008-3424",
            "des": "Chain: product does not properly handle wildcards in an authorization policy list, allowing unintended access."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4577",
            "name": "CVE-2008-4577",
            "des": "ACL-based protection mechanism treats negative access rights as if they are positive, allowing bypass of intended restrictions."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-6679",
            "name": "CVE-2006-6679",
            "des": "Product relies on the X-Forwarded-For HTTP header for authorization, allowing unintended access by spoofing the header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2801",
            "name": "CVE-2005-2801",
            "des": "Chain: file-system code performs an incorrect comparison (CWE-697), preventing default ACLs from being properly applied."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1155",
            "name": "CVE-2001-1155",
            "des": "Chain: product does not properly check the result of a reverse DNS lookup because of operator precedence (CWE-783), allowing bypass of DNS-based access restrictions."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Divide the product into anonymous, normal, privileged, and administrative areas. Reduce the attack surface by carefully mapping roles with data and functionality. Use role-based access control (RBAC) [REF-229] to enforce the roles at the appropriate boundaries.",
              "Note that this approach may not protect against horizontal authorization, i.e., it will not protect a user from attacking others with the same role."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Ensure that access control checks are performed related to the business logic. These checks may be different than the access control checks that are applied to more generic resources such as files, connections, processes, memory, and database records. For example, a database may restrict access for medical records to a specific database user, but each record might only be intended to be accessible to the patient and the patient's doctor [REF-7]."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, consider using authorization frameworks such as the JAAS Authorization Framework [REF-233] and the OWASP ESAPI Access Control feature [REF-45]."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For web applications, make sure that the access control mechanism is enforced correctly at the server side on every page. Users should not be able to access any unauthorized functionality or information by simply requesting direct access to that page.",
              "One way to do this is to ensure that all pages containing sensitive information are not cached, and that all such pages restrict access to requests that are accompanied by an active and authenticated session token associated with a user who has the required permissions to access that page."
            ]
          },
          {
            "subheading": "Phases: System Configuration; Installation",
            "des": [
              "Use the access control capabilities of your operating system and server environment and define your access control lists accordingly. Use a \"default deny\" policy when defining these ACLs."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis is useful for detecting commonly-used idioms for authorization. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authorization libraries.",
              "Generally, automated static analysis tools have difficulty detecting custom authorization schemes. Even if they can be customized to recognize these schemes, they might not be able to tell whether the scheme correctly performs the authorization in a way that cannot be bypassed or subverted by an attacker.",
              "Effectiveness: Limited"
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "Automated dynamic analysis may not be able to find interfaces that are protected by authorization checks, even if those checks contain weaknesses."
            ]
          },
          {
            "subheading": "Manual Analysis",
            "des": [
              "This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.",
              "Specifically, manual static analysis is useful for evaluating the correctness of custom authorization mechanisms.",
              "Effectiveness: Moderate",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules. However, manual efforts might not achieve desired code coverage within limited time constraints."
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2023-46604",
    "cve_name": "",
    "cve_description": "The Java OpenWire protocol marshaller is vulnerable to Remote Code\nExecution. This vulnerability may allow a remote attacker with network\naccess to either a Java-based OpenWire broker or client to run arbitrary\nshell commands by manipulating serialized class types in the OpenWire\nprotocol to cause either the client or the broker (respectively) to\ninstantiate any class on the classpath.\n\nUsers are recommended to upgrade\nboth brokers and clients to version 5.15.16, 5.16.7, 5.17.6, or 5.18.3\nwhich fixes this issue.",
    "cve_category": ["Execute code"],
    "cve_published_at": "Published 2023-10-27 15:15:14",
    "cve_updated_at": "Updated 2023-11-28 15:15:08",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Apache » Activemq Versions before (<) 5.15.16",
        "detail": "cpe:2.3:a:apache:activemq:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Activemq Versions from including (>=) 5.17.0 and before (<) 5.17.6",
        "detail": "cpe:2.3:a:apache:activemq:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Activemq Versions from including (>=) 5.18.0 and before (<) 5.18.3",
        "detail": "cpe:2.3:a:apache:activemq:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Activemq Versions from including (>=) 5.16.0 and before (<) 5.16.7",
        "detail": "cpe:2.3:a:apache:activemq:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Activemq Legacy Openwire Module Versions from including (>=) 5.17.0 and before (<) 5.17.6",
        "detail": "cpe:2.3:a:apache:activemq_legacy_openwire_module:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Activemq Legacy Openwire Module Versions before (<) 5.15.16",
        "detail": "cpe:2.3:a:apache:activemq_legacy_openwire_module:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Activemq Legacy Openwire Module Versions from including (>=) 5.16.0 and before (<) 5.16.7",
        "detail": "cpe:2.3:a:apache:activemq_legacy_openwire_module:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Activemq Legacy Openwire Module Versions from including (>=) 5.18.0 and before (<) 5.18.3",
        "detail": "cpe:2.3:a:apache:activemq_legacy_openwire_module:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-502",
        "cwe_name": "Deserialization of Untrusted Data",
        "cwe_description": "The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.",
        "cwe_extended_description": "It is often convenient to serialize objects for communication or to save them for later use. However, deserialized data or code can often be modified without using the provided accessor functions if it does not use cryptography to protect itself. Furthermore, any cryptography would still be client-side security -- which is a dangerous security assumption.\n\nData that is untrusted can not be trusted to be well-formed.\n\nWhen developers place no restrictions on \"gadget chains,\" or series of instances and method invocations that can self-execute during the deserialization process (i.e., before the object is returned to the caller), it is sometimes possible for attackers to leverage them to perform unauthorized actions, like generating a shell.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-12799",
            "name": "CVE-2019-12799",
            "des": "chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2015-8103",
            "name": "CVE-2015-8103",
            "des": "Deserialization issue in commonly-used Java library allows remote execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2015-4852",
            "name": "CVE-2015-4852",
            "des": "Deserialization issue in commonly-used Java library allows remote execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2013-1465",
            "name": "CVE-2013-1465",
            "des": "Use of PHP unserialize function on untrusted input allows attacker to modify application configuration."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-3527",
            "name": "CVE-2012-3527",
            "des": "Use of PHP unserialize function on untrusted input in content management system might allow code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-0911",
            "name": "CVE-2012-0911",
            "des": "Use of PHP unserialize function on untrusted input in content management system allows code execution using a crafted cookie value."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-0911",
            "name": "CVE-2012-0911",
            "des": "Content management system written in PHP allows unserialize of arbitrary objects, possibly allowing code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2011-2520",
            "name": "CVE-2011-2520",
            "des": "Python script allows local users to execute code via pickled data."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-4406",
            "name": "CVE-2012-4406",
            "des": "Unsafe deserialization using pickle in a Python script."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0791",
            "name": "CVE-2003-0791",
            "des": "Web browser allows execution of native methods via a crafted string to a JavaScript function that deserializes the string."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "If available, use the signing/sealing features of the programming language to assure that deserialized data has not been tainted. For example, a hash-based message authentication code (HMAC) could be used to ensure that data has not been modified."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When deserializing data, populate a new object rather than just deserializing. The result is that the data flows through safe input validation and that the functions are safe."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Explicitly define a final object() to prevent deserialization."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "Make fields transient to protect them from deserialization.",
              "An attempt to serialize and then deserialize a class containing transient fields will result in NULLs where the transient data should be. This is an excellent way to prevent time, environment-based, or sensitive variables from being carried over and used improperly."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. This limits the potential for unintended or unauthorized types and gadgets to be leveraged by the attacker. Add only acceptable classes to an allowlist. Note: new gadgets are constantly being discovered, so this alone is not a sufficient mitigation."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-586",
            "capec_name": "Object Injection",
            "capec_description": "An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Implementation: Validate object before deserialization process",
              "Design: Limit which types can be deserialized.",
              "Implementation: Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. Use an allowlist of acceptable classes.",
              "Implementation: Keep session state on the server, when possible."
            ],
            "related_cwe": ["CWE-502"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-46748",
    "cve_name": "",
    "cve_description": "An authenticated SQL injection vulnerability exists in the BIG-IP Configuration utility which\n\nmay allow an authenticated attacker with network access to the Configuration utility through the BIG-IP management port and/or self IP addresses to execute arbitrary system commands.\n\n Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated",
    "cve_category": ["Sql Injection"],
    "cve_published_at": "Published 2023-10-26 21:15:08",
    "cve_updated_at": "Updated 2023-11-16 02:15:27",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "2.8",
      "impact_score": "5.9",
      "source": "f5sirt@f5.com"
    },
    "cpe": [
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Automation Toolchain Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_automation_toolchain:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Automation Toolchain Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_automation_toolchain:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Automation Toolchain Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_automation_toolchain:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Automation Toolchain Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_automation_toolchain:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Automation Toolchain Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_automation_toolchain:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Container Ingress Services Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_container_ingress_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Container Ingress Services Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_container_ingress_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Container Ingress Services Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_container_ingress_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Container Ingress Services Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_container_ingress_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Container Ingress Services Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_container_ingress_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Services Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Services Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Services Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Services Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Services Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_services:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-89",
        "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.",
        "cwe_extended_description": "Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data. This can be used to alter query logic to bypass security checks, or to insert additional statements that modify the back-end database, possibly including execution of system commands.\n\nSQL injection has become a common issue with database-driven web sites. The flaw is easily detected, and easily exploited, and as such, any site or product package with even a minimal user base is likely to be subject to an attempted attack of this kind. This flaw depends on the fact that SQL makes no real distinction between the control and data planes.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-42258",
            "name": "CVE-2021-42258",
            "des": "SQL injection in time and billing software, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-27101",
            "name": "CVE-2021-27101",
            "des": "SQL injection in file-transfer system via a crafted Host header, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-12271",
            "name": "CVE-2020-12271",
            "des": "SQL injection in firewall product's admin interface or user portal, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-3792",
            "name": "CVE-2019-3792",
            "des": "An automation system written in Go contains an API that is vulnerable to SQL injection allowing the attacker to read privileged data."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0366",
            "name": "CVE-2004-0366",
            "des": "chain: SQL injection in library intended for database authentication allows SQL injection and authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2790",
            "name": "CVE-2008-2790",
            "des": "SQL injection through an ID that was supposed to be numeric."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2223",
            "name": "CVE-2008-2223",
            "des": "SQL injection through an ID that was supposed to be numeric."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-6602",
            "name": "CVE-2007-6602",
            "des": "SQL injection via user name."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5817",
            "name": "CVE-2008-5817",
            "des": "SQL injection via user name or password fields."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0377",
            "name": "CVE-2003-0377",
            "des": "SQL injection in security product, using a crafted group name."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2380",
            "name": "CVE-2008-2380",
            "des": "SQL injection in authentication library."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2017-11508",
            "name": "CVE-2017-11508",
            "des": "SQL injection in vulnerability management and reporting tool, using a crafted password."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, consider using persistence layers such as Hibernate or Enterprise Java Beans, which can provide significant protection against SQL injection if used properly."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "If available, use structured mechanisms that automatically enforce the separation between data and code. These mechanisms may be able to provide the relevant quoting, encoding, and validation automatically, instead of relying on the developer to provide this capability at every point where output is generated.",
              "Process SQL queries using prepared statements, parameterized queries, or stored procedures. These features should accept parameters or variables and support strong typing. Do not dynamically construct and execute query strings within these features using \"exec\" or similar functionality, since this may re-introduce the possibility of SQL injection. [REF-867]"
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.",
              "Specifically, follow the principle of least privilege when creating user accounts to a SQL database. The database users should only have the minimum privileges necessary to use their account. If the requirements of the system indicate that a user can read and modify their own data, then limit their privileges so they cannot read/write others' data. Use the strictest permissions possible on all database objects, such as execute-only for stored procedures."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict allowlist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88).",
              "Instead of building a new implementation, such features may be available in the database or programming language. For example, the Oracle DBMS_ASSERT package can check or enforce that parameters have certain properties that make them less vulnerable to SQL injection. For MySQL, the mysql_real_escape_string() API function is available in both C and PHP."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "When constructing SQL query strings, use stringent allowlists that limit the character set based on the expected value of the parameter in the request. This will indirectly limit the scope of an attack, but this technique is less important than proper output encoding and escaping.",
              "Note that proper output encoding, escaping, and quoting is the most effective solution for preventing SQL injection, although input validation may provide some defense-in-depth. This is because it effectively limits what will appear in output. Input validation will not always prevent SQL injection, especially if you are required to support free-form text fields that could contain arbitrary characters. For example, the name \"O'Reilly\" would likely pass the validation step, since it is a common last name in the English language. However, it cannot be directly inserted into the database because it contains the \"'\" apostrophe character, which would need to be escaped or otherwise handled. In this case, stripping the apostrophe might reduce the risk of SQL injection, but it would produce incorrect behavior because the wrong name would be recorded.",
              "When feasible, it may be safest to disallow meta-characters entirely, instead of escaping them. This will provide some defense in depth. After the data is entered into the database, later processes may neglect to escape meta-characters before use, and you may not have control over those processes."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success.",
              "If errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files.",
              "Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.",
              "In the context of SQL Injection, error messages revealing the structure of a SQL query can help attackers tailor successful attack strings."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.",
              "Note: An application firewall might not cover all possible input vectors. In addition, attack techniques might be available to bypass the protection mechanism, such as using malformed inputs that can still be processed by the component that receives those inputs. Depending on functionality, an application firewall might inadvertently reject or modify legitimate requests. Finally, some manual effort may be required for customization."
            ]
          },
          {
            "subheading": "Phases: Operation; Implementation",
            "des": [
              "When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Automated static analysis might not be able to recognize when proper input validation is being performed, leading to false positives - i.e., warnings that do not have any security consequences or do not require any code changes.",
              "Automated static analysis might not be able to detect the usage of custom API functions or third-party libraries that indirectly invoke SQL commands, leading to false negatives - especially if the API/library code is not available for analysis.",
              "Note: This is not a perfect solution, since 100% accuracy and coverage are not feasible."
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results.",
              "Effectiveness: Moderate"
            ]
          },
          {
            "subheading": "Manual Analysis",
            "des": [
              "Manual analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. This becomes difficult for weaknesses that must be considered for all inputs, since the attack surface can be too large."
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-108",
            "capec_name": "Command Line Execution through SQL Injection",
            "capec_description": "An attacker uses standard SQL injection methods to inject data into the command line for execution. This could be done directly through misuse of directives such as MSSQL_xp_cmdshell or indirectly through injection of data into the database that would be interpreted as shell commands. Sometime later, an unscrupulous backend application (or could be part of the functionality of the same application) fetches the injected data stored in the database and uses this data as command line arguments without performing proper validation. The malicious data escapes that data plane by spawning new commands to be executed on the host.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Very High",
            "mitigations": [
              "Disable MSSQL xp_cmdshell directive on the database",
              "Properly validate the data (syntactically and semantically) before writing it to the database.",
              "Do not implicitly trust the data stored in the database. Re-validate it prior to usage to make sure that it is safe to use in a given context (e.g. as a command line argument)."
            ],
            "related_cwe": ["CWE-89", "CWE-74", "CWE-20", "CWE-78", "CWE-114"]
          },
          {
            "capec_id": "CAPEC-109",
            "capec_name": "Object Relational Mapping Injection",
            "capec_description": "An attacker leverages a weakness present in the database access layer code generated with an Object Relational Mapping (ORM) tool or a weakness in the way that a developer used a persistence framework to inject their own SQL commands to be executed against the underlying database. The attack here is similar to plain SQL injection, except that the application does not use JDBC to directly talk to the database, but instead it uses a data access layer generated by an ORM tool or framework (e.g. Hibernate). While most of the time code generated by an ORM tool contains safe access methods that are immune to SQL injection, sometimes either due to some weakness in the generated code or due to the fact that the developer failed to use the generated access methods properly, SQL injection is still possible.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "High",
            "mitigations": [
              "Remember to understand how to use the data access methods generated by the ORM tool / framework properly in a way that would leverage the built-in security mechanisms of the framework",
              "Ensure to keep up to date with security relevant updates to the persistence framework used within your application."
            ],
            "related_cwe": ["CWE-20", "CWE-89", "CWE-564"]
          },
          {
            "capec_id": "CAPEC-110",
            "capec_name": "SQL Injection through SOAP Parameter Tampering",
            "capec_description": "An attacker modifies the parameters of the SOAP message that is sent from the service consumer to the service provider to initiate a SQL injection attack. On the service provider side, the SOAP message is parsed and parameters are not properly validated before being used to access a database in a way that does not use parameter binding, thus enabling the attacker to control the structure of the executed SQL query. This pattern describes a SQL injection attack with the delivery mechanism being a SOAP message.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Properly validate and sanitize/reject user input at the service provider.",
              "Ensure that prepared statements or other mechanism that enables parameter binding is used when accessing the database in a way that would prevent the attackers' supplied data from controlling the structure of the executed query.",
              "At the database level, ensure that the database user used by the application in a particular context has the minimum needed privileges to the database that are needed to perform the operation. When possible, run queries against pre-generated views rather than the tables directly."
            ],
            "related_cwe": ["CWE-89", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-470",
            "capec_name": "Expanding Control over the Operating System from the Database",
            "capec_description": "An attacker is able to leverage access gained to the database to read / write data to the file system, compromise the operating system, create a tunnel for accessing the host machine, and use this access to potentially attack other machines on the same network as the database machine. Traditionally SQL injections attacks are viewed as a way to gain unauthorized read access to the data stored in the database, modify the data in the database, delete the data, etc. However, almost every data base management system (DBMS) system includes facilities that if compromised allow an attacker complete access to the file system, operating system, and full access to the host running the database. The attacker can then use this privileged access to launch subsequent attacks. These facilities include dropping into a command shell, creating user defined functions that can call system level libraries present on the host machine, stored procedures, etc.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Follow the defensive programming practices needed to protect an application accessing the database from SQL injection",
              "Configuration: Ensure that the DBMS is patched with the latest security patches",
              "Design: Ensure that the DBMS login used by the application has the lowest possible level of privileges in the DBMS",
              "Design: Ensure that DBMS runs with the lowest possible level of privileges on the host machine and that it runs as a separate user",
              "Usage: Do not use the DBMS machine for anything else other than the database",
              "Usage: Do not place any trust in the database host on the internal network. Authenticate and validate all network activity originating from the database host.",
              "Usage: Use an intrusion detection system to monitor network connections and logs on the database host.",
              "Implementation: Remove / disable all unneeded / unused functions of the DBMS system that may allow an attacker to elevate privileges if compromised"
            ],
            "related_cwe": ["CWE-250", "CWE-89"]
          },
          {
            "capec_id": "CAPEC-66",
            "capec_name": "SQL Injection",
            "capec_description": "This attack exploits target software that constructs SQL statements based on user input. An attacker crafts input strings so that when the target software constructs SQL statements based on the input, the resulting SQL statement performs actions other than those the application intended. SQL Injection results from failure of the application to appropriately validate input.",
            "capec_extended_description": "When specially crafted user-controlled input consisting of SQL syntax is used without proper validation as part of SQL queries, it is possible to glean information from the database in ways not envisaged during application design. Depending upon the database and the design of the application, it may also be possible to leverage injection to have the database execute system-related commands of the attackers' choice. SQL Injection enables an attacker to interact directly to the database, thus bypassing the application completely. Successful injection can cause information disclosure as well as ability to add or modify data in the database.",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear.",
              "Use of parameterized queries or stored procedures - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails. Note that SQL Injection is possible even in the presence of stored procedures if the eventual query is constructed dynamically.",
              "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."
            ],
            "related_cwe": ["CWE-89", "CWE-1286"]
          },
          {
            "capec_id": "CAPEC-7",
            "capec_name": "Blind SQL Injection",
            "capec_description": "Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the adversary constructs input strings that probe the target through simple Boolean SQL expressions. The adversary can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the adversary determines how and where the target is vulnerable to SQL Injection.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Security by Obscurity is not a solution to preventing SQL Injection. Rather than suppress error messages and exceptions, the application must handle them gracefully, returning either a custom error page or redirecting the user to a default page, without revealing any information about the database or the application internals.",
              "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear."
            ],
            "related_cwe": [
              "CWE-89",
              "CWE-209",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-46747",
    "cve_name": "",
    "cve_description": "Undisclosed requests may bypass configuration utility authentication, allowing an attacker with network access to the BIG-IP system through the management port and/or self IP addresses to execute arbitrary system commands.  Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated",
    "cve_category": [],
    "cve_published_at": "Published 2023-10-26 21:15:08",
    "cve_updated_at": "Updated 2023-11-16 02:15:27",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "f5sirt@f5.com"
    },
    "cpe": [
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Automation Toolchain Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_automation_toolchain:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Automation Toolchain Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_automation_toolchain:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Automation Toolchain Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_automation_toolchain:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Automation Toolchain Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_automation_toolchain:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Automation Toolchain Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_automation_toolchain:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Container Ingress Services Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_container_ingress_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Container Ingress Services Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_container_ingress_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Container Ingress Services Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_container_ingress_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Container Ingress Services Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_container_ingress_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Container Ingress Services Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_container_ingress_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Services Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Services Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Services Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Services Versions from including (>=) 17.1.0 and up to, including, (<=) 17.1.1",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_services:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Services Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_services:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-288",
        "cwe_name": "Authentication Bypass Using an Alternate Path or Channel",
        "cwe_description": "A product requires authentication, but the product has an alternate path or channel that does not require authentication.",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2000-1179",
            "name": "CVE-2000-1179",
            "des": "Router allows remote attackers to read system logs without authentication by directly connecting to the login screen and typing certain control characters."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-1999-1454",
            "name": "CVE-1999-1454",
            "des": "Attackers with physical access to the machine may bypass the password prompt by pressing the ESC (Escape) key."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-1999-1077",
            "name": "CVE-1999-1077",
            "des": "OS allows local attackers to bypass the password protection of idled sessions via the programmer's switch or CMD-PWR keyboard sequence, which brings up a debugger that the attacker can use to disable the lock."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0304",
            "name": "CVE-2003-0304",
            "des": "Direct request of installation file allows attacker to create administrator accounts."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0870",
            "name": "CVE-2002-0870",
            "des": "Attackers may gain additional privileges by directly requesting the web management URL."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0066",
            "name": "CVE-2002-0066",
            "des": "Bypass authentication via direct request to named pipe."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-1035",
            "name": "CVE-2003-1035",
            "des": "User can avoid lockouts by using an API instead of the GUI to conduct brute force password guessing."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Funnel all access through a single choke point to simplify how users can access a resource. For every access, perform a check to determine if the user has permissions to access the resource."
            ]
          }
        ],
        "detection_methods": [],
        "capec": [
          {
            "capec_id": "CAPEC-127",
            "capec_name": "Directory Indexing",
            "capec_description": "An adversary crafts a request to a target that results in the target listing/indexing the content of a directory as output. One common method of triggering directory contents as output is to construct a request containing a path that terminates in a directory name rather than a file name since many applications are configured to provide a list of the directory's contents when such a request is received. An adversary can use this to explore the directory tree on a target as well as learn the names of files. This can often end up revealing test files, backup files, temporary files, hidden files, configuration files, user accounts, script contents, as well as naming conventions, all of which can be used by an attacker to mount additional attacks.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Medium",
            "mitigations": [
              "1. Using blank index.html: putting blank index.html simply prevent directory listings from displaying to site visitors.",
              "2. Preventing with .htaccess in Apache web server: In .htaccess, write \"Options-indexes\".",
              "3. Suppressing error messages: using error 403 \"Forbidden\" message exactly like error 404 \"Not Found\" message."
            ],
            "related_cwe": [
              "CWE-424",
              "CWE-425",
              "CWE-288",
              "CWE-285",
              "CWE-732",
              "CWE-276",
              "CWE-693"
            ]
          },
          {
            "capec_id": "CAPEC-665",
            "capec_name": "Exploitation of Thunderbolt Protection Flaws",
            "capec_description": "An adversary leverages a firmware weakness within the Thunderbolt protocol, on a computing device to manipulate Thunderbolt controller firmware in order to exploit vulnerabilities in the implementation of authorization and verification schemes within Thunderbolt protection mechanisms. Upon gaining physical access to a target device, the adversary conducts high-level firmware manipulation of the victim Thunderbolt controller SPI (Serial Peripheral Interface) flash, through the use of a SPI Programing device and an external Thunderbolt device, typically as the target device is booting up. If successful, this allows the adversary to modify memory, subvert authentication mechanisms, spoof identities and content, and extract data and memory from the target device. Currently 7 major vulnerabilities exist within Thunderbolt protocol with 9 attack vectors as noted in the Execution Flow.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Very High",
            "mitigations": [
              "Implementation: Kernel Direct Memory Access Protection",
              "Configuration: Enable UEFI option USB Passthrough mode - Thunderbolt 3 system port operates as USB 3.1 Type C interface",
              "Configuration: Enable UEFI option DisplayPort mode - Thunderbolt 3 system port operates as video-only DP interface",
              "Configuration: Enable UEFI option Mixed USB/DisplayPort mode - Thunderbolt 3 system port operates as USB 3.1 Type C interface with support for DP mode",
              "Configuration: Set Security Level to SL3 for Thunderbolt 2 system port",
              "Configuration: Disable PCIe tunneling to set Security Level to SL3",
              "Configuration: Disable Boot Camp upon MacOS systems"
            ],
            "related_cwe": [
              "CWE-345",
              "CWE-353",
              "CWE-288",
              "CWE-1188",
              "CWE-862"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-5631",
    "cve_name": "",
    "cve_description": "Roundcube before 1.4.15, 1.5.x before 1.5.5, and 1.6.x before 1.6.4 allows stored XSS via an HTML e-mail message with a crafted SVG document because of program/lib/Roundcube/rcube_washtml.php behavior. This could allow a remote attacker\n\nto load arbitrary JavaScript code.",
    "cve_category": ["Cross site scripting (XSS)"],
    "cve_published_at": "Published 2023-10-18 15:15:09",
    "cve_updated_at": "Updated 2023-12-22 18:55:30",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.4",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N",
      "exploitability_score": "2.3",
      "impact_score": "2.7",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Debian » Debian Linux » Version: 10.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Debian » Debian Linux » Version: 11.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:11.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Debian » Debian Linux » Version: 12.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:12.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 39 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:39:*:*:*:*:*:*:*"
      },
      {
        "version": "Roundcube » Webmail Versions before (<) 1.4.15",
        "detail": "cpe:2.3:a:roundcube:webmail:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Roundcube » Webmail Versions from including (>=) 1.5.0 and before (<) 1.5.5",
        "detail": "cpe:2.3:a:roundcube:webmail:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Roundcube » Webmail Versions from including (>=) 1.6.0 and before (<) 1.6.4",
        "detail": "cpe:2.3:a:roundcube:webmail:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-79",
        "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "cwe_extended_description": "Cross-site scripting (XSS) vulnerabilities occur when:\n\nUntrusted data enters a web application, typically from a web request.\nThe web application dynamically generates a web page that contains this untrusted data.\nDuring page generation, the application does not prevent the data from containing content that is executable by a web browser, such as JavaScript, HTML tags, HTML attributes, mouse events, Flash, ActiveX, etc.\nA victim visits the generated web page through a web browser, which contains malicious script that was injected using the untrusted data.\nSince the script comes from a web page that was sent by the web server, the victim's web browser executes the malicious script in the context of the web server's domain.\nThis effectively violates the intention of the web browser's same-origin policy, which states that scripts in one domain should not be able to access resources or run code in a different domain.\n\nThere are three main kinds of XSS:\n\nType 1: Reflected XSS (or Non-Persistent) - The server reads data directly from the HTTP request and reflects it back in the HTTP response. Reflected XSS exploits occur when an attacker causes a victim to supply dangerous content to a vulnerable web application, which is then reflected back to the victim and executed by the web browser. The most common mechanism for delivering malicious content is to include it as a parameter in a URL that is posted publicly or e-mailed directly to the victim. URLs constructed in this manner constitute the core of many phishing schemes, whereby an attacker convinces a victim to visit a URL that refers to a vulnerable site. After the site reflects the attacker's content back to the victim, the content is executed by the victim's browser.\nType 2: Stored XSS (or Persistent) - The application stores dangerous data in a database, message forum, visitor log, or other trusted data store. At a later time, the dangerous data is subsequently read back into the application and included in dynamic content. From an attacker's perspective, the optimal place to inject malicious content is in an area that is displayed to either many users or particularly interesting users. Interesting users typically have elevated privileges in the application or interact with sensitive data that is valuable to the attacker. If one of these users executes malicious content, the attacker may be able to perform privileged operations on behalf of the user or gain access to sensitive data belonging to the user. For example, the attacker might inject XSS into a log message, which might not be handled properly when an administrator views the logs.\nType 0: DOM-Based XSS - In DOM-based XSS, the client performs the injection of XSS into the page; in the other types, the server performs the injection. DOM-based XSS generally involves server-controlled, trusted script that is sent to the client, such as Javascript that performs sanity checks on a form before the user submits it. If the server-supplied script processes user-supplied data and then injects it back into the web page (such as with dynamic HTML), then DOM-based XSS is possible.\n\nOnce the malicious script is injected, the attacker can perform a variety of malicious activities. The attacker could transfer private information, such as cookies that may include session information, from the victim's machine to the attacker. The attacker could send malicious requests to a web site on behalf of the victim, which could be especially dangerous to the site if the victim has administrator privileges to manage that site. Phishing attacks could be used to emulate trusted web sites and trick the victim into entering a password, allowing the attacker to compromise the victim's account on that web site. Finally, the script could exploit a vulnerability in the web browser itself possibly taking over the victim's machine, sometimes referred to as \"drive-by hacking.\"\n\nIn many cases, the attack can be launched without the victim even being aware of it. Even with careful users, attackers frequently use a variety of methods to encode the malicious portion of the attack, such as URL encoding or Unicode, so the request looks less suspicious.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-25926",
            "name": "CVE-2021-25926",
            "des": "Python Library Manager did not sufficiently neutralize a user-supplied search term, allowing reflected XSS."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-25963",
            "name": "CVE-2021-25963",
            "des": "Python-based e-commerce platform did not escape returned content on error pages, allowing for reflected Cross-Site Scripting attacks."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-1879",
            "name": "CVE-2021-1879",
            "des": "Universal XSS in mobile operating system, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-3580",
            "name": "CVE-2020-3580",
            "des": "Chain: improper input validation (CWE-20) in firewall product leads to XSS (CWE-79), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2014-8958",
            "name": "CVE-2014-8958",
            "des": "Admin GUI allows XSS through cookie."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2017-9764",
            "name": "CVE-2017-9764",
            "des": "Web stats program allows XSS through crafted HTTP header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2014-5198",
            "name": "CVE-2014-5198",
            "des": "Web log analysis product allows XSS through crafted HTTP Referer header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5080",
            "name": "CVE-2008-5080",
            "des": "Chain: protection mechanism failure allows XSS"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4308",
            "name": "CVE-2006-4308",
            "des": "Chain: incomplete denylist (CWE-184) only checks \"javascript:\" tag, allowing XSS (CWE-79) using other tags"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-5727",
            "name": "CVE-2007-5727",
            "des": "Chain: incomplete denylist (CWE-184) only removes SCRIPT tags, enabling XSS (CWE-79)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5770",
            "name": "CVE-2008-5770",
            "des": "Reflected XSS using the PATH_INFO in a URL"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4730",
            "name": "CVE-2008-4730",
            "des": "Reflected XSS not properly handled when generating an error message"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5734",
            "name": "CVE-2008-5734",
            "des": "Reflected XSS sent through email message."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-0971",
            "name": "CVE-2008-0971",
            "des": "Stored XSS in a security product."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5249",
            "name": "CVE-2008-5249",
            "des": "Stored XSS using a wiki page."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-3568",
            "name": "CVE-2006-3568",
            "des": "Stored XSS in a guestbook application."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-3211",
            "name": "CVE-2006-3211",
            "des": "Stored XSS in a guestbook application using a javascript: URI in a bbcode img tag."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-3295",
            "name": "CVE-2006-3295",
            "des": "Chain: library file is not protected against a direct request (CWE-425), leading to reflected XSS (CWE-79)."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Examples of libraries and frameworks that make it easier to generate properly encoded output include Microsoft's Anti-XSS library, the OWASP ESAPI Encoding module, and Apache Wicket."
            ]
          },
          {
            "subheading": "Phases: Implementation; Architecture and Design",
            "des": [
              "Understand the context in which your data will be used and the encoding that will be expected. This is especially important when transmitting data between different components, or when generating outputs that can contain multiple encodings at the same time, such as web pages or multi-part mail messages. Study all expected communication protocols and data representations to determine the required encoding strategies.",
              "For any data that will be output to another web page, especially any data that was received from external inputs, use the appropriate encoding on all non-alphanumeric characters.",
              "Parts of the same output document may require different encodings, which will vary depending on whether the output is in the:",
              "etc. Note that HTML Entity Encoding is only appropriate for the HTML body.",
              "Consult the XSS Prevention Cheat Sheet [REF-724] for more details on the types of encoding and escaping that are needed."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "Understand all the potential areas where untrusted inputs can enter your software: parameters or arguments, cookies, anything read from the network, environment variables, reverse DNS lookups, query results, request headers, URL components, e-mail, files, filenames, databases, and any external systems that provide data to the application. Remember that such inputs may be obtained indirectly through API calls.",
              "Note: This technique has limited effectiveness, but can be helpful when it is possible to store client state and sensitive information on the server side instead of in cookies, headers, hidden form fields, etc."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "If available, use structured mechanisms that automatically enforce the separation between data and code. These mechanisms may be able to provide the relevant quoting, encoding, and validation automatically, instead of relying on the developer to provide this capability at every point where output is generated."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.",
              "The problem of inconsistent output encodings often arises in web pages. If an encoding is not specified in an HTTP header, web browsers often guess about which encoding is being used. This can open up the browser to subtle XSS attacks."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "With Struts, write all data from form beans with the bean's filter attribute set to true."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "To help mitigate XSS attacks against the user's session cookie, set the session cookie to be HttpOnly. In browsers that support the HttpOnly feature (such as more recent versions of Internet Explorer and Firefox), this attribute can prevent the user's session cookie from being accessible to malicious client-side scripts that use document.cookie. This is not a complete solution, since HttpOnly is not supported by all browsers. More importantly, XMLHTTPRequest and other powerful browser technologies provide read access to HTTP headers, including the Set-Cookie header in which the HttpOnly flag is set."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "When dynamically constructing web pages, use stringent allowlists that limit the character set based on the expected value of the parameter in the request. All input should be validated and cleansed, not just parameters that the user is supposed to specify, but all data in the request, including hidden fields, cookies, headers, the URL itself, and so forth. A common mistake that leads to continuing XSS vulnerabilities is to validate only fields that are expected to be redisplayed by the site. It is common to see data from the request that is reflected by the application server or the application that the development team did not anticipate. Also, a field that is not currently reflected may be used by a future developer. Therefore, validating ALL parts of the HTTP request is recommended.",
              "Note that proper output encoding, escaping, and quoting is the most effective solution for preventing XSS, although input validation may provide some defense-in-depth. This is because it effectively limits what will appear in output. Input validation will not always prevent XSS, especially if you are required to support free-form text fields that could contain arbitrary characters. For example, in a chat application, the heart emoticon (\"<3\") would likely pass the validation step, since it is commonly used. However, it cannot be directly inserted into the web page because it contains the \"<\" character, which would need to be escaped or otherwise handled. In this case, stripping the \"<\" might reduce the risk of XSS, but it would produce incorrect behavior because the emoticon would not be recorded. This might seem to be a minor inconvenience, but it would be more important in a mathematical forum that wants to represent inequalities.",
              "Even if you make a mistake in your validation (such as forgetting one out of 100 input fields), appropriate encoding is still likely to protect you from injection-based attacks. As long as it is not done in isolation, input validation is still a useful technique, since it may significantly reduce your attack surface, allow you to detect some attacks, and provide other security benefits that proper encoding does not address.",
              "Ensure that you perform input validation at well-defined interfaces within the application. This will help protect the application even if a component is reused or moved elsewhere."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.",
              "Note: An application firewall might not cover all possible input vectors. In addition, attack techniques might be available to bypass the protection mechanism, such as using malformed inputs that can still be processed by the component that receives those inputs. Depending on functionality, an application firewall might inadvertently reject or modify legitimate requests. Finally, some manual effort may be required for customization."
            ]
          },
          {
            "subheading": "Phases: Operation; Implementation",
            "des": [
              "When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible, especially when multiple components are involved.",
              "Effectiveness: Moderate"
            ]
          },
          {
            "subheading": "Black Box",
            "des": [
              "Use the XSS Cheat Sheet [REF-714] or automated test-generation tools to help launch a wide variety of attacks against your web application. The Cheat Sheet contains many subtle XSS variations that are specifically targeted against weak XSS defenses.",
              "Effectiveness: Moderate",
              "Note: With Stored XSS, the indirection caused by the data store can make it more difficult to find the problem. The tester must first inject the XSS string into the data store, then find the appropriate application functionality in which the XSS string is sent to other users of the application. These are two distinct steps in which the activation of the XSS can take place minutes, hours, or days after the XSS was originally injected into the data store."
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-209",
            "capec_name": "XSS Using MIME Type Mismatch",
            "capec_description": "An adversary creates a file with scripting content but where the specified MIME type of the file is such that scripting is not expected. The adversary tricks the victim into accessing a URL that responds with the script file. Some browsers will detect that the specified MIME type of the file does not match the actual type of its content and will automatically switch to using an interpreter for the real content type. If the browser does not invoke script filters before doing this, the adversary's script may run on the target unsanitized, possibly revealing the victim's cookies or executing arbitrary script in their browser.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-79", "CWE-20", "CWE-646"]
          },
          {
            "capec_id": "CAPEC-588",
            "capec_name": "DOM-Based XSS",
            "capec_description": "This type of attack is a form of Cross-Site Scripting (XSS) where a malicious script is inserted into the client-side HTML being parsed by a web browser. Content served by a vulnerable web application includes script code used to manipulate the Document Object Model (DOM). This script code either does not properly validate input, or does not perform proper output encoding, thus creating an opportunity for an adversary to inject a malicious script launch a XSS attack. A key distinction between other XSS attacks and DOM-based attacks is that in other XSS attacks, the malicious script runs when the vulnerable web page is initially loaded, while a DOM-based attack executes sometime after the page loads. Another distinction of DOM-based attacks is that in some cases, the malicious script is never sent to the vulnerable web server at all. An attack like this is guaranteed to bypass any server-side filtering attempts to protect users.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Use browser technologies that do not allow client-side scripting.",
              "Utilize proper character encoding for all output produced within client-site scripts manipulating the DOM.",
              "Ensure that all user-supplied input is validated before use."
            ],
            "related_cwe": ["CWE-79", "CWE-20", "CWE-83"]
          },
          {
            "capec_id": "CAPEC-591",
            "capec_name": "Reflected XSS",
            "capec_description": "This type of attack is a form of Cross-Site Scripting (XSS) where a malicious script is \"reflected\" off a vulnerable web application and then executed by a victim's browser. The process starts with an adversary delivering a malicious script to a victim and convincing the victim to send the script to the vulnerable web application.",
            "capec_extended_description": "The most common method of this is through a phishing email where the adversary embeds the malicious script with a URL that the victim then clicks on. In processing the subsequent request, the vulnerable web application incorrectly considers the malicious script as valid input and uses it to creates a reposnse that is then sent back to the victim. To launch a successful Reflected XSS attack, an adversary looks for places where user-input is used directly in the generation of a response. This often involves elements that are not expected to host scripts such as image tags (<img>), or the addition of event attibutes such as onload and onmouseover. These elements are often not subject to the same input validation, output encoding, and other content filtering and checking routines.",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Use browser technologies that do not allow client-side scripting.",
              "Utilize strict type, character, and encoding enforcement.",
              "Ensure that all user-supplied input is validated before use."
            ],
            "related_cwe": ["CWE-79"]
          },
          {
            "capec_id": "CAPEC-592",
            "capec_name": "Stored XSS",
            "capec_description": "An adversary utilizes a form of Cross-site Scripting (XSS) where a malicious script is persistently \"stored\" within the data storage of a vulnerable web application as valid input.",
            "capec_extended_description": "Initially presented by an adversary to the vulnerable web application, the malicious script is incorrectly considered valid input and is not properly encoded by the web application. A victim is then convinced to use the web application in a way that creates a response that includes the malicious script. This response is subsequently sent to the victim and the malicious script is executed by the victim's browser. To launch a successful Stored XSS attack, an adversary looks for places where stored input data is used in the generation of a response. This often involves elements that are not expected to host scripts such as image tags (<img>), or the addition of event attributes such as onload and onmouseover. These elements are often not subject to the same input validation, output encoding, and other content filtering and checking routines.",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Use browser technologies that do not allow client-side scripting.",
              "Utilize strict type, character, and encoding enforcement.",
              "Ensure that all user-supplied input is validated before being stored."
            ],
            "related_cwe": ["CWE-79"]
          },
          {
            "capec_id": "CAPEC-63",
            "capec_name": "Cross-Site Scripting (XSS)",
            "capec_description": "An adversary embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level. An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Use browser technologies that do not allow client side scripting.",
              "Design: Utilize strict type, character, and encoding enforcement",
              "Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.",
              "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.",
              "Implementation: Perform input validation for all remote content.",
              "Implementation: Perform output validation for all remote content.",
              "Implementation: Session tokens for specific host",
              "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."
            ],
            "related_cwe": ["CWE-79", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-85",
            "capec_name": "AJAX Footprinting",
            "capec_description": "This attack utilizes the frequent client-server roundtrips in Ajax conversation to scan a system. While Ajax does not open up new vulnerabilities per se, it does optimize them from an attacker point of view. A common first step for an attacker is to footprint the target environment to understand what attacks will work. Since footprinting relies on enumeration, the conversational pattern of rapid, multiple requests and responses that are typical in Ajax applications enable an attacker to look for many vulnerabilities, well-known ports, network locations and so on. The knowledge gained through Ajax fingerprinting can be used to support other attacks, such as XSS.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Low",
            "mitigations": [
              "Design: Use browser technologies that do not allow client side scripting.",
              "Implementation: Perform input validation for all remote content."
            ],
            "related_cwe": [
              "CWE-79",
              "CWE-113",
              "CWE-348",
              "CWE-96",
              "CWE-20",
              "CWE-116",
              "CWE-184",
              "CWE-86",
              "CWE-692"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-20273",
    "cve_name": "",
    "cve_description": "A vulnerability in the web UI feature of Cisco IOS XE Software could allow an authenticated, remote attacker to inject commands with the privileges of root. This vulnerability is due to insufficient input validation. An attacker could exploit this vulnerability by sending crafted input to the web UI. A successful exploit could allow the attacker to inject commands to the underlying operating system with root privileges.",
    "cve_category": [],
    "cve_published_at": "Published 2023-10-25 18:17:23",
    "cve_updated_at": "Updated 2023-11-15 19:13:13",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.2",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.2",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Cisco » Ios Xe Versions from including (>=) 17.6 and before (<) 17.6.6a",
        "detail": "cpe:2.3:o:cisco:ios_xe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe Versions from including (>=) 16.12 and before (<) 16.12.10a",
        "detail": "cpe:2.3:o:cisco:ios_xe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe Versions from including (>=) 17.9 and before (<) 17.9.4a",
        "detail": "cpe:2.3:o:cisco:ios_xe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe Versions from including (>=) 17.3 and before (<) 17.3.8a",
        "detail": "cpe:2.3:o:cisco:ios_xe:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2021-1435",
    "cve_name": "",
    "cve_description": "A vulnerability in the web UI of Cisco IOS XE Software could allow an authenticated, remote attacker to inject arbitrary commands that can be executed as the root user. This vulnerability is due to insufficient input validation. An attacker could exploit this vulnerability by sending a crafted request to the web UI of an affected device with arbitrary commands injected into a portion of the request. A successful exploit could allow the attacker to execute arbitrary commands as the root user.",
    "cve_category": ["Directory traversal"],
    "cve_published_at": "Published 2021-03-24 20:15:15",
    "cve_updated_at": "Updated 2021-03-29 20:03:09",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.0",
      "base_severity": "HIGH",
      "cvss_vector": "AV:N/AC:L/Au:S/C:C/I:C/A:C",
      "exploitability_score": "8.0",
      "impact_score": "10.0",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Cisco » Ios Xe » Version: 16.9.3a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.3a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.11.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.11.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.1c ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.1c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.2a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.2a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.1d ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.1d:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.3h ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.3h:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.4 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.4c ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.4c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.5 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.5f ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.5f:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.6 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1c ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1d ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1d:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1f ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1f:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1g ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1g:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.11.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.11.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.11.1c ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.11.1c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.11.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.11.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.11.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.11.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.2.1v ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.2.1v:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.11.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.11.1a:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-22",
        "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "cwe_extended_description": "Many file operations are intended to take place within a restricted directory. By using special elements such as \"..\" and \"/\" separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the \"../\" sequence, which in most modern operating systems is interpreted as the parent directory of the current location. This is referred to as relative path traversal. Path traversal also covers the use of absolute pathnames such as \"/usr/local/bin\", which may also be useful in accessing unexpected files. This is referred to as absolute path traversal.\n\nIn many programming languages, the injection of a null byte (the 0 or NUL) may allow an attacker to truncate a generated filename to widen the scope of attack. For example, the product may add \".txt\" to any pathname, thus limiting the attacker to text files, but a null injection may effectively remove this restriction.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-45918",
            "name": "CVE-2022-45918",
            "des": "Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using \"../\" sequences (CWE-24)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-20916",
            "name": "CVE-2019-20916",
            "des": "Python package manager does not correctly restrict the filename specified in a Content-Disposition header, allowing arbitrary file read using path traversal sequences such as \"../\""
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-31503",
            "name": "CVE-2022-31503",
            "des": "Python package constructs filenames using an unsafe os.path.join call on untrusted input, allowing absolute path traversal because os.path.join resets the pathname to an absolute path that is specified as part of the input."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-24877",
            "name": "CVE-2022-24877",
            "des": "directory traversal in Go-based Kubernetes operator app allows accessing data from the controller's pod file system via ../ sequences in a yaml file"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21972",
            "name": "CVE-2021-21972",
            "des": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-4053",
            "name": "CVE-2020-4053",
            "des": "a Kubernetes package manager written in Go allows malicious plugins to inject path traversal sequences into a plugin archive (\"Zip slip\") to copy a file outside the intended directory"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-3452",
            "name": "CVE-2020-3452",
            "des": "Chain: security product has improper input validation (CWE-20) leading to directory traversal (CWE-22), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-10743",
            "name": "CVE-2019-10743",
            "des": "Go-based archive library allows extraction of files to locations outside of the target folder with \"../\" path traversal sequences in filenames in a zip file, aka \"Zip Slip\""
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0467",
            "name": "CVE-2010-0467",
            "des": "Newsletter module allows reading arbitrary files using \"../\" sequences."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-7079",
            "name": "CVE-2006-7079",
            "des": "Chain: PHP app uses extract for register_globals compatibility layer (CWE-621), enabling path traversal (CWE-22)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-4194",
            "name": "CVE-2009-4194",
            "des": "FTP server allows deletion of arbitrary files using \"..\" in the DELE command."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-4053",
            "name": "CVE-2009-4053",
            "des": "FTP server allows creation of arbitrary directories using \"..\" in the MKD command."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0244",
            "name": "CVE-2009-0244",
            "des": "FTP service for a Bluetooth device allows listing of directories, and creation or reading of files using \"..\" sequences."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-4013",
            "name": "CVE-2009-4013",
            "des": "Software package maintenance program allows overwriting arbitrary files using \"../\" sequences."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-4449",
            "name": "CVE-2009-4449",
            "des": "Bulletin board allows attackers to determine the existence of files using the avatar."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-4581",
            "name": "CVE-2009-4581",
            "des": "PHP program allows arbitrary code execution using \"..\" in filenames that are fed to the include() function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0012",
            "name": "CVE-2010-0012",
            "des": "Overwrite of files using a .. in a Torrent file."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0013",
            "name": "CVE-2010-0013",
            "des": "Chat program allows overwriting files using a custom smiley request."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5748",
            "name": "CVE-2008-5748",
            "des": "Chain: external control of values for user's desired language and theme enables path traversal."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1936",
            "name": "CVE-2009-1936",
            "des": "Chain: library file sends a redirect if it is directly requested but continues to execute, allowing remote file inclusion and path traversal."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "When validating filenames, use stringent allowlists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a list of allowable file extensions, which will help to avoid CWE-434.",
              "Do not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a denylist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass allowlist validation schemes by introducing dangerous inputs after they have been checked.",
              "Use a built-in path canonicalization function (such as realpath() in C) that produces the canonical version of the pathname, which effectively removes \"..\" sequences and symbolic links (CWE-23, CWE-59). This includes:"
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.",
              "Note: An application firewall might not cover all possible input vectors. In addition, attack techniques might be available to bypass the protection mechanism, such as using malformed inputs that can still be processed by the component that receives those inputs. Depending on functionality, an application firewall might inadvertently reject or modify legitimate requests. Finally, some manual effort may be required for customization."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.",
              "For example, ID 1 could map to \"inbox.txt\" and ID 2 could map to \"profile.txt\". Features such as the ESAPI AccessReferenceMap [REF-185] provide this capability."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Run the code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software.",
              "OS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations.",
              "This may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise.",
              "Be careful to avoid CWE-243 and other weaknesses related to jails.",
              "Note: The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting the portion of the file system that can be accessed."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Store library, include, and utility files outside of the web document root, if possible. Otherwise, store them in a separate directory and use the web server's access control capabilities to prevent attackers from directly requesting them. One common practice is to define a fixed constant in each calling program, then check for the existence of the constant in the library/include file; if the constant does not exist, then the file was directly requested, and it can exit immediately.",
              "This significantly reduces the chance of an attacker being able to bypass any protection mechanisms that are in the base program but not in the include files. It will also reduce the attack surface."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success.",
              "If errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files.",
              "Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.",
              "In the context of path traversal, error messages which disclose path information can help attackers craft the appropriate attack strings to move through the file system hierarchy."
            ]
          },
          {
            "subheading": "Phases: Operation; Implementation",
            "des": [
              "When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated techniques can find areas where path traversal weaknesses exist. However, tuning or customization may be required to remove or de-prioritize path-traversal problems that are only exploitable by the product's administrator - or other privileged users - and thus potentially valid behavior or, at worst, a bug instead of a vulnerability.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Manual Static Analysis",
            "des": [
              "Manual white box techniques may be able to provide sufficient code coverage and reduction of false positives if all file access operations can be assessed within limited time constraints.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-126",
            "capec_name": "Path Traversal",
            "capec_description": "An adversary uses path manipulation methods to exploit insufficient input validation of a target to obtain access to data that should be not be retrievable by ordinary well-formed requests. A typical variety of this attack involves specifying a path to a desired file together with dot-dot-slash characters, resulting in the file access API or function traversing out of the intended directory structure and into the root file system. By replacing or modifying the expected path information the access function or API retrieves the file desired by the attacker. These attacks either involve the attacker providing a complete path to a targeted file or using control characters (e.g. path separators (/ or \\) and/or dots (.)) to reach desired directories or files.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Configure the access control correctly.",
              "Design: Enforce principle of least privilege.",
              "Design: Execute programs with constrained privileges, so parent process does not open up further vulnerabilities. Ensure that all directories, temporary directories and files, and memory are executing with limited privileges to protect against remote execution.",
              "Design: Input validation. Assume that user inputs are malicious. Utilize strict type, character, and encoding enforcement.",
              "Design: Proxy communication to host, so that communications are terminated at the proxy, sanitizing the requests before forwarding to server host.",
              "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
              "Implementation: Host integrity monitoring for critical files, directories, and processes. The goal of host integrity monitoring is to be aware when a security issue has occurred so that incident response and other forensic activities can begin.",
              "Implementation: Perform input validation for all remote content, including remote and user-generated content.",
              "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables.",
              "Implementation: Use indirect references rather than actual file names.",
              "Implementation: Use possible permissions on file access when developing and deploying web applications.",
              "Implementation: Validate user input by only accepting known good. Ensure all content that is delivered to client is sanitized against an acceptable content specification -- using an allowlist approach."
            ],
            "related_cwe": ["CWE-22"]
          },
          {
            "capec_id": "CAPEC-64",
            "capec_name": "Using Slashes and URL Encoding Combined to Bypass Validation Logic",
            "capec_description": "This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system. Test your decoding process against malicious input.",
              "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding.",
              "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.",
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
              "Refer to the RFCs to safely decode URL.",
              "Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive.",
              "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)."
            ],
            "related_cwe": [
              "CWE-177",
              "CWE-173",
              "CWE-172",
              "CWE-73",
              "CWE-22",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-76",
            "capec_name": "Manipulating Web Input to File System Calls",
            "capec_description": "An attacker manipulates inputs to the target software which the target software passes to file system calls in the OS. The goal is to gain access to, and perhaps modify, areas of the file system that the target software did not intend to be accessible.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege.",
              "Design: Ensure all input is validated, and does not contain file system commands",
              "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
              "Design: For interactive user applications, consider if direct file system interface is necessary, instead consider having the application proxy communication.",
              "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables."
            ],
            "related_cwe": [
              "CWE-23",
              "CWE-22",
              "CWE-73",
              "CWE-77",
              "CWE-346",
              "CWE-348",
              "CWE-285",
              "CWE-272",
              "CWE-59",
              "CWE-74",
              "CWE-15"
            ]
          },
          {
            "capec_id": "CAPEC-78",
            "capec_name": "Using Escaped Slashes in Alternate Encoding",
            "capec_description": "This attack targets the use of the backslash in alternate encoding. An adversary can provide a backslash as a leading character and causes a parser to believe that the next character is special. This is called an escape. By using that trick, the adversary tries to exploit alternate ways to encode the same character which leads to filter problems and opens avenues to attack.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Verify that the user-supplied data does not use backslash character to escape malicious characters.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system.",
              "Be aware of the threat of alternative method of data encoding.",
              "Regular expressions can be used to filter out backslash. Make sure you decode before filtering and validating the untrusted input data.",
              "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.",
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.",
              "Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names."
            ],
            "related_cwe": [
              "CWE-180",
              "CWE-181",
              "CWE-173",
              "CWE-172",
              "CWE-73",
              "CWE-22",
              "CWE-74",
              "CWE-20",
              "CWE-697",
              "CWE-707"
            ]
          },
          {
            "capec_id": "CAPEC-79",
            "capec_name": "Using Slashes in Alternate Encoding",
            "capec_description": "This attack targets the encoding of the Slash characters. An adversary would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the adversary many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL.",
              "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.",
              "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)",
              "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)",
              "Test your path decoding process against malicious input.",
              "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the application based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-173",
              "CWE-180",
              "CWE-181",
              "CWE-20",
              "CWE-74",
              "CWE-73",
              "CWE-22",
              "CWE-185",
              "CWE-200",
              "CWE-697",
              "CWE-707"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-4966",
    "cve_name": "",
    "cve_description": "Sensitive information disclosure in NetScaler ADC and NetScaler Gateway when configured as a Gateway (VPN virtual server, ICA Proxy, CVPN, RDP Proxy) or AAA ?virtual?server. ",
    "cve_category": ["Overflow"],
    "cve_published_at": "Published 2023-10-10 14:15:11",
    "cve_updated_at": "Updated 2024-01-09 02:27:10",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.5",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
      "exploitability_score": "3.9",
      "impact_score": "3.6",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Citrix » Netscaler Application Delivery Controller » Fips Edition Versions from including (>=) 13.1 and before (<) 13.1-37.164",
        "detail": "cpe:2.3:a:citrix:netscaler_application_delivery_controller:*:*:*:*:fips:*:*:*"
      },
      {
        "version": "Citrix » Netscaler Application Delivery Controller » Fips Edition Versions from including (>=) 12.1 and before (<) 12.1-55.300",
        "detail": "cpe:2.3:a:citrix:netscaler_application_delivery_controller:*:*:*:*:fips:*:*:*"
      },
      {
        "version": "Citrix » Netscaler Application Delivery Controller » Versions from including (>=) 13.1 and before (<) 13.1-49.15",
        "detail": "cpe:2.3:a:citrix:netscaler_application_delivery_controller:*:*:*:*:-:*:*:*"
      },
      {
        "version": "Citrix » Netscaler Application Delivery Controller » Ndcpp Edition Versions from including (>=) 12.1 and before (<) 12.1-55.300",
        "detail": "cpe:2.3:a:citrix:netscaler_application_delivery_controller:*:*:*:*:ndcpp:*:*:*"
      },
      {
        "version": "Citrix » Netscaler Application Delivery Controller » Versions from including (>=) 14.1 and before (<) 14.1-8.50",
        "detail": "cpe:2.3:a:citrix:netscaler_application_delivery_controller:*:*:*:*:-:*:*:*"
      },
      {
        "version": "Citrix » Netscaler Application Delivery Controller » Versions from including (>=) 13.0 and before (<) 13.0-92.19",
        "detail": "cpe:2.3:a:citrix:netscaler_application_delivery_controller:*:*:*:*:-:*:*:*"
      },
      {
        "version": "Citrix » Netscaler Gateway Versions from including (>=) 13.1 and before (<) 13.1-49.15",
        "detail": "cpe:2.3:a:citrix:netscaler_gateway:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Citrix » Netscaler Gateway Versions from including (>=) 14.1 and before (<) 14.1-8.50",
        "detail": "cpe:2.3:a:citrix:netscaler_gateway:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Citrix » Netscaler Gateway Versions from including (>=) 13.0 and before (<) 13.0-92.19",
        "detail": "cpe:2.3:a:citrix:netscaler_gateway:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-119",
        "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "cwe_description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.",
        "cwe_extended_description": "Certain languages allow direct addressing of memory locations and do not automatically ensure that these locations are valid for the memory buffer that is being referenced. This can cause read or write operations to be performed on memory locations that may be associated with other variables, data structures, or internal program data.\n\nAs a result, an attacker may be able to execute arbitrary code, alter the intended control flow, read sensitive information, or cause the system to crash.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-22991",
            "name": "CVE-2021-22991",
            "des": "Incorrect URI normalization in application traffic product leads to buffer overflow, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-29557",
            "name": "CVE-2020-29557",
            "des": "Buffer overflow in Wi-Fi router web interface, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2550",
            "name": "CVE-2009-2550",
            "des": "Classic stack-based buffer overflow in media player using a long entry in a playlist"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2403",
            "name": "CVE-2009-2403",
            "des": "Heap-based buffer overflow in media player using a long entry in a playlist"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0689",
            "name": "CVE-2009-0689",
            "des": "large precision value in a format string triggers overflow"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0690",
            "name": "CVE-2009-0690",
            "des": "negative offset value leads to out-of-bounds read"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1532",
            "name": "CVE-2009-1532",
            "des": "malformed inputs cause accesses of uninitialized or previously-deleted objects, leading to memory corruption"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1528",
            "name": "CVE-2009-1528",
            "des": "chain: lack of synchronization leads to memory corruption"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-29529",
            "name": "CVE-2021-29529",
            "des": "Chain: machine-learning product can have a heap-based buffer overflow (CWE-122) when some integer-oriented bounds are calculated by using ceiling() and floor() on floating point values (CWE-1339)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0558",
            "name": "CVE-2009-0558",
            "des": "attacker-controlled array index leads to code execution"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0269",
            "name": "CVE-2009-0269",
            "des": "chain: -1 value from a function call was intended to indicate an error, but is used as an array index instead."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0566",
            "name": "CVE-2009-0566",
            "des": "chain: incorrect calculations lead to incorrect pointer dereference and memory corruption"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1350",
            "name": "CVE-2009-1350",
            "des": "product accepts crafted messages that lead to a dereference of an arbitrary pointer"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0191",
            "name": "CVE-2009-0191",
            "des": "chain: malformed input causes dereference of uninitialized memory"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4113",
            "name": "CVE-2008-4113",
            "des": "OS kernel trusts userland-supplied length value, allowing reading of sensitive information"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1513",
            "name": "CVE-2005-1513",
            "des": "Chain: integer overflow in securely-coded mail program leads to buffer overflow. In 2005, this was regarded as unrealistic to exploit, but in 2020, it was rediscovered to be easier to exploit due to evolutions of the technology."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0542",
            "name": "CVE-2003-0542",
            "des": "buffer overflow involving a regular expression with a large number of captures"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2017-1000121",
            "name": "CVE-2017-1000121",
            "des": "chain: unchecked message size metadata allows integer overflow (CWE-190) leading to buffer overflow (CWE-119)."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, many languages that perform their own memory management, such as Java and Perl, are not subject to buffer overflows. Other languages, such as Ada and C#, typically provide overflow protection, but the protection can be disabled by the programmer.",
              "Be wary that a language's interface to native code may still be subject to overflows, even if the language itself is theoretically safe."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Examples include the Safe C String Library (SafeStr) by Messier and Viega [REF-57], and the Strsafe.h library from Microsoft [REF-56]. These libraries provide safer versions of overflow-prone string-handling functions.",
              "Note: This is not a complete solution, since many buffer overflows are not related to strings."
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking.",
              "D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Consider adhering to the following rules when allocating and managing an application's memory:"
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code.",
              "Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as \"rebasing\" (for Windows) and \"prelinking\" (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking.",
              "For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].",
              "Note: These techniques do not provide a complete solution. For instance, exploits frequently use a bug that discloses memory addresses in order to maximize reliability of code execution [REF-1337]. It has also been shown that a side-channel attack can bypass ASLR [REF-1333]"
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment.",
              "For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].",
              "Note: This is not a complete solution, since buffer overflows could be used to overwrite nearby variables to modify the software's state in dangerous ways. In addition, it cannot be used in cases in which self-modifying code is required. Finally, an attack could still cause a denial of service, since the typical response is to exit the application."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Replace unbounded copy functions with analogous functions that support length arguments, such as strcpy with strncpy. Create these if they are not available.",
              "Note: This approach is still susceptible to calculation errors, including issues such as off-by-one errors (CWE-193) and incorrectly calculating buffer lengths (CWE-131)."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Automated static analysis generally does not account for environmental considerations when reporting out-of-bounds memory operations. This can make it difficult for users to determine which warnings should be investigated first. For example, an analysis tool might report buffer overflows that originate from command line arguments in a program that is not expected to run with setuid or other special privileges.",
              "Effectiveness: High",
              "Note: Detection techniques for buffer-related errors are more mature than for most other weakness types."
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results."
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-10",
            "capec_name": "Buffer Overflow via Environment Variables",
            "capec_description": "This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the adversary finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.",
            "capec_extended_description": "Although the focus of this attack is putting excessive content into an environment variable that is loaded into a buffer, environment variables can be used to assist a classic buffer overflow attack as well. In the case where the buffer used in a traditional buffer overflow attack is not large enough to store the adversary's shell code, they will store the shell code in an environment variable and attempt to return to its address, rather than back into the data they wrote to the buffer.",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Do not expose environment variable to the user.",
              "Do not use untrusted data in your environment variables.",
              "Use a language or compiler that performs automatic bounds checking",
              "There are tools such as Sharefuzz [REF-2] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-302",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-99",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-100",
            "capec_name": "Overflow Buffers",
            "capec_description": "Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an adversary. As a consequence, an adversary is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the adversaries' choice.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Use a language or compiler that performs automatic bounds checking.",
              "Use secure functions not vulnerable to buffer overflow.",
              "If you have to use dangerous functions, make sure that you do boundary checking.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Use OS-level preventative functionality. Not a complete solution.",
              "Utilize static source code analysis tools to identify potential buffer overflow weaknesses in the software."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-119",
              "CWE-131",
              "CWE-129",
              "CWE-805",
              "CWE-680"
            ]
          },
          {
            "capec_id": "CAPEC-123",
            "capec_name": "Buffer Manipulation",
            "capec_description": "An adversary manipulates an application's interaction with a buffer in an attempt to read or modify data they shouldn't have access to. Buffer attacks are distinguished in that it is the buffer space itself that is the target of the attack rather than any code responsible for interpreting the content of the buffer. In virtually all buffer attacks the content that is placed in the buffer is immaterial. Instead, most buffer attacks involve retrieving or providing more input than can be stored in the allocated buffer, resulting in the reading or overwriting of other unintended program memory.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "To help protect an application from buffer manipulation attacks, a number of potential mitigations can be leveraged. Before starting the development of the application, consider using a code language (e.g., Java) or compiler that limits the ability of developers to act beyond the bounds of a buffer. If the chosen language is susceptible to buffer related issues (e.g., C) then consider using secure functions instead of those vulnerable to buffer manipulations. If a potentially dangerous function must be used, make sure that proper boundary checking is performed. Additionally, there are often a number of compiler-based mechanisms (e.g., StackGuard, ProPolice and the Microsoft Visual Studio /GS flag) that can help identify and protect against potential buffer issues. Finally, there may be operating system level preventative functionality that can be applied."
            ],
            "related_cwe": ["CWE-119"]
          },
          {
            "capec_id": "CAPEC-14",
            "capec_name": "Client-side Injection-induced Buffer Overflow",
            "capec_description": "This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service. This hostile service is created to deliver the correct content to the client software. For example, if the client-side application is a browser, the service will host a webpage that the browser loads.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "The client software should not install untrusted code from a non-authenticated server.",
              "The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers.",
              "Perform input validation for length of buffer inputs.",
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Ensure all buffer uses are consistently bounds-checked.",
              "Use OS-level preventative functionality. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-353",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-24",
            "capec_name": "Filter Failure through Buffer Overflow",
            "capec_description": "In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs.",
              "Pre-design: Use a language or compiler that performs automatic bounds checking.",
              "Pre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Operational: Use OS-level preventative functionality. Not a complete solution.",
              "Design: Use an abstraction library to abstract away risky APIs. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-119",
              "CWE-118",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-42",
            "capec_name": "MIME Conversion",
            "capec_description": "An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Stay up to date with third party vendor patches",
              "Disable the 7 to 8 bit conversion. This can be done by removing the F=9 flag from all Mailer specifications in the sendmail.cf file.\n\nFor example, a sendmail.cf file with these changes applied should look similar to (depending on your system and configuration):\n\nMlocal, P=/usr/libexec/mail.local, F=lsDFMAw5:/|@qrmn, S=10/30, R=20/40,\nT=DNS/RFC822/X-Unix,\nA=mail -d $u\n\nMprog, P=/bin/sh, F=lsDFMoqeu, S=10/30, R=20/40,\nD=$z:/,\nT=X-Unix,\nA=sh -c $u\n\nThis can be achieved for the \"Mlocal\" and \"Mprog\" Mailers by modifying the \".mc\" file to include the following lines:\n\ndefine(`LOCAL_MAILER_FLAGS',\nifdef(`LOCAL_MAILER_FLAGS',\n`translit(LOCAL_MAILER_FLAGS, `9')',\n`rmn'))\n\ndefine(`LOCAL_SHELL_FLAGS',\nifdef(`LOCAL_SHELL_FLAGS',\n`translit(LOCAL_SHELL_FLAGS, `9')',\n`eu'))\n\nand then rebuilding the sendmail.cf file using m4(1).\n\nFrom \"Exploiting Software\", please see reference below.",
              "Use the sendmail restricted shell program (smrsh)",
              "Use mail.local"
            ],
            "related_cwe": ["CWE-120", "CWE-119", "CWE-74", "CWE-20"]
          },
          {
            "capec_id": "CAPEC-44",
            "capec_name": "Overflow Binary Resource File",
            "capec_description": "An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the adversary access to the execution stack and execute arbitrary code in the target process.",
            "capec_extended_description": "This attack pattern is a variant of standard buffer overflow attack using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The adversary is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application for the victim to download. The adversary then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow.",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Perform appropriate bounds checking on all buffers.",
              "Design: Enforce principle of least privilege",
              "Design: Static code analysis",
              "Implementation: Execute program in less trusted process space environment, do not allow lower integrity processes to write to higher integrity processes",
              "Implementation: Keep software patched to ensure that known vulnerabilities are not available for adversaries to target on host."
            ],
            "related_cwe": ["CWE-120", "CWE-119", "CWE-697"]
          },
          {
            "capec_id": "CAPEC-45",
            "capec_name": "Buffer Overflow via Symbolic Links",
            "capec_description": "This type of attack leverages the use of symbolic links to cause buffer overflows. An adversary can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource.",
              "Because Symlink can be modified by an adversary, make sure that the ones you read are located in protected directories.",
              "Pay attention to the resource pointed to by your symlink links (See attack pattern named \"Forced Symlink race\"), they can be replaced by malicious resources.",
              "Always check the size of the input data before copying to a buffer.",
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Use OS-level preventative functionality. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-285",
              "CWE-302",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-46",
            "capec_name": "Overflow Variables and Tags",
            "capec_description": "This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The adversary crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Use OS-level preventative functionality. Not a complete solution.",
              "Do not trust input data from user. Validate all user input."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-47",
            "capec_name": "Buffer Overflow via Parameter Expansion",
            "capec_description": "In this attack, the target software is given input that the adversary knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system"
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-119",
              "CWE-118",
              "CWE-130",
              "CWE-131",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-8",
            "capec_name": "Buffer Overflow in an API Call",
            "capec_description": "This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An adversary who has knowledge of known vulnerable libraries or shared code can easily target software that makes use of these libraries. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use a language or compiler that performs automatic bounds checking.",
              "Use secure functions not vulnerable to buffer overflow.",
              "If you have to use dangerous functions, make sure that you do boundary checking.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Use OS-level preventative functionality. Not a complete solution."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-119",
              "CWE-118",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          },
          {
            "capec_id": "CAPEC-9",
            "capec_name": "Buffer Overflow in Local Command-Line Utilities",
            "capec_description": "This attack targets command-line utilities available in a number of shells. An adversary can leverage a vulnerability found in a command-line utility to escalate privilege to root.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow.",
              "Use a language or compiler that performs automatic bounds checking.",
              "Use an abstraction library to abstract away risky APIs. Not a complete solution.",
              "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.",
              "Operational: Use OS-level preventative functionality. Not a complete solution.",
              "Apply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack.",
              "Do not unnecessarily expose services."
            ],
            "related_cwe": [
              "CWE-120",
              "CWE-118",
              "CWE-119",
              "CWE-74",
              "CWE-20",
              "CWE-680",
              "CWE-733",
              "CWE-697"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-20198",
    "cve_name": "",
    "cve_description": "Cisco is providing an update for the ongoing investigation into observed exploitation of the web UI feature in Cisco IOS XE Software. We are updating the list of fixed releases and adding the Software Checker. Our investigation has determined that the actors exploited two previously unknown issues. The attacker first exploited CVE-2023-20198 to gain initial access and issued a privilege 15 command to create a local user and password combination. This allowed the user to log in with normal user access. The attacker then exploited another component of the web UI feature, leveraging the new local user to elevate privilege to root and write the implant to the file system. Cisco has assigned CVE-2023-20273 to this issue. CVE-2023-20198 has been assigned a CVSS Score of 10.0. CVE-2023-20273 has been assigned a CVSS Score of 7.2. Both of these CVEs are being tracked by CSCwh87343.",
    "cve_category": [],
    "cve_published_at": "Published 2023-10-16 16:15:10",
    "cve_updated_at": "Updated 2023-11-15 19:29:03",
    "cve_required_action": "",
    "cvss": {
      "base_score": "10.0",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "6.0",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Cisco » Ios Xe Versions from including (>=) 17.6 and before (<) 17.6.6a",
        "detail": "cpe:2.3:o:cisco:ios_xe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe Versions from including (>=) 16.12 and before (<) 16.12.10a",
        "detail": "cpe:2.3:o:cisco:ios_xe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe Versions from including (>=) 17.9 and before (<) 17.9.4a",
        "detail": "cpe:2.3:o:cisco:ios_xe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe Versions from including (>=) 17.3 and before (<) 17.3.8a",
        "detail": "cpe:2.3:o:cisco:ios_xe:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-44487",
    "cve_name": "",
    "cve_description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
    "cve_category": ["Denial of service"],
    "cve_published_at": "Published 2023-10-10 14:15:11",
    "cve_updated_at": "Updated 2023-12-20 17:55:37",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.5",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "exploitability_score": "3.9",
      "impact_score": "3.6",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Debian » Debian Linux » Version: 10.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Debian » Debian Linux » Version: 11.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:11.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Debian » Debian Linux » Version: 12.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:12.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Enterprise Linux » Version: 6.0 ",
        "detail": "cpe:2.3:o:redhat:enterprise_linux:6.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Enterprise Linux » Version: 8.0 ",
        "detail": "cpe:2.3:o:redhat:enterprise_linux:8.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Enterprise Linux » Version: 9.0 ",
        "detail": "cpe:2.3:o:redhat:enterprise_linux:9.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Jboss Enterprise Application Platform » Version: 6.0.0 ",
        "detail": "cpe:2.3:a:redhat:jboss_enterprise_application_platform:6.0.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Jboss Enterprise Application Platform » Version: 7.0.0 ",
        "detail": "cpe:2.3:a:redhat:jboss_enterprise_application_platform:7.0.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift » Version: N/A For AWS ",
        "detail": "cpe:2.3:a:redhat:openshift:-:*:*:*:*:aws:*:*"
      },
      {
        "version": "Redhat » Jboss Fuse » Version: 6.0.0 ",
        "detail": "cpe:2.3:a:redhat:jboss_fuse:6.0.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Jboss Fuse » Version: 7.0.0 ",
        "detail": "cpe:2.3:a:redhat:jboss_fuse:7.0.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Jboss A-mq » Version: 7 ",
        "detail": "cpe:2.3:a:redhat:jboss_a-mq:7:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Satellite » Version: 6.0 ",
        "detail": "cpe:2.3:a:redhat:satellite:6.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Ceph Storage » Version: 5.0 ",
        "detail": "cpe:2.3:a:redhat:ceph_storage:5.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » 3scale Api Management Platform » Version: 2.0 ",
        "detail": "cpe:2.3:a:redhat:3scale_api_management_platform:2.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openstack Platform » Version: 16.1 ",
        "detail": "cpe:2.3:a:redhat:openstack_platform:16.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openstack Platform » Version: 16.2 ",
        "detail": "cpe:2.3:a:redhat:openstack_platform:16.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openstack Platform » Version: 17.1 ",
        "detail": "cpe:2.3:a:redhat:openstack_platform:17.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Jboss Data Grid » Version: 7.0.0 ",
        "detail": "cpe:2.3:a:redhat:jboss_data_grid:7.0.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Container Platform » Version: 4.0 ",
        "detail": "cpe:2.3:a:redhat:openshift_container_platform:4.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Decision Manager » Version: 7.0 ",
        "detail": "cpe:2.3:a:redhat:decision_manager:7.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Jboss Core Services » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:jboss_core_services:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Single Sign-on » Version: 7.0 ",
        "detail": "cpe:2.3:a:redhat:single_sign-on:7.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Quay » Version: 3.0.0 ",
        "detail": "cpe:2.3:a:redhat:quay:3.0.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Process Automation » Version: 7.0 ",
        "detail": "cpe:2.3:a:redhat:process_automation:7.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Service Mesh » Version: 2.0 ",
        "detail": "cpe:2.3:a:redhat:openshift_service_mesh:2.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Build Of Quarkus » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:build_of_quarkus:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Integration Camel K » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:integration_camel_k:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Ansible Automation Platform » Version: 2.0 ",
        "detail": "cpe:2.3:a:redhat:ansible_automation_platform:2.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Virtualization » Version: 4 ",
        "detail": "cpe:2.3:a:redhat:openshift_virtualization:4:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Advanced Cluster Management For Kubernetes » Version: 2.0 ",
        "detail": "cpe:2.3:a:redhat:advanced_cluster_management_for_kubernetes:2.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Integration Service Registry » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:integration_service_registry:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Gitops » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:openshift_gitops:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Serverless » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:openshift_serverless:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Advanced Cluster Security » Version: 3.0 ",
        "detail": "cpe:2.3:a:redhat:advanced_cluster_security:3.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Advanced Cluster Security » Version: 4.0 ",
        "detail": "cpe:2.3:a:redhat:advanced_cluster_security:4.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Integration Camel For Spring Boot » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:integration_camel_for_spring_boot:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Migration Toolkit For Applications » Version: 6.0 ",
        "detail": "cpe:2.3:a:redhat:migration_toolkit_for_applications:6.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Developer Tools And Services » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:openshift_developer_tools_and_services:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Api For Data Protection » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:openshift_api_for_data_protection:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Data Science » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:openshift_data_science:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Build Of Optaplanner » Version: 8.0 ",
        "detail": "cpe:2.3:a:redhat:build_of_optaplanner:8.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Cert-manager Operator For Red Hat Openshift » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:cert-manager_operator_for_red_hat_openshift:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Certification For Red Hat Enterprise Linux » Version: 8.0 ",
        "detail": "cpe:2.3:a:redhat:certification_for_red_hat_enterprise_linux:8.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Certification For Red Hat Enterprise Linux » Version: 9.0 ",
        "detail": "cpe:2.3:a:redhat:certification_for_red_hat_enterprise_linux:9.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Cost Management » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:cost_management:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Cryostat » Version: 2.0 ",
        "detail": "cpe:2.3:a:redhat:cryostat:2.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Fence Agents Remediation Operator » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:fence_agents_remediation_operator:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Jboss A-mq Streams » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:jboss_a-mq_streams:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Logging Subsystem For Red Hat Openshift » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:logging_subsystem_for_red_hat_openshift:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Machine Deletion Remediation Operator » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:machine_deletion_remediation_operator:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Migration Toolkit For Containers » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:migration_toolkit_for_containers:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Migration Toolkit For Virtualization » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:migration_toolkit_for_virtualization:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Network Observability Operator » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:network_observability_operator:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Node Healthcheck Operator » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:node_healthcheck_operator:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Node Maintenance Operator » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:node_maintenance_operator:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Container Platform Assisted Installer » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:openshift_container_platform_assisted_installer:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Dev Spaces » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:openshift_dev_spaces:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Distributed Tracing » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:openshift_distributed_tracing:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Pipelines » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:openshift_pipelines:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Sandboxed Containers » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:openshift_sandboxed_containers:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Openshift Secondary Scheduler Operator » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:openshift_secondary_scheduler_operator:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Run Once Duration Override Operator » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:run_once_duration_override_operator:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Self Node Remediation Operator » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:self_node_remediation_operator:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Service Interconnect » Version: 1.0 ",
        "detail": "cpe:2.3:a:redhat:service_interconnect:1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Support For Spring Boot » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:support_for_spring_boot:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Web Terminal » Version: N/A ",
        "detail": "cpe:2.3:a:redhat:web_terminal:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Service Telemetry Framework » Version: 1.5 ",
        "detail": "cpe:2.3:a:redhat:service_telemetry_framework:1.5:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2016 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2016:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Asp.net Core Versions from including (>=) 7.0.0 and before (<) 7.0.12",
        "detail": "cpe:2.3:a:microsoft:asp.net_core:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Asp.net Core Versions from including (>=) 6.0.0 and before (<) 6.0.23",
        "detail": "cpe:2.3:a:microsoft:asp.net_core:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2019 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2019:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Azure Kubernetes Service Versions before (<) 2023-10-08",
        "detail": "cpe:2.3:a:microsoft:azure_kubernetes_service:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » .net Versions from including (>=) 6.0.0 and before (<) 6.0.23",
        "detail": "cpe:2.3:a:microsoft:.net:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » .net Versions from including (>=) 7.0.0 and before (<) 7.0.12",
        "detail": "cpe:2.3:a:microsoft:.net:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2022 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2022:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Visual Studio 2022 Versions from including (>=) 17.0 and before (<) 17.2.20",
        "detail": "cpe:2.3:a:microsoft:visual_studio_2022:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Visual Studio 2022 Versions from including (>=) 17.7 and before (<) 17.7.5",
        "detail": "cpe:2.3:a:microsoft:visual_studio_2022:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Visual Studio 2022 Versions from including (>=) 17.4 and before (<) 17.4.12",
        "detail": "cpe:2.3:a:microsoft:visual_studio_2022:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Visual Studio 2022 Versions from including (>=) 17.6 and before (<) 17.6.8",
        "detail": "cpe:2.3:a:microsoft:visual_studio_2022:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 11 21h2 Versions before (<) 10.0.22000.2538",
        "detail": "cpe:2.3:o:microsoft:windows_11_21h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 11 22h2 Versions before (<) 10.0.22621.2428",
        "detail": "cpe:2.3:o:microsoft:windows_11_22h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 1607 » For X64 Versions before (<) 10.0.14393.6351",
        "detail": "cpe:2.3:o:microsoft:windows_10_1607:*:*:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows 10 1607 » For X86 Versions before (<) 10.0.14393.6351",
        "detail": "cpe:2.3:o:microsoft:windows_10_1607:*:*:*:*:*:*:x86:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 Versions before (<) 10.0.17763.4974",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 Versions before (<) 10.0.19044.3570",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 Versions before (<) 10.0.19045.3570",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Cbl-mariner Versions before (<) 2023-10-11",
        "detail": "cpe:2.3:a:microsoft:cbl-mariner:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat Versions from including (>=) 10.1.0 and up to, including, (<=) 10.1.13",
        "detail": "cpe:2.3:a:apache:tomcat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat Versions from including (>=) 8.5.0 and up to, including, (<=) 8.5.93",
        "detail": "cpe:2.3:a:apache:tomcat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat Versions from including (>=) 9.0.0 and up to, including, (<=) 9.0.80",
        "detail": "cpe:2.3:a:apache:tomcat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat » Version: 11.0.0 Update Milestone1 ",
        "detail": "cpe:2.3:a:apache:tomcat:11.0.0:milestone1:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat » Version: 11.0.0 Update Milestone2 ",
        "detail": "cpe:2.3:a:apache:tomcat:11.0.0:milestone2:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat » Version: 11.0.0 Update Milestone4 ",
        "detail": "cpe:2.3:a:apache:tomcat:11.0.0:milestone4:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat » Version: 11.0.0 Update Milestone3 ",
        "detail": "cpe:2.3:a:apache:tomcat:11.0.0:milestone3:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat » Version: 11.0.0 Update Milestone5 ",
        "detail": "cpe:2.3:a:apache:tomcat:11.0.0:milestone5:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat » Version: 11.0.0 Update Milestone6 ",
        "detail": "cpe:2.3:a:apache:tomcat:11.0.0:milestone6:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat » Version: 11.0.0 Update Milestone10 ",
        "detail": "cpe:2.3:a:apache:tomcat:11.0.0:milestone10:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat » Version: 11.0.0 Update Milestone7 ",
        "detail": "cpe:2.3:a:apache:tomcat:11.0.0:milestone7:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat » Version: 11.0.0 Update Milestone8 ",
        "detail": "cpe:2.3:a:apache:tomcat:11.0.0:milestone8:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat » Version: 11.0.0 Update Milestone9 ",
        "detail": "cpe:2.3:a:apache:tomcat:11.0.0:milestone9:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Tomcat » Version: 11.0.0 Update Milestone11 ",
        "detail": "cpe:2.3:a:apache:tomcat:11.0.0:milestone11:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Solr Versions before (<) 9.4.0",
        "detail": "cpe:2.3:a:apache:solr:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Traffic Server Versions from including (>=) 9.0.0 and before (<) 9.2.3",
        "detail": "cpe:2.3:a:apache:traffic_server:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Traffic Server Versions from including (>=) 8.0.0 and before (<) 8.1.9",
        "detail": "cpe:2.3:a:apache:traffic_server:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apache » Apisix Versions before (<) 3.6.1",
        "detail": "cpe:2.3:a:apache:apisix:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Swiftnio Http/2 » For Swift Versions before (<) 1.28.0",
        "detail": "cpe:2.3:a:apple:swiftnio_http\\/2:*:*:*:*:*:swift:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Local Traffic Manager » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_local_traffic_manager:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Global Traffic Manager » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_global_traffic_manager:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Security Manager » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_application_security_manager:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Access Policy Manager » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_access_policy_manager:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Webaccelerator » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_webaccelerator:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Link Controller » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_link_controller:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Analytics » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_analytics:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Acceleration Manager » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_application_acceleration_manager:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Firewall Manager » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_firewall_manager:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Policy Enforcement Manager » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_policy_enforcement_manager:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Domain Name System » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_domain_name_system:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Websafe » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_websafe:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Service Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_service:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Service Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_service:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Service Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_service:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Service Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_service:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Fraud Protection Service » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_fraud_protection_service:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Application Visibility And Reporting » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_application_visibility_and_reporting:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Advanced Web Application Firewall » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_advanced_web_application_firewall:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ddos Hybrid Defender » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_ddos_hybrid_defender:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Ssl Orchestrator » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_ssl_orchestrator:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 14.1.0 and up to, including, (<=) 14.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 16.1.0 and up to, including, (<=) 16.1.4",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 13.1.0 and up to, including, (<=) 13.1.5",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat Versions from including (>=) 15.1.0 and up to, including, (<=) 15.1.10",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Carrier-grade Nat » Version: 17.1.0 ",
        "detail": "cpe:2.3:a:f5:big-ip_carrier-grade_nat:17.1.0:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Nginx Versions from including (>=) 1.9.5 and up to, including, (<=) 1.25.2",
        "detail": "cpe:2.3:a:f5:nginx:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Nginx Ingress Controller Versions from including (>=) 2.0.0 and up to, including, (<=) 2.4.2",
        "detail": "cpe:2.3:a:f5:nginx_ingress_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Nginx Ingress Controller Versions from including (>=) 3.0.0 and up to, including, (<=) 3.3.0",
        "detail": "cpe:2.3:a:f5:nginx_ingress_controller:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Nginx Plus Versions from including (>=) r25 and before (<) r29",
        "detail": "cpe:2.3:a:f5:nginx_plus:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Nginx Plus » Version: R29 ",
        "detail": "cpe:2.3:a:f5:nginx_plus:r29:-:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Nginx Plus » Version: R30 ",
        "detail": "cpe:2.3:a:f5:nginx_plus:r30:-:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Next Service Proxy For Kubernetes Versions from including (>=) 1.5.0 and up to, including, (<=) 1.8.2",
        "detail": "cpe:2.3:a:f5:big-ip_next_service_proxy_for_kubernetes:*:*:*:*:*:*:*:*"
      },
      {
        "version": "F5 » Big-ip Next » Version: 20.0.1 ",
        "detail": "cpe:2.3:a:f5:big-ip_next:20.0.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Ietf » Http » Version: 2.0 ",
        "detail": "cpe:2.3:a:ietf:http:2.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 37 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:37:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 38 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:38:*:*:*:*:*:*:*"
      },
      {
        "version": "Facebook » Proxygen Versions before (<) 2023.10.16.00",
        "detail": "cpe:2.3:a:facebook:proxygen:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Netapp » Astra Control Center » Version: N/A ",
        "detail": "cpe:2.3:a:netapp:astra_control_center:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Eclipse » Jetty Versions from including (>=) 11.0.0 and before (<) 11.0.17",
        "detail": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Eclipse » Jetty Versions before (<) 9.4.53",
        "detail": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Eclipse » Jetty Versions from including (>=) 10.0.0 and before (<) 10.0.17",
        "detail": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Eclipse » Jetty Versions from including (>=) 12.0.0 and before (<) 12.0.2",
        "detail": "cpe:2.3:a:eclipse:jetty:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Nodejs » Node.js Versions from including (>=) 20.0.0 and before (<) 20.8.1",
        "detail": "cpe:2.3:a:nodejs:node.js:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Nodejs » Node.js » LTS Edition Versions from including (>=) 18.0.0 and before (<) 18.18.2",
        "detail": "cpe:2.3:a:nodejs:node.js:*:*:*:*:lts:*:*:*"
      },
      {
        "version": "Amazon » Opensearch Data Prepper Versions before (<) 2.5.0",
        "detail": "cpe:2.3:a:amazon:opensearch_data_prepper:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Linecorp » Armeria Versions before (<) 1.26.0",
        "detail": "cpe:2.3:a:linecorp:armeria:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Golang » GO Versions before (<) 1.20.10",
        "detail": "cpe:2.3:a:golang:go:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Golang » GO Versions from including (>=) 1.21.0 and before (<) 1.21.3",
        "detail": "cpe:2.3:a:golang:go:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Golang » Http2 » For GO Versions before (<) 0.17.0",
        "detail": "cpe:2.3:a:golang:http2:*:*:*:*:*:go:*:*"
      },
      {
        "version": "Golang » Networking » For GO Versions before (<) 0.17.0",
        "detail": "cpe:2.3:a:golang:networking:*:*:*:*:*:go:*:*"
      },
      {
        "version": "Dena » H2O Versions before (<) 2023-10-10",
        "detail": "cpe:2.3:a:dena:h2o:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Nghttp2 » Nghttp2 Versions before (<) 1.57.0",
        "detail": "cpe:2.3:a:nghttp2:nghttp2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Jenkins » Jenkins » Versions up to, including, (<=) 2.427",
        "detail": "cpe:2.3:a:jenkins:jenkins:*:*:*:*:-:*:*:*"
      },
      {
        "version": "Jenkins » Jenkins » LTS Edition Versions up to, including, (<=) 2.414.2",
        "detail": "cpe:2.3:a:jenkins:jenkins:*:*:*:*:lts:*:*:*"
      },
      {
        "version": "Grpc » Grpc » For GO Versions before (<) 1.56.3",
        "detail": "cpe:2.3:a:grpc:grpc:*:*:*:*:*:go:*:*"
      },
      {
        "version": "Grpc » Grpc » For GO Versions from including (>=) 1.58.0 and before (<) 1.58.3",
        "detail": "cpe:2.3:a:grpc:grpc:*:*:*:*:*:go:*:*"
      },
      {
        "version": "Grpc » Grpc » Versions up to, including, (<=) 1.59.2",
        "detail": "cpe:2.3:a:grpc:grpc:*:*:*:*:*:-:*:*"
      },
      {
        "version": "Grpc » Grpc » Version: 1.57.0 For GO ",
        "detail": "cpe:2.3:a:grpc:grpc:1.57.0:-:*:*:*:go:*:*"
      },
      {
        "version": "Akka » Http Server Versions before (<) 10.5.3",
        "detail": "cpe:2.3:a:akka:http_server:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Envoyproxy » Envoy » Version: 1.24.10 ",
        "detail": "cpe:2.3:a:envoyproxy:envoy:1.24.10:*:*:*:*:*:*:*"
      },
      {
        "version": "Envoyproxy » Envoy » Version: 1.25.9 ",
        "detail": "cpe:2.3:a:envoyproxy:envoy:1.25.9:*:*:*:*:*:*:*"
      },
      {
        "version": "Envoyproxy » Envoy » Version: 1.26.4 ",
        "detail": "cpe:2.3:a:envoyproxy:envoy:1.26.4:*:*:*:*:*:*:*"
      },
      {
        "version": "Envoyproxy » Envoy » Version: 1.27.0 ",
        "detail": "cpe:2.3:a:envoyproxy:envoy:1.27.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Istio » Istio Versions before (<) 1.17.6",
        "detail": "cpe:2.3:a:istio:istio:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Istio » Istio Versions from including (>=) 1.19.0 and before (<) 1.19.1",
        "detail": "cpe:2.3:a:istio:istio:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Istio » Istio Versions from including (>=) 1.18.0 and before (<) 1.18.3",
        "detail": "cpe:2.3:a:istio:istio:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Netty » Netty Versions before (<) 4.1.100",
        "detail": "cpe:2.3:a:netty:netty:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Caddyserver » Caddy Versions before (<) 2.7.5",
        "detail": "cpe:2.3:a:caddyserver:caddy:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Openresty » Openresty Versions before (<) 1.21.4.3",
        "detail": "cpe:2.3:a:openresty:openresty:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Konghq » Kong Gateway » Enterprise Edition Versions before (<) 3.4.2",
        "detail": "cpe:2.3:a:konghq:kong_gateway:*:*:*:*:enterprise:*:*:*"
      },
      {
        "version": "Projectcontour » Contour » For Kubernetes Versions before (<) 2023-10-11",
        "detail": "cpe:2.3:a:projectcontour:contour:*:*:*:*:*:kubernetes:*:*"
      },
      {
        "version": "Traefik » Traefik Versions before (<) 2.10.5",
        "detail": "cpe:2.3:a:traefik:traefik:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Traefik » Traefik » Version: 3.0.0 Update Beta1 ",
        "detail": "cpe:2.3:a:traefik:traefik:3.0.0:beta1:*:*:*:*:*:*"
      },
      {
        "version": "Traefik » Traefik » Version: 3.0.0 Update Beta2 ",
        "detail": "cpe:2.3:a:traefik:traefik:3.0.0:beta2:*:*:*:*:*:*"
      },
      {
        "version": "Traefik » Traefik » Version: 3.0.0 Update Beta3 ",
        "detail": "cpe:2.3:a:traefik:traefik:3.0.0:beta3:*:*:*:*:*:*"
      },
      {
        "version": "Varnish Cache Project » Varnish Cache Versions before (<) 2023-10-10",
        "detail": "cpe:2.3:a:varnish_cache_project:varnish_cache:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Kazu-yamamoto » Http2 Versions before (<) 4.2.2",
        "detail": "cpe:2.3:a:kazu-yamamoto:http2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Linkerd » Linkerd » Stable Edition For Kubernetes Versions from including (>=) 2.12.0 and up to, including, (<=) 2.12.5",
        "detail": "cpe:2.3:a:linkerd:linkerd:*:*:*:*:stable:kubernetes:*:*"
      },
      {
        "version": "Linkerd » Linkerd » Version: 2.13.0 Stable Edition For Kubernetes ",
        "detail": "cpe:2.3:a:linkerd:linkerd:2.13.0:*:*:*:stable:kubernetes:*:*"
      },
      {
        "version": "Linkerd » Linkerd » Version: 2.13.1 Stable Edition For Kubernetes ",
        "detail": "cpe:2.3:a:linkerd:linkerd:2.13.1:*:*:*:stable:kubernetes:*:*"
      },
      {
        "version": "Linkerd » Linkerd » Version: 2.14.0 Stable Edition For Kubernetes ",
        "detail": "cpe:2.3:a:linkerd:linkerd:2.14.0:*:*:*:stable:kubernetes:*:*"
      },
      {
        "version": "Linkerd » Linkerd » Version: 2.14.1 Stable Edition For Kubernetes ",
        "detail": "cpe:2.3:a:linkerd:linkerd:2.14.1:*:*:*:stable:kubernetes:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-400",
        "cwe_name": "Uncontrolled Resource Consumption",
        "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
        "cwe_extended_description": "Limited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the product, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system.\n\nThere are at least three distinct scenarios which can commonly lead to resource exhaustion:\n\nLack of throttling for the number of allocated resources\nLosing all references to a resource before reaching the shutdown stage\nNot closing/returning a resource after processing\n\nResource exhaustion problems are often result due to an incorrect implementation of the following situations:\n\nError conditions and other exceptional circumstances.\nConfusion over which part of the program is responsible for releasing the resource.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-21668",
            "name": "CVE-2022-21668",
            "des": "Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-7218",
            "name": "CVE-2020-7218",
            "des": "Go-based workload orchestrator does not limit resource usage with unauthenticated connections, allowing a DoS by flooding the service"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-3566",
            "name": "CVE-2020-3566",
            "des": "Resource exhaustion in distributed OS because of \"insufficient\" IGMP queue management, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2874",
            "name": "CVE-2009-2874",
            "des": "Product allows attackers to cause a crash via a large number of connections."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1928",
            "name": "CVE-2009-1928",
            "des": "Malformed request triggers uncontrolled recursion, leading to stack exhaustion."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2858",
            "name": "CVE-2009-2858",
            "des": "Chain: memory leak (CWE-404) leads to resource exhaustion."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2726",
            "name": "CVE-2009-2726",
            "des": "Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2540",
            "name": "CVE-2009-2540",
            "des": "Large integer value for a length property in an object causes a large amount of memory allocation."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2299",
            "name": "CVE-2009-2299",
            "des": "Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2054",
            "name": "CVE-2009-2054",
            "des": "Product allows exhaustion of file descriptors when processing a large number of TCP packets."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5180",
            "name": "CVE-2008-5180",
            "des": "Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2121",
            "name": "CVE-2008-2121",
            "des": "TCP implementation allows attackers to consume CPU and prevent new connections using a TCP SYN flood attack."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2122",
            "name": "CVE-2008-2122",
            "des": "Port scan triggers CPU consumption with processes that attempt to read data from closed sockets."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-1700",
            "name": "CVE-2008-1700",
            "des": "Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4103",
            "name": "CVE-2007-4103",
            "des": "Product allows resource exhaustion via a large number of calls that do not complete a 3-way handshake."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-1173",
            "name": "CVE-2006-1173",
            "des": "Mail server does not properly handle deeply nested multipart MIME messages, leading to stack exhaustion."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-0897",
            "name": "CVE-2007-0897",
            "des": "Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Mitigation of resource exhaustion attacks requires that the target system either:",
              "The first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question.",
              "The second solution is simply difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply makes the attack require more resources on the part of the attacker."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Ensure that protocols have specific limits of scale placed on them."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Ensure that all failures in resource allocation place the system into a safe posture."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis typically has limited utility in recognizing resource exhaustion problems, except for program-independent system resources such as files, sockets, and processes. For system resources, automated static analysis may be able to detect circumstances in which resources are not released after they have expired. Automated analysis of configuration files may be able to detect settings that do not specify a maximum value.",
              "Automated static analysis tools will not be appropriate for detecting exhaustion of custom resources, such as an intended security policy in which a bulletin board user is only allowed to make a limited number of posts per day.",
              "Effectiveness: Limited"
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "Certain automated dynamic analysis techniques may be effective in spotting resource exhaustion problems, especially with resources such as processes, memory, and connections. The technique may involve generating a large number of requests to the product within a short time frame.",
              "Effectiveness: Moderate"
            ]
          },
          {
            "subheading": "Fuzzing",
            "des": [
              "While fuzzing is typically geared toward finding low-level implementation bugs, it can inadvertently find resource exhaustion problems. This can occur when the fuzzer generates a large number of test cases but does not restart the targeted product in between test cases. If an individual test case produces a crash, but it does not do so reliably, then an inability to handle resource exhaustion may be the cause.",
              "Effectiveness: Opportunistic"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-147",
            "capec_name": "XML Ping of the Death",
            "capec_description": "An attacker initiates a resource depletion attack where a large number of small XML messages are delivered at a sufficiently rapid rate to cause a denial of service or crash of the target. Transactions such as repetitive SOAP transactions can deplete resources faster than a simple flooding attack because of the additional resources used by the SOAP protocol and the resources necessary to process SOAP messages. The transactions used are immaterial as long as they cause resource utilization on the target. In other words, this is a normal flooding attack augmented by using messages that will require extra processing on the target.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Medium",
            "mitigations": [
              "Design: Build throttling mechanism into the resource allocation. Provide for a timeout mechanism for allocated resources whose transaction does not complete within a specified interval.",
              "Implementation: Provide for network flow control and traffic shaping to control access to the resources."
            ],
            "related_cwe": ["CWE-400", "CWE-770"]
          },
          {
            "capec_id": "CAPEC-227",
            "capec_name": "Sustained Client Engagement",
            "capec_description": "An adversary attempts to deny legitimate users access to a resource by continually engaging a specific resource in an attempt to keep the resource tied up as long as possible. The adversary's primary goal is not to crash or flood the target, which would alert defenders; rather it is to repeatedly perform actions or abuse algorithmic flaws such that a given resource is tied up and not available to a legitimate user. By carefully crafting a requests that keep the resource engaged through what is seemingly benign requests, legitimate users are limited or completely denied access to the resource.",
            "capec_extended_description": "The degree to which the attack is successful depends upon the adversary's ability to sustain resource requests over time with a volume that exceeds the normal usage by legitimate users, as well as other mitigating circumstances such as the target's ability to shift load or acquire additional resources to deal with the depletion. This attack differs from a flooding attack as it is not entirely dependent upon large volumes of requests, and it differs from resource leak exposures which tend to exploit the surrounding environment needed for the resource to function. The key factor in a sustainment attack are the repeated requests that take longer to process than usual.",
            "likelihood_of_attack": "",
            "typical_severity": "",
            "mitigations": [
              "Potential mitigations include requiring a unique login for each resource request, constraining local unprivileged access by disallowing simultaneous engagements of the resource, or limiting access to the resource to one access per IP address. In such scenarios, the adversary would have to increase engagements either by launching multiple sessions manually or programmatically to counter such defenses."
            ],
            "related_cwe": ["CWE-400"]
          },
          {
            "capec_id": "CAPEC-492",
            "capec_name": "Regular Expression Exponential Blowup",
            "capec_description": "An adversary may execute an attack on a program that uses a poor Regular Expression(Regex) implementation by choosing input that results in an extreme situation for the Regex. A typical extreme situation operates at exponential time compared to the input size. This is due to most implementations using a Nondeterministic Finite Automaton(NFA) state machine to be built by the Regex algorithm since NFA allows backtracking and thus more complex regular expressions.",
            "capec_extended_description": "The algorithm builds a finite state machine and based on the input transitions through all the states until the end of the input is reached. NFA engines may evaluate each character in the input string multiple times during the backtracking. The algorithm tries each path through the NFA one by one until a match is found; the malicious input is crafted so every path is tried which results in a failure. Exploitation of the Regex results in programs hanging or taking a very long time to complete. These attacks may target various layers of the Internet due to regular expressions being used in validation.",
            "likelihood_of_attack": "",
            "typical_severity": "",
            "mitigations": [
              "Test custom written Regex with fuzzing to determine if the Regex is a poor one. Add timeouts to processes that handle the Regex logic. If an evil Regex is found rewrite it as a good Regex."
            ],
            "related_cwe": ["CWE-400", "CWE-1333"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-41763",
    "cve_name": "",
    "cve_description": "Skype for Business Elevation of Privilege Vulnerability",
    "cve_category": ["Gain privilege"],
    "cve_published_at": "Published 2023-10-10 18:15:18",
    "cve_updated_at": "Updated 2023-10-12 22:18:57",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.3",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "exploitability_score": "3.9",
      "impact_score": "1.4",
      "source": "secure@microsoft.com"
    },
    "cpe": [
      {
        "version": "Microsoft » Skype For Business Server » Version: 2015 Update Cumulative Update 13 ",
        "detail": "cpe:2.3:a:microsoft:skype_for_business_server:2015:cumulative_update_13:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Skype For Business Server » Version: 2019 Update Cumulative Update 7 ",
        "detail": "cpe:2.3:a:microsoft:skype_for_business_server:2019:cumulative_update_7:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-36563",
    "cve_name": "",
    "cve_description": "Microsoft WordPad Information Disclosure Vulnerability",
    "cve_category": ["Information leak"],
    "cve_published_at": "Published 2023-10-10 18:15:13",
    "cve_updated_at": "Updated 2023-10-13 18:59:39",
    "cve_required_action": "",
    "cvss": {
      "base_score": "6.5",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
      "exploitability_score": "2.8",
      "impact_score": "3.6",
      "source": "secure@microsoft.com"
    },
    "cpe": [
      {
        "version": "Microsoft » Windows Server 2008 » Version: N/A Update SP2 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2008:-:sp2:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2008 » Version: R2 Update SP1 For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2008:r2:sp1:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows Server 2012 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2012:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2012 » Version: R2 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2012:r2:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2016 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2016:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2019 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2019:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2022 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2022:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 11 21h2 Versions before (<) 10.0.22000.2538",
        "detail": "cpe:2.3:o:microsoft:windows_11_21h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 11 22h2 Versions before (<) 10.0.22621.2428",
        "detail": "cpe:2.3:o:microsoft:windows_11_22h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 1607 Versions before (<) 10.0.14393.6351",
        "detail": "cpe:2.3:o:microsoft:windows_10_1607:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 Versions before (<) 10.0.17763.4974",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 Versions before (<) 10.0.19041.3570",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 Versions before (<) 10.0.19045.3570",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 1507 Versions before (<) 10.0.10240.20232",
        "detail": "cpe:2.3:o:microsoft:windows_10_1507:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-21608",
    "cve_name": "",
    "cve_description": "Adobe Acrobat Reader versions 22.003.20282 (and earlier), 22.003.20281 (and earlier) and 20.005.30418 (and earlier) are affected by a Use After Free vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.",
    "cve_category": ["Memory Corruption"],
    "cve_published_at": "Published 2023-01-18 19:15:12",
    "cve_updated_at": "Updated 2023-01-26 18:17:01",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.8",
      "impact_score": "5.9",
      "source": "psirt@adobe.com"
    },
    "cpe": [
      {
        "version": "Adobe » Acrobat Reader » Classic Edition Versions from including (>=) 20.001.30005 and up to, including, (<=) 20.005.30418",
        "detail": "cpe:2.3:a:adobe:acrobat_reader:*:*:*:*:classic:*:*:*"
      },
      {
        "version": "Adobe » Acrobat » Classic Edition Versions from including (>=) 20.001.30005 and up to, including, (<=) 20.005.30418",
        "detail": "cpe:2.3:a:adobe:acrobat:*:*:*:*:classic:*:*:*"
      },
      {
        "version": "Adobe » Acrobat Dc » Continuous Edition Versions from including (>=) 15.008.20082 and up to, including, (<=) 22.003.20282",
        "detail": "cpe:2.3:a:adobe:acrobat_dc:*:*:*:*:continuous:*:*:*"
      },
      {
        "version": "Adobe » Acrobat Dc » Continuous Edition Versions from including (>=) 15.008.20082 and up to, including, (<=) 22.003.20281",
        "detail": "cpe:2.3:a:adobe:acrobat_dc:*:*:*:*:continuous:*:*:*"
      },
      {
        "version": "Adobe » Acrobat Reader Dc » Continuous Edition Versions from including (>=) 15.008.20082 and up to, including, (<=) 22.003.20281",
        "detail": "cpe:2.3:a:adobe:acrobat_reader_dc:*:*:*:*:continuous:*:*:*"
      },
      {
        "version": "Adobe » Acrobat Reader Dc » Continuous Edition Versions from including (>=) 15.008.20082 and up to, including, (<=) 22.003.20282",
        "detail": "cpe:2.3:a:adobe:acrobat_reader_dc:*:*:*:*:continuous:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-416",
        "cwe_name": "Use After Free",
        "cwe_description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
        "cwe_extended_description": "The use of previously-freed memory can have any number of adverse consequences, ranging from the corruption of valid data to the execution of arbitrary code, depending on the instantiation and timing of the flaw. The simplest way data corruption may occur involves the system's reuse of the freed memory. Use-after-free errors have two common and sometimes overlapping causes:\n\nError conditions and other exceptional circumstances.\nConfusion over which part of the program is responsible for freeing the memory.\n\nIn this scenario, the memory in question is allocated to another pointer validly at some point after it has been freed. The original pointer to the freed memory is used again and points to somewhere within the new allocation. As the data is changed, it corrupts the validly used memory; this induces undefined behavior in the process.\n\nIf the newly allocated data happens to hold a class, in C++ for example, various function pointers may be scattered within the heap data. If one of these function pointers is overwritten with an address to valid shellcode, execution of arbitrary code can be achieved.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-20141",
            "name": "CVE-2022-20141",
            "des": "Chain: an operating system kernel has insufficent resource locking (CWE-413) leading to a use after free (CWE-416)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-2621",
            "name": "CVE-2022-2621",
            "des": "Chain: two threads in a web browser use the same resource (CWE-366), but one of those threads can destroy the resource before the other has completed (CWE-416)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-0920",
            "name": "CVE-2021-0920",
            "des": "Chain: mobile platform race condition (CWE-362) leading to use-after-free (CWE-416), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-6819",
            "name": "CVE-2020-6819",
            "des": "Chain: race condition (CWE-362) leads to use-after-free (CWE-416), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-4168",
            "name": "CVE-2010-4168",
            "des": "Use-after-free triggered by closing a connection while data is still being transmitted."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2941",
            "name": "CVE-2010-2941",
            "des": "Improper allocation for invalid data leads to use-after-free."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2547",
            "name": "CVE-2010-2547",
            "des": "certificate with a large number of Subject Alternate Names not properly handled in realloc, leading to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1772",
            "name": "CVE-2010-1772",
            "des": "Timers are not disabled when a related object is deleted"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1437",
            "name": "CVE-2010-1437",
            "des": "Access to a \"dead\" object that is being cleaned up"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1208",
            "name": "CVE-2010-1208",
            "des": "object is deleted even with a non-zero reference count, and later accessed"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0629",
            "name": "CVE-2010-0629",
            "des": "use-after-free involving request containing an invalid version number"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0378",
            "name": "CVE-2010-0378",
            "des": "unload of an object that is currently being accessed by other functionality"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0302",
            "name": "CVE-2010-0302",
            "des": "incorrectly tracking a reference count leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0249",
            "name": "CVE-2010-0249",
            "des": "use-after-free related to use of uninitialized memory"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0050",
            "name": "CVE-2010-0050",
            "des": "HTML document with incorrectly-nested tags"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3658",
            "name": "CVE-2009-3658",
            "des": "Use after free in ActiveX object by providing a malformed argument to a method"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3616",
            "name": "CVE-2009-3616",
            "des": "use-after-free by disconnecting during data transfer, or a message containing incorrect data types"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3553",
            "name": "CVE-2009-3553",
            "des": "disconnect during a large data transfer causes incorrect reference count, leading to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2416",
            "name": "CVE-2009-2416",
            "des": "use-after-free found by fuzzing"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1837",
            "name": "CVE-2009-1837",
            "des": "Chain: race condition (CWE-362) from improper handling of a page transition in web client while an applet is loading (CWE-368) leads to use after free (CWE-416)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0749",
            "name": "CVE-2009-0749",
            "des": "realloc generates new buffer and pointer, but previous pointer is still retained, leading to use after free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-3328",
            "name": "CVE-2010-3328",
            "des": "Use-after-free in web browser, probably resultant from not initializing memory."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5038",
            "name": "CVE-2008-5038",
            "des": "use-after-free when one thread accessed memory that was freed by another thread"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-0077",
            "name": "CVE-2008-0077",
            "des": "assignment of malformed values to certain properties triggers use after free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4434",
            "name": "CVE-2006-4434",
            "des": "mail server does not properly handle a long header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2753",
            "name": "CVE-2010-2753",
            "des": "chain: integer overflow leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4997",
            "name": "CVE-2006-4997",
            "des": "freed pointer dereference"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Choose a language that provides automatic memory management."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple or complex data structures may lower the usefulness of this strategy."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Fuzzing",
            "des": [
              "Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2023-20109",
    "cve_name": "",
    "cve_description": "A vulnerability in the Cisco Group Encrypted Transport VPN (GET VPN) feature of Cisco IOS Software and Cisco IOS XE Software could allow an authenticated, remote attacker who has administrative control of either a group member or a key server to execute arbitrary code on an affected device or cause the device to crash.\n\nThis vulnerability is due to insufficient validation of attributes in the Group Domain of Interpretation (GDOI) and G-IKEv2 protocols of the GET VPN feature. An attacker could exploit this vulnerability by either compromising an installed key server or modifying the configuration of a group member to point to a key server that is controlled by the attacker. A successful exploit could allow the attacker to execute arbitrary code and gain full control of the affected system or cause the affected system to reload, resulting in a denial of service (DoS) condition. For more information, see the Details [\"#details\"] section of this advisory.",
    "cve_category": ["Memory Corruption", "Execute code", "Denial of service"],
    "cve_published_at": "Published 2023-09-27 18:15:11",
    "cve_updated_at": "Updated 2023-10-05 17:39:30",
    "cve_required_action": "",
    "cvss": {
      "base_score": "6.6",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "0.7",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Cisco » IOS » Version: 12.4(24)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)t ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)md ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)md:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)md1 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)md1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)mda ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)mda:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)md ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)md:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)md4 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)md4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)md2 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)md2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)md3 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)md3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)t ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(2)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(2\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)sy ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)sy:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)sy1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)sy1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)sy2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)sy2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb10 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb12 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb12:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda6 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda8 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda10 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda11 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda11:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda12 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda12:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda13 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda13:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)md5 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)md5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)md6 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)md6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb11 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb11:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb13 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb13:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda7 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda9 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)md7 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)md7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ey2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ey2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ey ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ey:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ey3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ey3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(2)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(2\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)ey ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)ey:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ey1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ey1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)t4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)t4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(2)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(2\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(2)t ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(2\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(2)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(2\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)t ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(2)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(2\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(2)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(2\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(2)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(2\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)s3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)s3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(2)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(2\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)t ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)gc ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)gc:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sg4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sg4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)e2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)e2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)sy4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)sy4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2a)e1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2a\\)e1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy4a ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy4a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2a)ex5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2a\\)ex5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sg ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sg1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sg1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sg2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sg2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)s4a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)s4a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ej1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ej1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(3)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(3\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)e3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)e3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(3a)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(3a\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)s7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)s7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(1)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(1\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)s5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)s5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)s3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)s3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(2)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(2\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)s3a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)s3a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)e1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)e1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sg5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sg5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(2)s3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(2\\)s3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)s6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)s6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(1)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(1\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ez ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ez:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ej ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ej:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)sy ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)sy:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sg3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sg3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)sy3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)sy3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)sy5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)sy5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)ea1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)ea1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)sy0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)sy0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(2)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(2\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(3)e1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(3\\)e1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sg6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sg6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)cg1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)cg1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(2)cg ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(2\\)cg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(3)ea ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(3\\)ea:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)cg ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)cg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s1a ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2a)e2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2a\\)e2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(2)t ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(2\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(1)t0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(1\\)t0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)sg1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)sg1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)sy6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)sy6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)sg ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)sg2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)sg2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sg7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sg7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)sn ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)sn:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(2)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(2\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(2)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(2\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)s0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)s0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s1a ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)s5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)s5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)s3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)s3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(2)s3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(2\\)s3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)s3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)s3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)s5a ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)s5a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)s6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)s6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)t ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(1)t ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(1\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(1)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(1\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)t4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)t4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(2)t4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(2\\)t4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(1)sy ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(1\\)sy:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(1)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(1\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)svg ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)svg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)sve ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)sve:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)sy1a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)sy1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(1)sy1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(1\\)sy1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(1)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(1\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(1)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(1\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(1)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(1\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(2)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(2\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(2)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(2\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)eb1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)eb1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)eb ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)eb:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)sy2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)sy2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)sy1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)sy1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(2)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(2\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)eb2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)eb2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ek1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ek1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ek ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ek:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)sy3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)sy3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)svd ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)svd:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)svb1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)svb1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(5)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(5\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(3)e4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(3\\)e4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(3)e3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(3\\)e3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(2)t4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(2\\)t4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)sy ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)sy:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(2)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(2\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)mra3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)mra3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)mra2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)mra2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(3)e2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(3\\)e2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)gc2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)gc2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ex8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ex8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ex5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ex5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb7 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb6 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb5 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m11 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m11:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)svf1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)svf1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)svf ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)svf:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)sy2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)sy2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)sy1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)sy1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)svd2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)svd2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)svd1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)svd1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)mra1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)mra1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)mra ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)mra:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)gc3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)gc3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)gc1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)gc1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)gc ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)gc:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ex4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ex4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ex3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ex3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb19 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb19:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb18 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb18:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)mra4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)mra4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(3)gc1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(3\\)gc1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(3)gc ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(3\\)gc:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ex ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ex:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb15 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb15:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb14 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb14:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb5a ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb5a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb4 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb3 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m6a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m6a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sg8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sg8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)gc1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)gc1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)gc ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)gc:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m3a ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m3a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(1)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(1\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(1)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(1\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)s4a ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)s4a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)s5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)s5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)t4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)t4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)xa5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)xa5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)m7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)m7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)yg2 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)yg2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)mr ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)mr:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)gc2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)gc2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)gc1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)gc1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(2)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(2\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(2)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(2\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(1)t ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(1\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)s0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)s0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)xb ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)xb:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)t5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)t5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)t2a ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)t2a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)t0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)t0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)xa1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)xa1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)xa4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)xa4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)m8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)m8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)m9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)m9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)m3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)m3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)m4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)m4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda4 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)mda4 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)mda4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)yg1 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)yg1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)mda1 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)mda1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)mda2 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)mda2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda5 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)mda3 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)mda3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr1 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr2 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr5 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr11 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr11:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr8 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr7 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)mr ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)mr:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)gc ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)gc:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)gc2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)gc2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(2)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(2\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(1)t4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(1\\)t4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)s6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)s6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)t4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)t4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)t5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)t5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)t4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)t4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)xa2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)xa2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)m10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)m10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)m5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)m5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)m1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)m1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)mda6 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)mda6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda2 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda3 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)mda5 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)mda5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr3 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr9 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr4 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(1)s1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(1\\)s1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)gc2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)gc2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)gc1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)gc1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)gc ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)gc:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ex11 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ex11:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ex10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ex10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ex2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ex2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ex1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ex1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb17 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb17:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb16 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb16:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb9 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb8 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mdb1 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mdb1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)m1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)m1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(4)m5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(4\\)m5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(2)t4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(2\\)t4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(1)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(1\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(2)t ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(2\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)md2 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)md2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)s0c ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)s0c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)s ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)s3a ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)s3a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)t ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(1)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(1\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)xa ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)xa:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)xa3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)xa3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)m ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)m:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)m6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)m6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(1)m2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(1\\)m2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)yg4 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)yg4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)yg3 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)yg3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)mda1 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)mda1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr12 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr12:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr10 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)xr6 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)xr6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)md1 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)md1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t4e ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t4e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t4d ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t4d:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t4f ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t4f:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t3f ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t3f:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)t4 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)t4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t4l ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t4l:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t4c ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t4c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t3e ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t3e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)t5 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)t5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)t ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t4b ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t4b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t4a ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t4a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t6 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t5 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(22)t1 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(22\\)t1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t7 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t8 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)t4 ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)t4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ea1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ea1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ea3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ea3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ea ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ea:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)ea3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)ea3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)ea2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)ea2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sn ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sn:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(5)e2b ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(5\\)e2b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(1)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(1\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m8a ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m8a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)t2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)t2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m6a ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m6a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e5b ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e5b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)s3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)s3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(5a)e1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(5a\\)e1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)s2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)s2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m4a ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m4a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ec1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ec1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ec2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ec2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sp2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sp2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sp ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s6a ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s6a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(2)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(2\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m1b ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sp1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sp1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(1)s3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(1\\)s3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s8a ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s8a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ea5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ea5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ea4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ea4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(1)sy2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(1\\)sy2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)sy1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)sy1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ea1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ea1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)sy ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)sy:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se10a ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se10a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(5)ea ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(5\\)ea:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e5a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e5a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(3)e5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(3\\)e5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(5)e2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(5\\)e2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(5a)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(5a\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(5b)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(5b\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(5)e2c ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(5\\)e2c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se11 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se11:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(5c)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(5c\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m2a ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m2a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)sy2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)sy2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)sy3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)sy3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(5)e1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(5\\)e1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)sy4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)sy4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(5)ex ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(5\\)ex:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ex13 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ex13:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sp3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sp3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)s10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)s10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)t3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)t3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(1)s4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(1\\)s4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy11 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy11:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)ea ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)ea:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s6b ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s6b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ex12 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ex12:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ea6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ea6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)sy5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)sy5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s6a ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s6a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)sy3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)sy3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e5a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e5a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m6a ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m6a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m3a ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m3a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(6)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(6\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sp4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sp4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(6)e1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(6\\)e1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(6)e0c ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(6\\)e0c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e7b ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e7b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(6)e0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(6\\)e0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ea9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ea9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ea8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ea8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)sy7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)sy7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy13 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy13:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy12 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy12:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)sy6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)sy6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(1)sy4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(1\\)sy4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.3(3)m10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.3\\(3\\)m10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)m9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)m9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se13 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se13:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(2)e9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(2\\)e9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy15 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy15:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ea7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ea7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)se12 ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)se12:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m0b ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m0b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sp5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sp5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)svb2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)svb2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(6)e2a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(6\\)e2a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(6)e2b ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(6\\)e2b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.4(3)s10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.4\\(3\\)s10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(3)svj2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(3\\)svj2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 12.4(24)yg ",
        "detail": "cpe:2.3:o:cisco:ios:12.4\\(24\\)yg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(6)e2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(6\\)e2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(6)e3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(6\\)e3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(6)eb ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(6\\)eb:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e0b ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e0b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e1a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e2a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e2a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7a)e0b ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7a\\)e0b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7b)e0b ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7b\\)e0b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e3k ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e3k:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e0s ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m2a ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m2a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m2a ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m2a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e10a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e10a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)ea9a ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)ea9a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)m10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)m10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(3)s9a ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(3\\)s9a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m6a ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m6a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m6b ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m6b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(3)m9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(3\\)m9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m4a ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m4a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m4b ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m4b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m1a ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m3a ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m3a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m3b ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m3b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m0a ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m0a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy14 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy14:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(1)sy8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(1\\)sy8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sp6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sp6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sp7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sp7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sp8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sp8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sp9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sp9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.6(2)sp10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.6\\(2\\)sp10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m3a ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m3a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m3b ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m3b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.1(2)sy16 ",
        "detail": "cpe:2.3:o:cisco:ios:15.1\\(2\\)sy16:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(8)e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(8\\)e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(8)e1 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(8\\)e1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.7(3)m9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.7\\(3\\)m9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m4a ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m4a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m5 ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(8)e2 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(8\\)e2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.0(2)ea ",
        "detail": "cpe:2.3:o:cisco:ios:15.0\\(2\\)ea:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e10d ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e10d:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(4)e10e ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(4\\)e10e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(7)e8 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(7\\)e8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(8)e3 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(8\\)e3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.2(8)e4 ",
        "detail": "cpe:2.3:o:cisco:ios:15.2\\(8\\)e4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.5(1)sy11 ",
        "detail": "cpe:2.3:o:cisco:ios:15.5\\(1\\)sy11:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m9 ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.8(3)m10 ",
        "detail": "cpe:2.3:o:cisco:ios:15.8\\(3\\)m10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m6 ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m6a ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m6a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m6b ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m6b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m7 ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » IOS » Version: 15.9(3)m7a ",
        "detail": "cpe:2.3:o:cisco:ios:15.9\\(3\\)m7a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.3.0sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.3.0sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.3.1sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.3.1sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.9.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.9.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.9.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.9.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.4.0sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.4.0sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.5.0e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.5.0e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.4.2sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.4.2sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.5.2e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.5.2e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.4.1sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.4.1sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.5.1e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.5.1e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.4.3sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.4.3sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.4.4sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.4.4sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.1.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.1.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.9.0as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.9.0as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.9.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.9.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.9.1as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.9.1as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.1xbs ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.1xbs:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.1as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.1as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.0e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.0e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.2ts ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.2ts:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.0as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.0as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.5s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.5s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.3e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.3e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.17.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.17.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.17.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.17.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.1e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.1e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.4.7sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.4.7sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.2as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.2as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.7s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.7s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.2ts ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.2ts:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.15.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.15.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.14.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.14.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.4s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.4s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.12.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.12.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.4.5sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.4.5sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.12.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.12.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.6s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.6s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.7s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.7s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.1e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.1e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.6s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.6s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.5s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.5s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.3.2sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.3.2sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.4s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.4s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.15.1cs ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.15.1cs:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.2as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.2as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.12.4s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.12.4s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.12.0as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.12.0as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.2e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.2e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.4.6sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.4.6sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.14.4s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.14.4s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.14.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.14.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.15.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.15.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.14.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.14.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.5s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.5s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.0bs ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.0bs:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.4as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.4as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.4e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.4e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.0cs ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.0cs:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.15.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.15.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.1as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.1as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.4s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.4s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.15.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.15.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.2ae ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.2ae:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.14.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.14.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.0e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.0e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.5.3e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.5.3e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.12.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.12.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.12.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.12.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.4s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.4s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.7.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.7.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.4.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.4.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.1.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.1.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.1.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.1.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.2.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.2.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.17.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.17.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.2bs ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.2bs:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.17.1as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.17.1as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.5as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.5as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.15.4s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.15.4s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.0s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.0s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.2.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.2.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.2e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.2e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.3as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.3as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.0sp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.0sp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.4s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.4s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.9.1e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.9.1e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.9.0e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.9.0e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.5.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.5.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.17.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.17.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.4e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.4e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.5be ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.5be:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.5.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.5.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.6s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.6s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.0as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.0as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.5s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.5s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.4.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.4.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.9s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.9s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.1sp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.1sp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.4ds ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.4ds:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.3e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.3e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.2sp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.2sp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.7s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.7s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.1csp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.1csp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.6as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.6as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.4as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.4as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.4bs ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.4bs:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.1asp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.1asp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.6e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.6e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.5ae ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.5ae:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.2asp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.2asp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.8as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.8as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.4 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.9.2e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.9.2e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.7as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.7as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.8s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.8s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.5e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.5e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.5.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.5.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.1bsp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.1bsp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.5b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.5b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.6 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.7 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.8 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.9 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.10 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.11 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.11:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.4.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.4.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.3a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.3a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.4.8sg ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.4.8sg:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.7e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.7e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.17.4s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.17.4s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.8s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.8s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.6s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.6s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.3sp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.3sp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.8.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.8.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.5e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.5e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.5.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.5.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.5ae ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.5ae:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.6bs ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.6bs:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.3.5 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.3.5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.7.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.7.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.5 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.4 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.11.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.11.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.1.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.1.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.4s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.4s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.8.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.8.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.8.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.8.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.8.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.8.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.8.1e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.8.1e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.10e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.10e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.8.1d ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.8.1d:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.7.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.7.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.8.1c ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.8.1c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.5.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.5.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.7.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.7.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.8.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.8.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.7.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.7.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.7.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.7.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.8e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.8e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.0ce ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.0ce:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.6e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.6e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.3asp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.3asp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.7s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.7s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.7as ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.7as:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.7bs ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.7bs:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.0e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.0e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.3bsp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.3bsp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.4sp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.4sp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.7be ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.7be:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.1e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.1e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.5sp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.5sp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.8s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.8s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.10s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.10s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.4a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.4a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.10s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.10s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.13.9s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.13.9s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.6.9e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.6.9e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.10s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.10s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.7e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.7e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.7.4 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.7.4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.2e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.2e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.1ae ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.1ae:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.1e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.1e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.2e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.2e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.3ae ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.3ae:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.3e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.3e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.8.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.8.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.4 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.5 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.5f ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.5f:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.6 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1c ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1d ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1d:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1f ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1f:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1g ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1g:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.10.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.10.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.11.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.11.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.11.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.11.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.11.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.11.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.1c ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.1c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.1t ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.1t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.1w ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.1w:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.1x ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.1x:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.1y ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.1y:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.2a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.2a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.2s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.2s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.3a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.3a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.3s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.3s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.1.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.1.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.1.1s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.1.1s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.1.1t ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.1.1t:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.2.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.2.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.2.1r ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.2.1r:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.2.1v ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.2.1v:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.2.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.2.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.2.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.2.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.10.3e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.10.3e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.0e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.0e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.11.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.11.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.2.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.2.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.16.9s ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.16.9s:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.6sp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.6sp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.7sp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.7sp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.8asp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.8asp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.5a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.5a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.6 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.7 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.8 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.1z1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.1z1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.4 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.4a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.4a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.1w ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.1w:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.1.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.1.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.1x ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.1x:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.2a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.2a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.4.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.4.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.4.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.4.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.4.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.4.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.5 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.5b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.5b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.8e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.8e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.9e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.9e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.10e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.10e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.5a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.5a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.8 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.9 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.7 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.5.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.5.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.18.9sp ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.18.9sp:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.1z ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.1z:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.4e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.4e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.5.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.5.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.5e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.5e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.1z2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.1z2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.6.10 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.6.10:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.9.8 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.9.8:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.4 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.4a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.4a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.4b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.4b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.4c ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.4c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.4.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.4.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.4.2a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.4.2a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.6 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.6a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.6a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.1w ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.1w:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.6e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.6e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.8.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.8.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.11.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.11.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.7 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.1w ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.1w:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.10.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.10.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.5 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.7.1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.7.1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.6 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.6:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.5a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.5a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.5b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.5b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.4 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.4:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.3a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.3a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.7.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.7.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.7.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.7.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.8.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.8.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 16.12.9 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:16.12.9:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.3.7 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.3.7:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.5 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.5:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.2 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.2:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.8.10ee ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.8.10ee:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.7e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.7e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 3.11.8e ",
        "detail": "cpe:2.3:o:cisco:ios_xe:3.11.8e:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.5.1c ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.5.1c:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.1x ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.1x:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.1y ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.1y:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.1z ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.1z:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.6.1z1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.6.1z1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.7.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.7.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.1x ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.1x:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.1x1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.1x1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.1y ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.1y:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.1y1 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.1y1:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.2a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.2a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.2b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.2b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.3 ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.3:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.9.3a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.9.3a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.10.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.10.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.10.1b ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.10.1b:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.11.1a ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.11.1a:*:*:*:*:*:*:*"
      },
      {
        "version": "Cisco » Ios Xe » Version: 17.11.99sw ",
        "detail": "cpe:2.3:o:cisco:ios_xe:17.11.99sw:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-787",
        "cwe_name": "Out-of-bounds Write",
        "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "cwe_extended_description": "Typically, this can result in corruption of data, a crash, or code execution. The product may modify an index or perform pointer arithmetic that references a memory location that is outside of the boundaries of the buffer. A subsequent write operation then produces undefined or unexpected results.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21220",
            "name": "CVE-2021-21220",
            "des": "Chain: insufficient input validation (CWE-20) in browser allows heap corruption (CWE-787), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-28664",
            "name": "CVE-2021-28664",
            "des": "GPU kernel driver allows memory corruption because a user can obtain read/write access to read-only pages, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-17087",
            "name": "CVE-2020-17087",
            "des": "Chain: integer truncation (CWE-197) causes small buffer allocation (CWE-131) leading to out-of-bounds write (CWE-787) in kernel pool, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-1054",
            "name": "CVE-2020-1054",
            "des": "Out-of-bounds write in kernel-mode driver, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0041",
            "name": "CVE-2020-0041",
            "des": "Escape from browser sandbox using out-of-bounds write due to incorrect bounds check, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0968",
            "name": "CVE-2020-0968",
            "des": "Memory corruption in web browser scripting engine, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0022",
            "name": "CVE-2020-0022",
            "des": "chain: mobile phone Bluetooth implementation does not include offset when calculating packet length (CWE-682), leading to out-of-bounds write (CWE-787)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-1010006",
            "name": "CVE-2019-1010006",
            "des": "Chain: compiler optimization (CWE-733) removes or modifies code used to detect integer overflow (CWE-190), allowing out-of-bounds write (CWE-787)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1532",
            "name": "CVE-2009-1532",
            "des": "malformed inputs cause accesses of uninitialized or previously-deleted objects, leading to memory corruption"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0269",
            "name": "CVE-2009-0269",
            "des": "chain: -1 value from a function call was intended to indicate an error, but is used as an array index instead."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-2227",
            "name": "CVE-2002-2227",
            "des": "Unchecked length of SSLv2 challenge value leads to buffer underflow."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4580",
            "name": "CVE-2007-4580",
            "des": "Buffer underflow from a small size value with a large buffer (length parameter inconsistency, CWE-130)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4268",
            "name": "CVE-2007-4268",
            "des": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2550",
            "name": "CVE-2009-2550",
            "des": "Classic stack-based buffer overflow in media player using a long entry in a playlist"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2403",
            "name": "CVE-2009-2403",
            "des": "Heap-based buffer overflow in media player using a long entry in a playlist"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, many languages that perform their own memory management, such as Java and Perl, are not subject to buffer overflows. Other languages, such as Ada and C#, typically provide overflow protection, but the protection can be disabled by the programmer.",
              "Be wary that a language's interface to native code may still be subject to overflows, even if the language itself is theoretically safe."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Examples include the Safe C String Library (SafeStr) by Messier and Viega [REF-57], and the Strsafe.h library from Microsoft [REF-56]. These libraries provide safer versions of overflow-prone string-handling functions.",
              "Note: This is not a complete solution, since many buffer overflows are not related to strings."
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking.",
              "D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Consider adhering to the following rules when allocating and managing an application's memory:"
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code.",
              "Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as \"rebasing\" (for Windows) and \"prelinking\" (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking.",
              "For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].",
              "Note: These techniques do not provide a complete solution. For instance, exploits frequently use a bug that discloses memory addresses in order to maximize reliability of code execution [REF-1337]. It has also been shown that a side-channel attack can bypass ASLR [REF-1333]"
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment.",
              "For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].",
              "Note: This is not a complete solution, since buffer overflows could be used to overwrite nearby variables to modify the software's state in dangerous ways. In addition, it cannot be used in cases in which self-modifying code is required. Finally, an attack could still cause a denial of service, since the typical response is to exit the application."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Replace unbounded copy functions with analogous functions that support length arguments, such as strcpy with strncpy. Create these if they are not available.",
              "Note: This approach is still susceptible to calculation errors, including issues such as off-by-one errors (CWE-193) and incorrectly calculating buffer lengths (CWE-131)."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Automated static analysis generally does not account for environmental considerations when reporting out-of-bounds memory operations. This can make it difficult for users to determine which warnings should be investigated first. For example, an analysis tool might report buffer overflows that originate from command line arguments in a program that is not expected to run with setuid or other special privileges.",
              "Effectiveness: High",
              "Note: Detection techniques for buffer-related errors are more mature than for most other weakness types."
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results."
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2023-42824",
    "cve_name": "",
    "cve_description": "The issue was addressed with improved checks. This issue is fixed in iOS 16.7.1 and iPadOS 16.7.1. A local attacker may be able to elevate their privileges. Apple is aware of a report that this issue may have been actively exploited against versions of iOS before iOS 16.6.",
    "cve_category": [],
    "cve_published_at": "Published 2023-10-04 19:15:10",
    "cve_updated_at": "Updated 2023-10-26 20:01:19",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Apple » Iphone Os Versions before (<) 16.7.1",
        "detail": "cpe:2.3:o:apple:iphone_os:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Iphone Os Versions from including (>=) 17.0 and before (<) 17.0.3",
        "detail": "cpe:2.3:o:apple:iphone_os:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados Versions from including (>=) 17.0 and before (<) 17.0.3",
        "detail": "cpe:2.3:o:apple:ipados:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados Versions before (<) 16.7.1",
        "detail": "cpe:2.3:o:apple:ipados:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-40044",
    "cve_name": "",
    "cve_description": "In WS_FTP Server versions prior to 8.7.4 and 8.8.2, a pre-authenticated attacker could leverage a .NET deserialization vulnerability in the Ad Hoc Transfer module to execute remote commands on the underlying WS_FTP Server operating system.  ",
    "cve_category": [],
    "cve_published_at": "Published 2023-09-27 15:18:57",
    "cve_updated_at": "Updated 2023-10-04 17:15:10",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "2.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Progress » Ws Ftp Server Versions before (<) 8.7.4",
        "detail": "cpe:2.3:a:progress:ws_ftp_server:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Progress » Ws Ftp Server Versions from including (>=) 8.8 and before (<) 8.8.2",
        "detail": "cpe:2.3:a:progress:ws_ftp_server:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-502",
        "cwe_name": "Deserialization of Untrusted Data",
        "cwe_description": "The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.",
        "cwe_extended_description": "It is often convenient to serialize objects for communication or to save them for later use. However, deserialized data or code can often be modified without using the provided accessor functions if it does not use cryptography to protect itself. Furthermore, any cryptography would still be client-side security -- which is a dangerous security assumption.\n\nData that is untrusted can not be trusted to be well-formed.\n\nWhen developers place no restrictions on \"gadget chains,\" or series of instances and method invocations that can self-execute during the deserialization process (i.e., before the object is returned to the caller), it is sometimes possible for attackers to leverage them to perform unauthorized actions, like generating a shell.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-12799",
            "name": "CVE-2019-12799",
            "des": "chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2015-8103",
            "name": "CVE-2015-8103",
            "des": "Deserialization issue in commonly-used Java library allows remote execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2015-4852",
            "name": "CVE-2015-4852",
            "des": "Deserialization issue in commonly-used Java library allows remote execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2013-1465",
            "name": "CVE-2013-1465",
            "des": "Use of PHP unserialize function on untrusted input allows attacker to modify application configuration."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-3527",
            "name": "CVE-2012-3527",
            "des": "Use of PHP unserialize function on untrusted input in content management system might allow code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-0911",
            "name": "CVE-2012-0911",
            "des": "Use of PHP unserialize function on untrusted input in content management system allows code execution using a crafted cookie value."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-0911",
            "name": "CVE-2012-0911",
            "des": "Content management system written in PHP allows unserialize of arbitrary objects, possibly allowing code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2011-2520",
            "name": "CVE-2011-2520",
            "des": "Python script allows local users to execute code via pickled data."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-4406",
            "name": "CVE-2012-4406",
            "des": "Unsafe deserialization using pickle in a Python script."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0791",
            "name": "CVE-2003-0791",
            "des": "Web browser allows execution of native methods via a crafted string to a JavaScript function that deserializes the string."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "If available, use the signing/sealing features of the programming language to assure that deserialized data has not been tainted. For example, a hash-based message authentication code (HMAC) could be used to ensure that data has not been modified."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When deserializing data, populate a new object rather than just deserializing. The result is that the data flows through safe input validation and that the functions are safe."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Explicitly define a final object() to prevent deserialization."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "Make fields transient to protect them from deserialization.",
              "An attempt to serialize and then deserialize a class containing transient fields will result in NULLs where the transient data should be. This is an excellent way to prevent time, environment-based, or sensitive variables from being carried over and used improperly."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. This limits the potential for unintended or unauthorized types and gadgets to be leveraged by the attacker. Add only acceptable classes to an allowlist. Note: new gadgets are constantly being discovered, so this alone is not a sufficient mitigation."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-586",
            "capec_name": "Object Injection",
            "capec_description": "An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects. Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Implementation: Validate object before deserialization process",
              "Design: Limit which types can be deserialized.",
              "Implementation: Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. Use an allowlist of acceptable classes.",
              "Implementation: Keep session state on the server, when possible."
            ],
            "related_cwe": ["CWE-502"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-22515",
    "cve_name": "",
    "cve_description": "Atlassian has been made aware of an issue reported by a handful of customers where external attackers may have exploited a previously unknown vulnerability in publicly accessible Confluence Data Center and Server instances to create unauthorized Confluence administrator accounts and access Confluence instances.\n\nAtlassian Cloud sites are not affected by this vulnerability. If your Confluence site is accessed via an atlassian.net domain, it is hosted by Atlassian and is not vulnerable to this issue.",
    "cve_category": [],
    "cve_published_at": "Published 2023-10-04 14:15:10",
    "cve_updated_at": "Updated 2023-10-20 16:15:19",
    "cve_required_action": "",
    "cvss": {
      "base_score": "10.0",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "6.0",
      "source": "security@atlassian.com"
    },
    "cpe": [
      {
        "version": "Atlassian » Confluence Server Versions from including (>=) 8.5.0 and before (<) 8.5.2",
        "detail": "cpe:2.3:a:atlassian:confluence_server:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Server Versions from including (>=) 8.0.0 and before (<) 8.3.3",
        "detail": "cpe:2.3:a:atlassian:confluence_server:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Server Versions from including (>=) 8.4.0 and before (<) 8.4.3",
        "detail": "cpe:2.3:a:atlassian:confluence_server:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Data Center Versions from including (>=) 8.4.0 and before (<) 8.4.3",
        "detail": "cpe:2.3:a:atlassian:confluence_data_center:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Data Center Versions from including (>=) 8.0.0 and before (<) 8.3.3",
        "detail": "cpe:2.3:a:atlassian:confluence_data_center:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Atlassian » Confluence Data Center Versions from including (>=) 8.5.0 and before (<) 8.5.2",
        "detail": "cpe:2.3:a:atlassian:confluence_data_center:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-42793",
    "cve_name": "",
    "cve_description": "In JetBrains TeamCity before 2023.05.4 authentication bypass leading to RCE on TeamCity Server was possible",
    "cve_category": [],
    "cve_published_at": "Published 2023-09-19 17:15:08",
    "cve_updated_at": "Updated 2023-10-03 15:44:07",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Jetbrains » Teamcity Versions before (<) 2023.05.4",
        "detail": "cpe:2.3:a:jetbrains:teamcity:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-288",
        "cwe_name": "Authentication Bypass Using an Alternate Path or Channel",
        "cwe_description": "A product requires authentication, but the product has an alternate path or channel that does not require authentication.",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2000-1179",
            "name": "CVE-2000-1179",
            "des": "Router allows remote attackers to read system logs without authentication by directly connecting to the login screen and typing certain control characters."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-1999-1454",
            "name": "CVE-1999-1454",
            "des": "Attackers with physical access to the machine may bypass the password prompt by pressing the ESC (Escape) key."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-1999-1077",
            "name": "CVE-1999-1077",
            "des": "OS allows local attackers to bypass the password protection of idled sessions via the programmer's switch or CMD-PWR keyboard sequence, which brings up a debugger that the attacker can use to disable the lock."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0304",
            "name": "CVE-2003-0304",
            "des": "Direct request of installation file allows attacker to create administrator accounts."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0870",
            "name": "CVE-2002-0870",
            "des": "Attackers may gain additional privileges by directly requesting the web management URL."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0066",
            "name": "CVE-2002-0066",
            "des": "Bypass authentication via direct request to named pipe."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-1035",
            "name": "CVE-2003-1035",
            "des": "User can avoid lockouts by using an API instead of the GUI to conduct brute force password guessing."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Funnel all access through a single choke point to simplify how users can access a resource. For every access, perform a check to determine if the user has permissions to access the resource."
            ]
          }
        ],
        "detection_methods": [],
        "capec": [
          {
            "capec_id": "CAPEC-127",
            "capec_name": "Directory Indexing",
            "capec_description": "An adversary crafts a request to a target that results in the target listing/indexing the content of a directory as output. One common method of triggering directory contents as output is to construct a request containing a path that terminates in a directory name rather than a file name since many applications are configured to provide a list of the directory's contents when such a request is received. An adversary can use this to explore the directory tree on a target as well as learn the names of files. This can often end up revealing test files, backup files, temporary files, hidden files, configuration files, user accounts, script contents, as well as naming conventions, all of which can be used by an attacker to mount additional attacks.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Medium",
            "mitigations": [
              "1. Using blank index.html: putting blank index.html simply prevent directory listings from displaying to site visitors.",
              "2. Preventing with .htaccess in Apache web server: In .htaccess, write \"Options-indexes\".",
              "3. Suppressing error messages: using error 403 \"Forbidden\" message exactly like error 404 \"Not Found\" message."
            ],
            "related_cwe": [
              "CWE-424",
              "CWE-425",
              "CWE-288",
              "CWE-285",
              "CWE-732",
              "CWE-276",
              "CWE-693"
            ]
          },
          {
            "capec_id": "CAPEC-665",
            "capec_name": "Exploitation of Thunderbolt Protection Flaws",
            "capec_description": "An adversary leverages a firmware weakness within the Thunderbolt protocol, on a computing device to manipulate Thunderbolt controller firmware in order to exploit vulnerabilities in the implementation of authorization and verification schemes within Thunderbolt protection mechanisms. Upon gaining physical access to a target device, the adversary conducts high-level firmware manipulation of the victim Thunderbolt controller SPI (Serial Peripheral Interface) flash, through the use of a SPI Programing device and an external Thunderbolt device, typically as the target device is booting up. If successful, this allows the adversary to modify memory, subvert authentication mechanisms, spoof identities and content, and extract data and memory from the target device. Currently 7 major vulnerabilities exist within Thunderbolt protocol with 9 attack vectors as noted in the Execution Flow.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Very High",
            "mitigations": [
              "Implementation: Kernel Direct Memory Access Protection",
              "Configuration: Enable UEFI option USB Passthrough mode - Thunderbolt 3 system port operates as USB 3.1 Type C interface",
              "Configuration: Enable UEFI option DisplayPort mode - Thunderbolt 3 system port operates as video-only DP interface",
              "Configuration: Enable UEFI option Mixed USB/DisplayPort mode - Thunderbolt 3 system port operates as USB 3.1 Type C interface with support for DP mode",
              "Configuration: Set Security Level to SL3 for Thunderbolt 2 system port",
              "Configuration: Disable PCIe tunneling to set Security Level to SL3",
              "Configuration: Disable Boot Camp upon MacOS systems"
            ],
            "related_cwe": [
              "CWE-345",
              "CWE-353",
              "CWE-288",
              "CWE-1188",
              "CWE-862"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-28229",
    "cve_name": "",
    "cve_description": "Windows CNG Key Isolation Service Elevation of Privilege Vulnerability",
    "cve_category": ["Gain privilege"],
    "cve_published_at": "Published 2023-04-11 21:15:23",
    "cve_updated_at": "Updated 2023-04-13 01:13:41",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.0",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.0",
      "impact_score": "5.9",
      "source": "secure@microsoft.com"
    },
    "cpe": [
      {
        "version": "Microsoft » Windows Server 2008 » Version: N/A Update SP2 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2008:-:sp2:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2008 » Version: R2 Update SP1 For X64 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2008:r2:sp1:*:*:*:*:x64:*"
      },
      {
        "version": "Microsoft » Windows Server 2012 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2012:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2012 » Version: R2 ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2012:r2:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2016 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2016:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2019 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2019:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows Server 2022 » Version: N/A ",
        "detail": "cpe:2.3:o:microsoft:windows_server_2022:-:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 11 21h2 Versions before (<) 10.0.22000.1817",
        "detail": "cpe:2.3:o:microsoft:windows_11_21h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 11 22h2 Versions before (<) 10.0.22621.1555",
        "detail": "cpe:2.3:o:microsoft:windows_11_22h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 1607 Versions before (<) 10.0.14393.5850",
        "detail": "cpe:2.3:o:microsoft:windows_10_1607:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 1809 Versions before (<) 10.0.17763.4252",
        "detail": "cpe:2.3:o:microsoft:windows_10_1809:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 21h2 Versions before (<) 10.0.19044.2846",
        "detail": "cpe:2.3:o:microsoft:windows_10_21h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 20h2 Versions before (<) 10.0.19042.2846",
        "detail": "cpe:2.3:o:microsoft:windows_10_20h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 22h2 Versions before (<) 10.0.19045.2846",
        "detail": "cpe:2.3:o:microsoft:windows_10_22h2:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Windows 10 1507 Versions before (<) 10.0.10240.19869",
        "detail": "cpe:2.3:o:microsoft:windows_10_1507:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-4211",
    "cve_name": "",
    "cve_description": "A local non-privileged user can make improper GPU memory processing operations to gain access to already freed memory.",
    "cve_category": [],
    "cve_published_at": "Published 2023-10-01 18:15:10",
    "cve_updated_at": "Updated 2023-10-04 20:51:36",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.5",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
      "exploitability_score": "1.8",
      "impact_score": "3.6",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "ARM » Bifrost Versions from including (>=) r0p0 and up to, including, (<=) r42p0",
        "detail": "cpe:2.3:a:arm:bifrost:*:*:*:*:*:*:*:*"
      },
      {
        "version": "ARM » Valhall Versions from including (>=) r19p0 and up to, including, (<=) r42p0",
        "detail": "cpe:2.3:a:arm:valhall:*:*:*:*:*:*:*:*"
      },
      {
        "version": "ARM » Midgard Versions from including (>=) r12p0 and up to, including, (<=) r32p0",
        "detail": "cpe:2.3:a:arm:midgard:*:*:*:*:*:*:*:*"
      },
      {
        "version": "ARM » 5th Gen Gpu Architecture Kernel Driver Versions from including (>=) r41p0 and up to, including, (<=) r42p0",
        "detail": "cpe:2.3:a:arm:5th_gen_gpu_architecture_kernel_driver:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-416",
        "cwe_name": "Use After Free",
        "cwe_description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
        "cwe_extended_description": "The use of previously-freed memory can have any number of adverse consequences, ranging from the corruption of valid data to the execution of arbitrary code, depending on the instantiation and timing of the flaw. The simplest way data corruption may occur involves the system's reuse of the freed memory. Use-after-free errors have two common and sometimes overlapping causes:\n\nError conditions and other exceptional circumstances.\nConfusion over which part of the program is responsible for freeing the memory.\n\nIn this scenario, the memory in question is allocated to another pointer validly at some point after it has been freed. The original pointer to the freed memory is used again and points to somewhere within the new allocation. As the data is changed, it corrupts the validly used memory; this induces undefined behavior in the process.\n\nIf the newly allocated data happens to hold a class, in C++ for example, various function pointers may be scattered within the heap data. If one of these function pointers is overwritten with an address to valid shellcode, execution of arbitrary code can be achieved.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-20141",
            "name": "CVE-2022-20141",
            "des": "Chain: an operating system kernel has insufficent resource locking (CWE-413) leading to a use after free (CWE-416)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-2621",
            "name": "CVE-2022-2621",
            "des": "Chain: two threads in a web browser use the same resource (CWE-366), but one of those threads can destroy the resource before the other has completed (CWE-416)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-0920",
            "name": "CVE-2021-0920",
            "des": "Chain: mobile platform race condition (CWE-362) leading to use-after-free (CWE-416), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-6819",
            "name": "CVE-2020-6819",
            "des": "Chain: race condition (CWE-362) leads to use-after-free (CWE-416), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-4168",
            "name": "CVE-2010-4168",
            "des": "Use-after-free triggered by closing a connection while data is still being transmitted."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2941",
            "name": "CVE-2010-2941",
            "des": "Improper allocation for invalid data leads to use-after-free."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2547",
            "name": "CVE-2010-2547",
            "des": "certificate with a large number of Subject Alternate Names not properly handled in realloc, leading to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1772",
            "name": "CVE-2010-1772",
            "des": "Timers are not disabled when a related object is deleted"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1437",
            "name": "CVE-2010-1437",
            "des": "Access to a \"dead\" object that is being cleaned up"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1208",
            "name": "CVE-2010-1208",
            "des": "object is deleted even with a non-zero reference count, and later accessed"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0629",
            "name": "CVE-2010-0629",
            "des": "use-after-free involving request containing an invalid version number"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0378",
            "name": "CVE-2010-0378",
            "des": "unload of an object that is currently being accessed by other functionality"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0302",
            "name": "CVE-2010-0302",
            "des": "incorrectly tracking a reference count leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0249",
            "name": "CVE-2010-0249",
            "des": "use-after-free related to use of uninitialized memory"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-0050",
            "name": "CVE-2010-0050",
            "des": "HTML document with incorrectly-nested tags"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3658",
            "name": "CVE-2009-3658",
            "des": "Use after free in ActiveX object by providing a malformed argument to a method"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3616",
            "name": "CVE-2009-3616",
            "des": "use-after-free by disconnecting during data transfer, or a message containing incorrect data types"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3553",
            "name": "CVE-2009-3553",
            "des": "disconnect during a large data transfer causes incorrect reference count, leading to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2416",
            "name": "CVE-2009-2416",
            "des": "use-after-free found by fuzzing"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1837",
            "name": "CVE-2009-1837",
            "des": "Chain: race condition (CWE-362) from improper handling of a page transition in web client while an applet is loading (CWE-368) leads to use after free (CWE-416)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0749",
            "name": "CVE-2009-0749",
            "des": "realloc generates new buffer and pointer, but previous pointer is still retained, leading to use after free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-3328",
            "name": "CVE-2010-3328",
            "des": "Use-after-free in web browser, probably resultant from not initializing memory."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5038",
            "name": "CVE-2008-5038",
            "des": "use-after-free when one thread accessed memory that was freed by another thread"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-0077",
            "name": "CVE-2008-0077",
            "des": "assignment of malformed values to certain properties triggers use after free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4434",
            "name": "CVE-2006-4434",
            "des": "mail server does not properly handle a long header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2753",
            "name": "CVE-2010-2753",
            "des": "chain: integer overflow leads to use-after-free"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4997",
            "name": "CVE-2006-4997",
            "des": "freed pointer dereference"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Choose a language that provides automatic memory management."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple or complex data structures may lower the usefulness of this strategy."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Fuzzing",
            "des": [
              "Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2023-5217",
    "cve_name": "",
    "cve_description": "Heap buffer overflow in vp8 encoding in libvpx in Google Chrome prior to 117.0.5938.132 and libvpx 1.13.1 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High)",
    "cve_category": ["Overflow", "Memory Corruption"],
    "cve_published_at": "Published 2023-09-28 16:15:11",
    "cve_updated_at": "Updated 2023-11-17 18:56:02",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
      "exploitability_score": "2.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Debian » Debian Linux » Version: 10.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Debian » Debian Linux » Version: 11.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:11.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Debian » Debian Linux » Version: 12.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:12.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Edge » Version: 116.0.1938.98 ",
        "detail": "cpe:2.3:a:microsoft:edge:116.0.1938.98:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Edge » Version: 117.0.2045.47 ",
        "detail": "cpe:2.3:a:microsoft:edge:117.0.2045.47:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Edge Chromium » Version: 116.0.5845.229 ",
        "detail": "cpe:2.3:a:microsoft:edge_chromium:116.0.5845.229:*:*:*:*:*:*:*"
      },
      {
        "version": "Microsoft » Edge Chromium » Version: 117.0.5938.132 ",
        "detail": "cpe:2.3:a:microsoft:edge_chromium:117.0.5938.132:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Iphone Os Versions from including (>=) 17.0 and before (<) 17.0.3",
        "detail": "cpe:2.3:o:apple:iphone_os:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Iphone Os » Version: 16.7 ",
        "detail": "cpe:2.3:o:apple:iphone_os:16.7:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipad Os Versions from including (>=) 17.0 and before (<) 17.0.3",
        "detail": "cpe:2.3:o:apple:ipad_os:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipad Os » Version: 16.7 ",
        "detail": "cpe:2.3:o:apple:ipad_os:16.7:*:*:*:*:*:*:*"
      },
      {
        "version": "Mozilla » Firefox Versions before (<) 118.0.1",
        "detail": "cpe:2.3:a:mozilla:firefox:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Mozilla » Firefox » For Android Versions before (<) 118.1",
        "detail": "cpe:2.3:a:mozilla:firefox:*:*:*:*:*:android:*:*"
      },
      {
        "version": "Mozilla » Thunderbird Versions before (<) 115.3.1",
        "detail": "cpe:2.3:a:mozilla:thunderbird:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Mozilla » Firefox Esr Versions before (<) 115.3.1",
        "detail": "cpe:2.3:a:mozilla:firefox_esr:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Mozilla » Firefox Focus » For Android Versions before (<) 118.1",
        "detail": "cpe:2.3:a:mozilla:firefox_focus:*:*:*:*:*:android:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 37 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:37:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 38 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:38:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 39 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:39:*:*:*:*:*:*:*"
      },
      {
        "version": "Webmproject » Libvpx » Version: 1.13.1 ",
        "detail": "cpe:2.3:a:webmproject:libvpx:1.13.1:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-787",
        "cwe_name": "Out-of-bounds Write",
        "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "cwe_extended_description": "Typically, this can result in corruption of data, a crash, or code execution. The product may modify an index or perform pointer arithmetic that references a memory location that is outside of the boundaries of the buffer. A subsequent write operation then produces undefined or unexpected results.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21220",
            "name": "CVE-2021-21220",
            "des": "Chain: insufficient input validation (CWE-20) in browser allows heap corruption (CWE-787), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-28664",
            "name": "CVE-2021-28664",
            "des": "GPU kernel driver allows memory corruption because a user can obtain read/write access to read-only pages, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-17087",
            "name": "CVE-2020-17087",
            "des": "Chain: integer truncation (CWE-197) causes small buffer allocation (CWE-131) leading to out-of-bounds write (CWE-787) in kernel pool, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-1054",
            "name": "CVE-2020-1054",
            "des": "Out-of-bounds write in kernel-mode driver, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0041",
            "name": "CVE-2020-0041",
            "des": "Escape from browser sandbox using out-of-bounds write due to incorrect bounds check, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0968",
            "name": "CVE-2020-0968",
            "des": "Memory corruption in web browser scripting engine, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0022",
            "name": "CVE-2020-0022",
            "des": "chain: mobile phone Bluetooth implementation does not include offset when calculating packet length (CWE-682), leading to out-of-bounds write (CWE-787)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-1010006",
            "name": "CVE-2019-1010006",
            "des": "Chain: compiler optimization (CWE-733) removes or modifies code used to detect integer overflow (CWE-190), allowing out-of-bounds write (CWE-787)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1532",
            "name": "CVE-2009-1532",
            "des": "malformed inputs cause accesses of uninitialized or previously-deleted objects, leading to memory corruption"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0269",
            "name": "CVE-2009-0269",
            "des": "chain: -1 value from a function call was intended to indicate an error, but is used as an array index instead."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-2227",
            "name": "CVE-2002-2227",
            "des": "Unchecked length of SSLv2 challenge value leads to buffer underflow."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4580",
            "name": "CVE-2007-4580",
            "des": "Buffer underflow from a small size value with a large buffer (length parameter inconsistency, CWE-130)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4268",
            "name": "CVE-2007-4268",
            "des": "Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2550",
            "name": "CVE-2009-2550",
            "des": "Classic stack-based buffer overflow in media player using a long entry in a playlist"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2403",
            "name": "CVE-2009-2403",
            "des": "Heap-based buffer overflow in media player using a long entry in a playlist"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "For example, many languages that perform their own memory management, such as Java and Perl, are not subject to buffer overflows. Other languages, such as Ada and C#, typically provide overflow protection, but the protection can be disabled by the programmer.",
              "Be wary that a language's interface to native code may still be subject to overflows, even if the language itself is theoretically safe."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Examples include the Safe C String Library (SafeStr) by Messier and Viega [REF-57], and the Strsafe.h library from Microsoft [REF-56]. These libraries provide safer versions of overflow-prone string-handling functions.",
              "Note: This is not a complete solution, since many buffer overflows are not related to strings."
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include: the Microsoft Visual Studio /GS flag, Fedora/Red Hat FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice, which provide various mechanisms including canary-based detection and range/index checking.",
              "D3-SFCV (Stack Frame Canary Validation) from D3FEND [REF-1334] discusses canary-based detection in detail."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Consider adhering to the following rules when allocating and managing an application's memory:"
            ]
          },
          {
            "subheading": "Phases: Operation; Build and Compilation",
            "des": [
              "Run or compile the software using features or extensions that randomly arrange the positions of a program's executable and libraries in memory. Because this makes the addresses unpredictable, it can prevent an attacker from reliably jumping to exploitable code.",
              "Examples include Address Space Layout Randomization (ASLR) [REF-58] [REF-60] and Position-Independent Executables (PIE) [REF-64]. Imported modules may be similarly realigned if their default memory addresses conflict with other modules, in a process known as \"rebasing\" (for Windows) and \"prelinking\" (for Linux) [REF-1332] using randomly generated addresses. ASLR for libraries cannot be used in conjunction with prelink since it would require relocating the libraries at run-time, defeating the whole purpose of prelinking.",
              "For more information on these techniques see D3-SAOR (Segment Address Offset Randomization) from D3FEND [REF-1335].",
              "Note: These techniques do not provide a complete solution. For instance, exploits frequently use a bug that discloses memory addresses in order to maximize reliability of code execution [REF-1337]. It has also been shown that a side-channel attack can bypass ASLR [REF-1333]"
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Use a CPU and operating system that offers Data Execution Protection (using hardware NX or XD bits) or the equivalent techniques that simulate this feature in software, such as PaX [REF-60] [REF-61]. These techniques ensure that any instruction executed is exclusively at a memory address that is part of the code segment.",
              "For more information on these techniques see D3-PSEP (Process Segment Execution Prevention) from D3FEND [REF-1336].",
              "Note: This is not a complete solution, since buffer overflows could be used to overwrite nearby variables to modify the software's state in dangerous ways. In addition, it cannot be used in cases in which self-modifying code is required. Finally, an attack could still cause a denial of service, since the typical response is to exit the application."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Replace unbounded copy functions with analogous functions that support length arguments, such as strcpy with strncpy. Create these if they are not available.",
              "Note: This approach is still susceptible to calculation errors, including issues such as off-by-one errors (CWE-193) and incorrectly calculating buffer lengths (CWE-131)."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.",
              "Automated static analysis generally does not account for environmental considerations when reporting out-of-bounds memory operations. This can make it difficult for users to determine which warnings should be investigated first. For example, an analysis tool might report buffer overflows that originate from command line arguments in a program that is not expected to run with setuid or other special privileges.",
              "Effectiveness: High",
              "Note: Detection techniques for buffer-related errors are more mature than for most other weakness types."
            ]
          },
          {
            "subheading": "Automated Dynamic Analysis",
            "des": [
              "This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results."
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2018-14667",
    "cve_name": "",
    "cve_description": "The RichFaces Framework 3.X through 3.3.4 is vulnerable to Expression Language (EL) injection via the UserResource resource. A remote, unauthenticated attacker could exploit this to execute arbitrary code using a chain of java serialized objects via org.ajax4jsf.resource.UserResource$UriData.",
    "cve_category": ["Execute code"],
    "cve_published_at": "Published 2018-11-06 22:29:00",
    "cve_updated_at": "Updated 2020-08-28 17:59:25",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.5",
      "base_severity": "HIGH",
      "cvss_vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
      "exploitability_score": "10.0",
      "impact_score": "6.4",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Redhat » Enterprise Linux » Version: 6.0 ",
        "detail": "cpe:2.3:o:redhat:enterprise_linux:6.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Enterprise Linux » Version: 5.0 ",
        "detail": "cpe:2.3:o:redhat:enterprise_linux:5.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Redhat » Richfaces Versions from including (>=) 3.1.0 and up to, including, (<=) 3.3.4",
        "detail": "cpe:2.3:a:redhat:richfaces:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-94",
        "cwe_name": "Improper Control of Generation of Code ('Code Injection')",
        "cwe_description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "cwe_extended_description": "When a product allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the product. Such an alteration could lead to arbitrary code execution.\n\nInjection problems encompass a wide variety of issues -- all mitigated in very different ways. For this reason, the most effective way to discuss these weaknesses is to note the distinct features which classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed. The most classic instantiations of this category of weakness are SQL injection and format string vulnerabilities.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-2054",
            "name": "CVE-2022-2054",
            "des": "Python compiler uses eval() to execute malicious strings as Python code."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-22204",
            "name": "CVE-2021-22204",
            "des": "Chain: regex in EXIF processor code does not correctly determine where a string ends (CWE-625), enabling eval injection (CWE-95), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-8218",
            "name": "CVE-2020-8218",
            "des": "\"Code injection\" in VPN product, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5071",
            "name": "CVE-2008-5071",
            "des": "Eval injection in PHP program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1750",
            "name": "CVE-2002-1750",
            "des": "Eval injection in Perl program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-5305",
            "name": "CVE-2008-5305",
            "des": "Eval injection in Perl program using an ID that should only contain hyphens and numbers."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1752",
            "name": "CVE-2002-1752",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1753",
            "name": "CVE-2002-1753",
            "des": "Eval injection in Perl program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1527",
            "name": "CVE-2005-1527",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2837",
            "name": "CVE-2005-2837",
            "des": "Direct code injection into Perl eval function."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1921",
            "name": "CVE-2005-1921",
            "des": "MFV. code injection into PHP eval statement using nested constructs that should not be nested."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2498",
            "name": "CVE-2005-2498",
            "des": "MFV. code injection into PHP eval statement using nested constructs that should not be nested."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3302",
            "name": "CVE-2005-3302",
            "des": "Code injection into Python eval statement from a field in a formatted file."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-1253",
            "name": "CVE-2007-1253",
            "des": "Eval injection in Python program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1471",
            "name": "CVE-2001-1471",
            "des": "chain: Resultant eval injection. An invalid value prevents initialization of variables, which can be modified by attacker and later injected into PHP eval statement."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0495",
            "name": "CVE-2002-0495",
            "des": "Perl code directly injected into CGI library file from parameters to another CGI program."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1876",
            "name": "CVE-2005-1876",
            "des": "Direct PHP code injection into supporting template file."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1894",
            "name": "CVE-2005-1894",
            "des": "Direct code injection into PHP script that can be accessed by attacker."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0395",
            "name": "CVE-2003-0395",
            "des": "PHP code from User-Agent HTTP header directly inserted into log file implemented as PHP script."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Refactor your program so that you do not have to dynamically generate code."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Run your code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which code can be executed by your product.",
              "Examples include the Unix chroot jail and AppArmor. In general, managed code may provide some protection.",
              "This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be subject to compromise.",
              "Be careful to avoid CWE-243 and other weaknesses related to jails."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "To reduce the likelihood of code injection, use stringent allowlists that limit which constructs are allowed. If you are dynamically constructing code that invokes a function, then verifying that the input is alphanumeric might be insufficient. An attacker might still be able to reference a dangerous function that you did not intend to allow, such as system(), exec(), or exit()."
            ]
          },
          {
            "subheading": "Phase: Testing",
            "des": [
              "Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible."
            ]
          },
          {
            "subheading": "Phase: Testing",
            "des": [
              "Use dynamic tools and techniques that interact with the product using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The product's operation may slow down, but it should not become unstable, crash, or generate incorrect results."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run the code in an environment that performs automatic taint propagation and prevents any command execution that uses tainted variables, such as Perl's \"-T\" switch. This will force the program to perform validation steps that remove the taint, although you must be careful to correctly validate your inputs so that you do not accidentally mark dangerous inputs as untainted (see CWE-183 and CWE-184)."
            ]
          },
          {
            "subheading": "Phase: Operation",
            "des": [
              "Run the code in an environment that performs automatic taint propagation and prevents any command execution that uses tainted variables, such as Perl's \"-T\" switch. This will force the program to perform validation steps that remove the taint, although you must be careful to correctly validate your inputs so that you do not accidentally mark dangerous inputs as untainted (see CWE-183 and CWE-184)."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-242",
            "capec_name": "Code Injection",
            "capec_description": "An adversary exploits a weakness in input validation on the target to inject new code into that which is currently executing. This differs from code inclusion in that code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Utilize strict type, character, and encoding enforcement",
              "Ensure all input content that is delivered to client is sanitized against an acceptable content specification.",
              "Perform input validation for all content.",
              "Enforce regular patching of software."
            ],
            "related_cwe": ["CWE-94"]
          },
          {
            "capec_id": "CAPEC-35",
            "capec_name": "Leverage Executable Code in Non-Executable Files",
            "capec_description": "An attack of this type exploits a system's trust in configuration and resource files. When the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Design: Enforce principle of least privilege",
              "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands.",
              "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables.",
              "Implementation: Implement host integrity monitoring to detect any unwanted altering of configuration files.",
              "Implementation: Ensure that files that are not required to execute, such as configuration files, are not over-privileged, i.e. not allowed to execute."
            ],
            "related_cwe": [
              "CWE-94",
              "CWE-96",
              "CWE-95",
              "CWE-97",
              "CWE-272",
              "CWE-59",
              "CWE-282",
              "CWE-270"
            ]
          },
          {
            "capec_id": "CAPEC-77",
            "capec_name": "Manipulating User-Controlled Variables",
            "capec_description": "This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An adversary can override variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the adversary can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Do not allow override of global variables and do Not Trust Global Variables.\n\nIf the register_globals option is enabled, PHP will create global variables for each GET, POST, and cookie variable included in the HTTP request. This means that a malicious user may be able to set variables unexpectedly. For instance make sure that the server setting for PHP does not expose global variables.",
              "A software system should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary.",
              "Separate the presentation layer and the business logic layer. Variables at the business logic layer should not be exposed at the presentation layer. This is to prevent computation of business logic from user controlled input data.",
              "Use encapsulation when declaring your variables. This is to lower the exposure of your variables.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should be rejected by the program."
            ],
            "related_cwe": [
              "CWE-15",
              "CWE-94",
              "CWE-96",
              "CWE-285",
              "CWE-302",
              "CWE-473",
              "CWE-1321"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-41993",
    "cve_name": "",
    "cve_description": "The issue was addressed with improved checks. This issue is fixed in macOS Sonoma 14, Safari 17, iOS 16.7 and iPadOS 16.7. Processing web content may lead to arbitrary code execution. Apple is aware of a report that this issue may have been actively exploited against versions of iOS before iOS 16.7.",
    "cve_category": [],
    "cve_published_at": "Published 2023-09-21 19:15:12",
    "cve_updated_at": "Updated 2024-01-10 22:15:50",
    "cve_required_action": "",
    "cvss": {
      "base_score": "9.8",
      "base_severity": "CRITICAL",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "3.9",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Debian » Debian Linux » Version: 11.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:11.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Debian » Debian Linux » Version: 12.0 ",
        "detail": "cpe:2.3:o:debian:debian_linux:12.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Safari Versions before (<) 17.0",
        "detail": "cpe:2.3:a:apple:safari:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Iphone Os Versions before (<) 16.7",
        "detail": "cpe:2.3:o:apple:iphone_os:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Iphone Os » Version: 17.0 ",
        "detail": "cpe:2.3:o:apple:iphone_os:17.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Macos Versions before (<) 14.0",
        "detail": "cpe:2.3:o:apple:macos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados Versions before (<) 16.7",
        "detail": "cpe:2.3:o:apple:ipados:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados » Version: 17.0 ",
        "detail": "cpe:2.3:o:apple:ipados:17.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 37 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:37:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 38 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:38:*:*:*:*:*:*:*"
      },
      {
        "version": "Fedoraproject » Fedora » Version: 39 ",
        "detail": "cpe:2.3:o:fedoraproject:fedora:39:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-754",
        "cwe_name": "Improper Check for Unusual or Exceptional Conditions",
        "cwe_description": "The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.",
        "cwe_extended_description": "The programmer may assume that certain events or conditions will never occur or do not need to be worried about, such as low memory conditions, lack of access to resources due to restrictive permissions, or misbehaving clients or components. However, attackers may intentionally trigger these unusual conditions, thus violating the programmer's assumptions, possibly introducing instability, incorrect behavior, or a vulnerability.\n\nNote that this entry is not exclusively about the use of exceptions and exception handling, which are mechanisms for both checking and handling unusual or unexpected conditions.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-3798",
            "name": "CVE-2007-3798",
            "des": "Unchecked return value leads to resultant integer overflow and code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4447",
            "name": "CVE-2006-4447",
            "des": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-2916",
            "name": "CVE-2006-2916",
            "des": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Choose languages with features such as exception handling that force the programmer to anticipate unusual conditions that may generate exceptions. Custom exceptions may need to be developed to handle unusual business-logic conditions. Be careful not to pass sensitive exceptions back to the user (CWE-209, CWE-248)."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Check the results of all functions that return a value and verify that the value is expected.",
              "Note: Checking the return value of the function will typically be sufficient, however beware of race conditions (CWE-362) in a concurrent environment."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "If using exception handling, catch and throw specific exceptions instead of overly-general exceptions (CWE-396, CWE-397). Catch and handle exceptions as locally as possible so that exceptions do not propagate too far up the call stack (CWE-705). Avoid unchecked or uncaught exceptions where feasible (CWE-248).",
              "Note: Using specific exceptions, and ensuring that exceptions are checked, helps programmers to anticipate and appropriately handle many unusual events that could occur."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success.",
              "If errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files.",
              "Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.",
              "Exposing additional information to a potential attacker in the context of an exceptional condition can help the attacker determine what attack vectors are most likely to succeed beyond DoS."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "Note: Performing extensive input validation does not help with handling unusual conditions, but it will minimize their occurrences and will make it more difficult for attackers to trigger them."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use system limits, which should help to prevent resource exhaustion. However, the product should still handle low resource conditions since they may still occur."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis may be useful for detecting unusual conditions involving system resources or common programming idioms, but not for violations of business rules.",
              "Effectiveness: Moderate"
            ]
          },
          {
            "subheading": "Manual Dynamic Analysis",
            "des": [
              "Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself."
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2023-41992",
    "cve_name": "",
    "cve_description": "The issue was addressed with improved checks. This issue is fixed in macOS Monterey 12.7, iOS 16.7 and iPadOS 16.7, macOS Ventura 13.6. A local attacker may be able to elevate their privileges. Apple is aware of a report that this issue may have been actively exploited against versions of iOS before iOS 16.7.",
    "cve_category": [],
    "cve_published_at": "Published 2023-09-21 19:15:12",
    "cve_updated_at": "Updated 2024-01-10 22:15:49",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Apple » Iphone Os Versions before (<) 16.7",
        "detail": "cpe:2.3:o:apple:iphone_os:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Iphone Os » Version: 17.0 ",
        "detail": "cpe:2.3:o:apple:iphone_os:17.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Macos Versions from including (>=) 12.0.0 and before (<) 12.7",
        "detail": "cpe:2.3:o:apple:macos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Macos Versions from including (>=) 13.0 and before (<) 13.6",
        "detail": "cpe:2.3:o:apple:macos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados Versions before (<) 16.7",
        "detail": "cpe:2.3:o:apple:ipados:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados » Version: 17.0 ",
        "detail": "cpe:2.3:o:apple:ipados:17.0:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-754",
        "cwe_name": "Improper Check for Unusual or Exceptional Conditions",
        "cwe_description": "The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.",
        "cwe_extended_description": "The programmer may assume that certain events or conditions will never occur or do not need to be worried about, such as low memory conditions, lack of access to resources due to restrictive permissions, or misbehaving clients or components. However, attackers may intentionally trigger these unusual conditions, thus violating the programmer's assumptions, possibly introducing instability, incorrect behavior, or a vulnerability.\n\nNote that this entry is not exclusively about the use of exceptions and exception handling, which are mechanisms for both checking and handling unusual or unexpected conditions.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-3798",
            "name": "CVE-2007-3798",
            "des": "Unchecked return value leads to resultant integer overflow and code execution."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-4447",
            "name": "CVE-2006-4447",
            "des": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-2916",
            "name": "CVE-2006-2916",
            "des": "Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Requirements",
            "des": [
              "Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
              "Choose languages with features such as exception handling that force the programmer to anticipate unusual conditions that may generate exceptions. Custom exceptions may need to be developed to handle unusual business-logic conditions. Be careful not to pass sensitive exceptions back to the user (CWE-209, CWE-248)."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Check the results of all functions that return a value and verify that the value is expected.",
              "Note: Checking the return value of the function will typically be sufficient, however beware of race conditions (CWE-362) in a concurrent environment."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "If using exception handling, catch and throw specific exceptions instead of overly-general exceptions (CWE-396, CWE-397). Catch and handle exceptions as locally as possible so that exceptions do not propagate too far up the call stack (CWE-705). Avoid unchecked or uncaught exceptions where feasible (CWE-248).",
              "Note: Using specific exceptions, and ensuring that exceptions are checked, helps programmers to anticipate and appropriately handle many unusual events that could occur."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success.",
              "If errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files.",
              "Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.",
              "Exposing additional information to a potential attacker in the context of an exceptional condition can help the attacker determine what attack vectors are most likely to succeed beyond DoS."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.",
              "When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
              "Do not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",
              "Note: Performing extensive input validation does not help with handling unusual conditions, but it will minimize their occurrences and will make it more difficult for attackers to trigger them."
            ]
          },
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "If the program must fail, ensure that it fails gracefully (fails closed). There may be a temptation to simply let the program fail poorly in cases such as low memory conditions, but an attacker may be able to assert control before the software has fully exited. Alternately, an uncontrolled failure could cause cascading problems with other downstream components; for example, the program could send a signal to a downstream process so the process immediately knows that a problem has occurred and has a better chance of recovery."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use system limits, which should help to prevent resource exhaustion. However, the product should still handle low resource conditions since they may still occur."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis may be useful for detecting unusual conditions involving system resources or common programming idioms, but not for violations of business rules.",
              "Effectiveness: Moderate"
            ]
          },
          {
            "subheading": "Manual Dynamic Analysis",
            "des": [
              "Identify error conditions that are not likely to occur during normal usage and trigger them. For example, run the program under low memory conditions, run with insufficient privileges or permissions, interrupt a transaction before it is completed, or disable connectivity to basic network services such as DNS. Monitor the software for any unexpected behavior. If you trigger an unhandled exception or similar error that was discovered and handled by the application's environment, it may still indicate unexpected conditions that were not handled by the application itself."
            ]
          }
        ],
        "capec": []
      }
    ]
  },
  {
    "cve_id": "CVE-2023-41991",
    "cve_name": "",
    "cve_description": "A certificate validation issue was addressed. This issue is fixed in macOS Ventura 13.6, iOS 16.7 and iPadOS 16.7. A malicious app may be able to bypass signature validation. Apple is aware of a report that this issue may have been actively exploited against versions of iOS before iOS 16.7.",
    "cve_category": [],
    "cve_published_at": "Published 2023-09-21 19:15:11",
    "cve_updated_at": "Updated 2024-01-10 22:15:49",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.5",
      "base_severity": "MEDIUM",
      "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
      "exploitability_score": "1.8",
      "impact_score": "3.6",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Apple » Iphone Os Versions before (<) 16.7",
        "detail": "cpe:2.3:o:apple:iphone_os:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Iphone Os » Version: 17.0 ",
        "detail": "cpe:2.3:o:apple:iphone_os:17.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Macos Versions from including (>=) 13.0 and before (<) 13.6",
        "detail": "cpe:2.3:o:apple:macos:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados Versions before (<) 16.7",
        "detail": "cpe:2.3:o:apple:ipados:*:*:*:*:*:*:*:*"
      },
      {
        "version": "Apple » Ipados » Version: 17.0 ",
        "detail": "cpe:2.3:o:apple:ipados:17.0:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-295",
        "cwe_name": "Improper Certificate Validation",
        "cwe_description": "The product does not validate, or incorrectly validates, a certificate.",
        "cwe_extended_description": "When a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. The product might connect to a malicious host while believing it is a trusted host, or the product might be deceived into accepting spoofed data that appears to originate from a trusted host.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2019-12496",
            "name": "CVE-2019-12496",
            "des": "A Go framework for robotics, drones, and IoT devices skips verification of root CA certificates by default."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2014-1266",
            "name": "CVE-2014-1266",
            "des": "chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE-295 (Improper Certificate Validation) -> CWE-393 (Return of Wrong Status Code) -> CWE-300 (Channel Accessible by Non-Endpoint)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-22909",
            "name": "CVE-2021-22909",
            "des": "Chain: router's firmware update procedure uses curl with \"-k\" (insecure) option that disables certificate validation (CWE-295), allowing adversary-in-the-middle (AITM) compromise with a malicious firmware image (CWE-494)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4989",
            "name": "CVE-2008-4989",
            "des": "Verification function trusts certificate chains in which the last certificate is self-signed."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-5821",
            "name": "CVE-2012-5821",
            "des": "Web browser uses a TLS-related function incorrectly, preventing it from verifying that a server's certificate is signed by a trusted certification authority (CA)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3046",
            "name": "CVE-2009-3046",
            "des": "Web browser does not check if any intermediate certificates are revoked."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2011-0199",
            "name": "CVE-2011-0199",
            "des": "Operating system does not check Certificate Revocation List (CRL) in some cases, allowing spoofing using a revoked certificate."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-5810",
            "name": "CVE-2012-5810",
            "des": "Mobile banking application does not verify hostname, leading to financial loss."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-3446",
            "name": "CVE-2012-3446",
            "des": "Cloud-support library written in Python uses incorrect regular expression when matching hostname."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2408",
            "name": "CVE-2009-2408",
            "des": "Web browser does not correctly handle '\\0' character (NUL) in Common Name, allowing spoofing of https sites."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-2993",
            "name": "CVE-2012-2993",
            "des": "Smartphone device does not verify hostname, allowing spoofing of mail services."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-5822",
            "name": "CVE-2012-5822",
            "des": "Application uses third-party library that does not validate hostname."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-5819",
            "name": "CVE-2012-5819",
            "des": "Cloud storage management application does not validate hostname."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-5817",
            "name": "CVE-2012-5817",
            "des": "Java library uses JSSE SSLSocket and SSLEngine classes, which do not verify the hostname."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1378",
            "name": "CVE-2010-1378",
            "des": "chain: incorrect calculation allows attackers to bypass certificate checks."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3170",
            "name": "CVE-2005-3170",
            "des": "LDAP client accepts certificates even if they are not from a trusted CA."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-0265",
            "name": "CVE-2009-0265",
            "des": "chain: DNS server does not correctly check return value from the OpenSSL EVP_VerifyFinal function allows bypass of validation of the certificate chain."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-1229",
            "name": "CVE-2003-1229",
            "des": "chain: product checks if client is trusted when it intended to check if the server is trusted, allowing validation of signed code."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0862",
            "name": "CVE-2002-0862",
            "des": "Cryptographic API, as used in web browsers, mail clients, and other software, does not properly validate Basic Constraints."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1358",
            "name": "CVE-2009-1358",
            "des": "chain: OS package manager does not check properly check the return value, allowing bypass using a revoked certificate."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phases: Architecture and Design; Implementation",
            "des": [
              "Certificates should be carefully managed and checked to assure that data are encrypted with the intended owner's public key."
            ]
          },
          {
            "subheading": "Phase: Implementation",
            "des": [
              "If certificate pinning is being used, ensure that all relevant properties of the certificate are fully validated before the certificate is pinned, including the hostname."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-459",
            "capec_name": "Creating a Rogue Certification Authority Certificate",
            "capec_description": "An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate certificate signing requests (CSR) that contain collision blocks in their \"to be signed\" parts. The adversary submits one CSR to be signed by a trusted certificate authority then uses the signed blob to make a second certificate appear signed by said certificate authority. Due to the hash collision, both certificates, though different, hash to the same value and so the signed blob works just as well in the second certificate. The net effect is that the adversary's second X.509 certificate, which the Certification Authority has never seen, is now signed and validated by that Certification Authority.",
            "capec_extended_description": "Alternatively, the second certificate could be a signing certificate. Thus the adversary is able to start their own Certification Authority that is anchored in its root of trust in the legitimate Certification Authority that has signed the attacker's first X.509 certificate. If the original Certificate Authority was accepted by default by browsers, so will the Certificate Authority set up by the adversary and any certificates that it signs. As a result, the adversary is able to generate any SSL certificates to impersonate any web server, and the user's browser will not issue any warning to the victim. This can be used to compromise HTTPS communications and other types of systems where PKI and X.509 certificates may be used (e.g., VPN, IPSec).",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Very High",
            "mitigations": [
              "Certification Authorities need to stop using deprecated or cryptographically insecure hashing algorithms to hash the certificates that they are about to sign. Instead they should be using stronger hashing functions such as SHA-256 or SHA-512."
            ],
            "related_cwe": ["CWE-327", "CWE-295", "CWE-290"]
          },
          {
            "capec_id": "CAPEC-475",
            "capec_name": "Signature Spoofing by Improper Validation",
            "capec_description": "An adversary exploits a cryptographic weakness in the signature verification algorithm implementation to generate a valid signature without knowing the key.",
            "capec_extended_description": "Signature verification algorithms are generally used to determine whether a certificate or piece of code (e.g. executable, binary, etc.) possesses a valid signature and can be trusted.\n\nIf the leveraged algorithm confirms that a valid signature exists, it establishes a foundation of trust that is further conveyed to the end-user when interacting with a website or application. However, if the signature verification algorithm improperly validates the signature, either by not validating the signature at all or by failing to fully validate the signature, it could result in an adversary generating a spoofed signature and being classified as a legitimate entity. Successfully exploiting such a weakness could further allow the adversary to reroute users to malicious sites, steals files, activates microphones, records keystrokes and passwords, wipes disks, installs malware, and more.",
            "likelihood_of_attack": "Low",
            "typical_severity": "High",
            "mitigations": [
              "Use programs and products that contain cryptographic elements that have been thoroughly tested for flaws in the signature verification routines."
            ],
            "related_cwe": ["CWE-347", "CWE-327", "CWE-295"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2023-41179",
    "cve_name": "",
    "cve_description": "A vulnerability in the 3rd party AV uninstaller module contained in Trend Micro Apex One (on-prem and SaaS), Worry-Free Business Security and Worry-Free Business Security Services could allow an attacker to manipulate the module to execute arbitrary commands on an affected installation.\n\nNote that an attacker must first obtain administrative console access on the target system in order to exploit this vulnerability.",
    "cve_category": [],
    "cve_published_at": "Published 2023-09-19 14:15:21",
    "cve_updated_at": "Updated 2023-09-22 15:08:32",
    "cve_required_action": "",
    "cvss": {
      "base_score": "7.2",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "1.2",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Trendmicro » Apex One » Version: 2019 ",
        "detail": "cpe:2.3:a:trendmicro:apex_one:2019:*:*:*:*:*:*:*"
      },
      {
        "version": "Trendmicro » Apex One » Version: 2019 Saas Edition ",
        "detail": "cpe:2.3:a:trendmicro:apex_one:2019:*:*:*:saas:*:*:*"
      },
      {
        "version": "Trendmicro » Worry-free Business Security » Version: 10.0 Update SP1 ",
        "detail": "cpe:2.3:a:trendmicro:worry-free_business_security:10.0:sp1:*:*:*:*:*:*"
      },
      {
        "version": "Trendmicro » Worry-free Business Security Services » Version: N/A Saas Edition ",
        "detail": "cpe:2.3:a:trendmicro:worry-free_business_security_services:-:*:*:*:saas:*:*:*"
      }
    ],
    "cwe": []
  },
  {
    "cve_id": "CVE-2023-28434",
    "cve_name": "",
    "cve_description": "Minio is a Multi-Cloud Object Storage framework. Prior to RELEASE.2023-03-20T20-16-18Z, an attacker can use crafted requests to bypass metadata bucket name checking and put an object into any bucket while processing `PostPolicyBucket`. To carry out this attack, the attacker requires credentials with `arn:aws:s3:::*` permission, as well as enabled Console API access. This issue has been patched in RELEASE.2023-03-20T20-16-18Z. As a workaround, enable browser API access and turn off `MINIO_BROWSER=off`.",
    "cve_category": [],
    "cve_published_at": "Published 2023-03-22 21:15:18",
    "cve_updated_at": "Updated 2023-03-28 16:24:56",
    "cve_required_action": "",
    "cvss": {
      "base_score": "8.8",
      "base_severity": "HIGH",
      "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "exploitability_score": "2.8",
      "impact_score": "5.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Minio » Minio Versions before (<) 2023-03-20t20-16-18z",
        "detail": "cpe:2.3:a:minio:minio:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-269",
        "cwe_name": "Improper Privilege Management",
        "cwe_description": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1555",
            "name": "CVE-2001-1555",
            "des": "Terminal privileges are not reset when a user logs out."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1514",
            "name": "CVE-2001-1514",
            "des": "Does not properly pass security context to child processes in certain cases, allows privilege escalation."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-0128",
            "name": "CVE-2001-0128",
            "des": "Does not properly compute roles."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-1999-1193",
            "name": "CVE-1999-1193",
            "des": "untrusted user placed in unix \"wheel\" group"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2741",
            "name": "CVE-2005-2741",
            "des": "Product allows users to grant themselves certain rights that can be used to escalate privileges."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-2496",
            "name": "CVE-2005-2496",
            "des": "Product uses group ID of a user instead of the group, causing it to run with different privileges. This is resultant from some other unknown issue."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0274",
            "name": "CVE-2004-0274",
            "des": "Product mistakenly assigns a particular status to an entity, leading to increased privileges."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-4217",
            "name": "CVE-2007-4217",
            "des": "FTP client program on a certain OS runs with setuid privileges and has a buffer overflow. Most clients do not need extra privileges, so an overflow is not a vulnerability for those clients."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-5159",
            "name": "CVE-2007-5159",
            "des": "OS incorrectly installs a program with setuid privileges, allowing users to gain privileges."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4638",
            "name": "CVE-2008-4638",
            "des": "Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-3931",
            "name": "CVE-2007-3931",
            "des": "Installation script installs some programs as setuid when they shouldn't be."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1981",
            "name": "CVE-2002-1981",
            "des": "Roles have access to dangerous procedures (Accessible entities)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1671",
            "name": "CVE-2002-1671",
            "des": "Untrusted object/method gets access to clipboard (Accessible entities)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2000-0315",
            "name": "CVE-2000-0315",
            "des": "Traceroute program allows unprivileged users to modify source address of packet (Accessible entities)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2000-0506",
            "name": "CVE-2000-0506",
            "des": "User with capability can prevent setuid program from dropping privileges (Unsafe privileged actions)."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phases: Architecture and Design; Operation",
            "des": [
              "Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Follow the principle of least privilege when assigning access rights to entities in a software system."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-122",
            "capec_name": "Privilege Abuse",
            "capec_description": "An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources.",
            "capec_extended_description": "If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.\n\nThis attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.",
            "likelihood_of_attack": "High",
            "typical_severity": "Medium",
            "mitigations": [
              "Configure account privileges such privileged/administrator functionality is not exposed to non-privileged/lower accounts."
            ],
            "related_cwe": ["CWE-269", "CWE-732", "CWE-1317"]
          },
          {
            "capec_id": "CAPEC-233",
            "capec_name": "Privilege Escalation",
            "capec_description": "An adversary exploits a weakness enabling them to elevate their privilege and perform an action that they are not supposed to be authorized to perform.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "",
            "mitigations": [],
            "related_cwe": ["CWE-269", "CWE-1264", "CWE-1311"]
          },
          {
            "capec_id": "CAPEC-58",
            "capec_name": "Restful Privilege Elevation",
            "capec_description": "An adversary identifies a Rest HTTP (Get, Put, Delete) style permission method allowing them to perform various malicious actions upon server data due to lack of access control mechanisms implemented within the application service accepting HTTP messages.",
            "capec_extended_description": "Rest uses standard HTTP (Get, Put, Delete) style permissions methods, but these are not necessarily correlated generally with back end programs. Strict interpretation of HTTP get methods means that these HTTP Get services should not be used to delete information on the server, but there is no access control mechanism to back up this logic. This means that unless the services are properly ACL'd and the application's service implementation are following these guidelines then an HTTP request can easily execute a delete or update on the server side. The attacker identifies a HTTP Get URL such as http://victimsite/updateOrder, which calls out to a program to update orders on a database or other resource. The URL is not idempotent so the request can be submitted multiple times by the attacker, additionally, the attacker may be able to exploit the URL published as a Get method that actually performs updates (instead of merely retrieving data). This may result in malicious or inadvertent altering of data on the server.",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Enforce principle of least privilege",
              "Implementation: Ensure that HTTP Get methods only retrieve state and do not alter state on the server side",
              "Implementation: Ensure that HTTP methods have proper ACLs based on what the functionality they expose"
            ],
            "related_cwe": ["CWE-267", "CWE-269"]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2022-31463",
    "cve_name": "",
    "cve_description": "Owl Labs Meeting Owl 5.2.0.15 does not require a password for Bluetooth commands, because only client-side authentication is used.",
    "cve_category": ["Bypass", "Gain privilege"],
    "cve_published_at": "Published 2022-06-02 22:15:08",
    "cve_updated_at": "Updated 2022-07-08 16:46:39",
    "cve_required_action": "",
    "cvss": {
      "base_score": "4.3",
      "base_severity": "MEDIUM",
      "cvss_vector": "AV:A/AC:M/Au:N/C:P/I:P/A:N",
      "exploitability_score": "5.5",
      "impact_score": "4.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Owllabs » Meeting Owl Pro Firmware Versions before (<) 5.4.2.3",
        "detail": "cpe:2.3:o:owllabs:meeting_owl_pro_firmware:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-287",
        "cwe_name": "Improper Authentication",
        "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-35248",
            "name": "CVE-2022-35248",
            "des": "Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-36436",
            "name": "CVE-2022-36436",
            "des": "Python-based authentication proxy does not enforce password authentication during the initial handshake, allowing the client to bypass authentication by specifying a 'None' authentication type."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30034",
            "name": "CVE-2022-30034",
            "des": "Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29951",
            "name": "CVE-2022-29951",
            "des": "TCP-based protocol in Programmable Logic Controller (PLC) has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29952",
            "name": "CVE-2022-29952",
            "des": "Condition Monitor uses a protocol that does not require authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30313",
            "name": "CVE-2022-30313",
            "des": "Safety Instrumented System uses proprietary TCP protocols with no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30317",
            "name": "CVE-2022-30317",
            "des": "Distributed Control System (DCS) uses a protocol that has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-33139",
            "name": "CVE-2022-33139",
            "des": "SCADA system only uses client-side authentication, allowing adversaries to impersonate other users."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-3116",
            "name": "CVE-2021-3116",
            "des": "Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21972",
            "name": "CVE-2021-21972",
            "des": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-37415",
            "name": "CVE-2021-37415",
            "des": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-13927",
            "name": "CVE-2020-13927",
            "des": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-35395",
            "name": "CVE-2021-35395",
            "des": "Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-34523",
            "name": "CVE-2021-34523",
            "des": "Mail server does not properly check an access token before executing a Powershell command, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-12812",
            "name": "CVE-2020-12812",
            "des": "Chain: user is not prompted for a second authentication factor (CWE-287) when changing the case of their username (CWE-178), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-10148",
            "name": "CVE-2020-10148",
            "des": "Authentication bypass by appending specific parameters and values to a URI, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0688",
            "name": "CVE-2020-0688",
            "des": "Mail server does not generate a unique key during installation, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2017-14623",
            "name": "CVE-2017-14623",
            "des": "LDAP Go package allows authentication bypass using an empty password, causing an unauthenticated LDAP bind"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3421",
            "name": "CVE-2009-3421",
            "des": "login script for guestbook allows bypassing authentication by setting a \"login_ok\" parameter to 1."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2382",
            "name": "CVE-2009-2382",
            "des": "admin script allows authentication bypass by setting a cookie value to \"LOGGEDIN\"."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1048",
            "name": "CVE-2009-1048",
            "des": "VOIP product allows authentication bypass using 127.0.0.1 in the Host header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2213",
            "name": "CVE-2009-2213",
            "des": "product uses default \"Allow\" action, instead of default deny, leading to authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2168",
            "name": "CVE-2009-2168",
            "des": "chain: redirect without exit (CWE-698) leads to resultant authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3107",
            "name": "CVE-2009-3107",
            "des": "product does not restrict access to a listening port for a critical service, allowing authentication to be bypassed."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1596",
            "name": "CVE-2009-1596",
            "des": "product does not properly implement a security-related configuration setting, allowing authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2422",
            "name": "CVE-2009-2422",
            "des": "authentication routine returns \"nil\" instead of \"false\" in some situations, allowing authentication bypass using an invalid username."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3232",
            "name": "CVE-2009-3232",
            "des": "authentication update script does not properly handle when admin does not select any authentication modules, allowing authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3231",
            "name": "CVE-2009-3231",
            "des": "use of LDAP authentication with anonymous binds causes empty password to result in successful authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3435",
            "name": "CVE-2005-3435",
            "des": "product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0408",
            "name": "CVE-2005-0408",
            "des": "chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use an authentication framework or library such as the OWASP ESAPI Authentication feature."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis is useful for detecting certain types of authentication. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authentication libraries.",
              "Generally, automated static analysis tools have difficulty detecting custom authentication schemes. In addition, the software's design may include some functionality that is accessible to any user and does not require an established identity; an automated technique that detects the absence of authentication may report false positives.",
              "Effectiveness: Limited"
            ]
          },
          {
            "subheading": "Manual Static Analysis",
            "des": [
              "This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.",
              "Manual static analysis is useful for evaluating the correctness of custom authentication mechanisms.",
              "Effectiveness: High",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-114",
            "capec_name": "Authentication Abuse",
            "capec_description": "An attacker obtains unauthorized access to an application, service or device either through knowledge of the inherent weaknesses of an authentication mechanism, or by exploiting a flaw in the authentication scheme's implementation. In such an attack an authentication mechanism is functioning but a carefully controlled sequence of events causes the mechanism to grant access to the attacker.",
            "capec_extended_description": "This attack may exploit assumptions made by the target's authentication procedures, such as assumptions regarding trust relationships or assumptions regarding the generation of secret values. This attack differs from Authentication Bypass attacks in that Authentication Abuse allows the attacker to be certified as a valid user through illegitimate means, while Authentication Bypass allows the user to access protected material without ever being certified as an authenticated user. This attack does not rely on prior sessions established by successfully authenticating users, as relied upon for the \"Exploitation of Session Variables, Resource IDs and other Trusted Credentials\" attack patterns.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287", "CWE-1244"]
          },
          {
            "capec_id": "CAPEC-115",
            "capec_name": "Authentication Bypass",
            "capec_description": "An attacker gains access to application, service, or device with the privileges of an authorized or privileged user by evading or circumventing an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place.",
            "capec_extended_description": "This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to get to secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-151",
            "capec_name": "Identity Spoofing",
            "capec_description": "Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials.",
            "capec_extended_description": "Alternatively, an adversary may intercept a message from a legitimate sender and attempt to make it look like the message comes from them without changing its content. The latter form of this attack can be used to hijack credentials from legitimate users. Identity Spoofing attacks need not be limited to transmitted messages - any resource that is associated with an identity (for example, a file with a signature) can be the target of an attack where the adversary attempts to change the apparent identity. This attack differs from Content Spoofing attacks where the adversary does not wish to change the apparent identity of the message but instead wishes to change what the message says. In an Identity Spoofing attack, the adversary is attempting to change the identity of the content.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Medium",
            "mitigations": [
              "Employ robust authentication processes (e.g., multi-factor authentication)."
            ],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-194",
            "capec_name": "Fake the Source of Data",
            "capec_description": "An adversary takes advantage of improper authentication to provide data or services under a falsified identity. The purpose of using the falsified identity may be to prevent traceability of the provided data or to assume the rights granted to another individual. One of the simplest forms of this attack would be the creation of an email message with a modified \"From\" field in order to appear that the message was sent from someone other than the actual sender. The root of the attack (in this case the email system) fails to properly authenticate the source and this results in the reader incorrectly performing the instructed action. Results of the attack vary depending on the details of the attack, but common results include privilege escalation, obfuscation of other attacks, and data corruption/manipulation.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-22",
            "capec_name": "Exploiting Trust in Client",
            "capec_description": "An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system.",
              "Design: Do not rely on client validation or encoding for security purposes.",
              "Design: Utilize digital signatures to increase authentication assurance.",
              "Design: Utilize two factor authentication to increase authentication assurance.",
              "Implementation: Perform input validation for all remote content."
            ],
            "related_cwe": [
              "CWE-290",
              "CWE-287",
              "CWE-20",
              "CWE-200",
              "CWE-693"
            ]
          },
          {
            "capec_id": "CAPEC-57",
            "capec_name": "Utilizing REST's Trust in the System Resource to Obtain Sensitive Data",
            "capec_description": "This attack utilizes a REST(REpresentational State Transfer)-style applications' trust in the system resources and environment to obtain sensitive data once SSL is terminated.",
            "capec_extended_description": "Rest applications premise is that they leverage existing infrastructure to deliver web services functionality. An example of this is a Rest application that uses HTTP Get methods and receives a HTTP response with an XML document. These Rest style web services are deployed on existing infrastructure such as Apache and IIS web servers with no SOAP stack required.\n\nUnfortunately from a security standpoint, there frequently is no interoperable identity security mechanism deployed, so Rest developers often fall back to SSL to deliver security. In large data centers, SSL is typically terminated at the edge of the network - at the firewall, load balancer, or router. Once the SSL is terminated the HTTP request is in the clear (unless developers have hashed or encrypted the values, but this is rare). The adversary can utilize a sniffer such as Wireshark to snapshot the credentials, such as username and password that are passed in the clear once SSL is terminated. Once the adversary gathers these credentials, they can submit requests to the web service provider just as authorized user do. There is not typically an authentication on the client side, beyond what is passed in the request itself so once this is compromised, then this is generally sufficient to compromise the service's authentication scheme.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Very High",
            "mitigations": [
              "Implementation: Implement message level security such as HMAC in the HTTP communication",
              "Design: Utilize defense in depth, do not rely on a single security mechanism like SSL",
              "Design: Enforce principle of least privilege"
            ],
            "related_cwe": ["CWE-300", "CWE-287", "CWE-693"]
          },
          {
            "capec_id": "CAPEC-593",
            "capec_name": "Session Hijacking",
            "capec_description": "This type of attack involves an adversary that exploits weaknesses in an application's use of sessions in performing authentication. The adversary is able to steal or manipulate an active session and use it to gain unathorized access to the application.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Properly encrypt and sign identity tokens in transit, and use industry standard session key generation mechanisms that utilize high amount of entropy to generate the session key. Many standard web and application servers will perform this task on your behalf. Utilize a session timeout for all sessions. If the user does not explicitly logout, terminate their session after this period of inactivity. If the user logs back in then a new session key should be generated."
            ],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-633",
            "capec_name": "Token Impersonation",
            "capec_description": "An adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity, and not the response that blocks the adversary.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287", "CWE-1270"]
          },
          {
            "capec_id": "CAPEC-650",
            "capec_name": "Upload a Web Shell to a Web Server",
            "capec_description": "By exploiting insufficient permissions, it is possible to upload a web shell to a web server in such a way that it can be executed remotely. This shell can have various capabilities, thereby acting as a \"gateway\" to the underlying web server. The shell might execute at the higher permission level of the web server, providing the ability the execute malicious code at elevated levels.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "High",
            "mitigations": [
              "Make sure your web server is up-to-date with all patches to protect against known vulnerabilities.",
              "Ensure that the file permissions in directories on the web server from which files can be execute is set to the \"least privilege\" settings, and that those directories contents is controlled by an allowlist."
            ],
            "related_cwe": ["CWE-287", "CWE-553"]
          },
          {
            "capec_id": "CAPEC-94",
            "capec_name": "Adversary in the Middle (AiTM)",
            "capec_description": "An adversary targets the communication between two components (typically client and server), in order to alter or obtain data from transactions. A general approach entails the adversary placing themself within the communication channel between the two components.",
            "capec_extended_description": "Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first flows through the adversary, who has the opportunity to observe or alter it, before being passed on to the intended recipient as if it was never observed. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for these attacks yields an implicit lack of trust in communication or identify between two components.\n\nThese attacks differ from Sniffing Attacks (CAPEC-157) since these attacks often modify the communications prior to delivering it to the intended recipient.",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Ensure Public Keys are signed by a Certificate Authority",
              "Encrypt communications using cryptography (e.g., SSL/TLS)",
              "Use Strong mutual authentication to always fully authenticate both ends of any communications channel.",
              "Exchange public keys using a secure channel"
            ],
            "related_cwe": [
              "CWE-300",
              "CWE-290",
              "CWE-593",
              "CWE-287",
              "CWE-294"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2022-31462",
    "cve_name": "",
    "cve_description": "Owl Labs Meeting Owl 5.2.0.15 allows attackers to control the device via a backdoor password (derived from the serial number) that can be found in Bluetooth broadcast data.",
    "cve_category": [],
    "cve_published_at": "Published 2022-06-02 22:15:08",
    "cve_updated_at": "Updated 2022-07-08 16:47:46",
    "cve_required_action": "",
    "cvss": {
      "base_score": "5.4",
      "base_severity": "MEDIUM",
      "cvss_vector": "AV:A/AC:M/Au:N/C:P/I:P/A:P",
      "exploitability_score": "5.5",
      "impact_score": "6.4",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Owllabs » Meeting Owl Pro Firmware Versions before (<) 5.4.2.3",
        "detail": "cpe:2.3:o:owllabs:meeting_owl_pro_firmware:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-798",
        "cwe_name": "Use of Hard-coded Credentials",
        "cwe_description": "The product contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.",
        "cwe_extended_description": "Hard-coded credentials typically create a significant hole that allows an attacker to bypass the authentication that has been configured by the product administrator. This hole might be difficult for the system administrator to detect. Even if detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. There are two main variations:\n\nInbound: the product contains an authentication mechanism that checks the input credentials against a hard-coded set of credentials.\nOutbound: the product connects to another system or component, and it contains hard-coded credentials for connecting to that component.\n\nIn the Inbound variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. If the password is ever discovered or published (a common occurrence on the Internet), then anybody with knowledge of this password can access the product. Finally, since all installations of the product will have the same password, even across different organizations, this enables massive attacks such as worms to take place.\n\nThe Outbound variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password which can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product. Any user of that program may be able to extract the password. Client-side systems with hard-coded passwords pose even more of a threat, since the extraction of a password from a binary is usually very simple.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29953",
            "name": "CVE-2022-29953",
            "des": "Condition Monitor firmware has a maintenance interface with hard-coded credentials"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29960",
            "name": "CVE-2022-29960",
            "des": "Engineering Workstation uses hard-coded cryptographic keys that could allow for unathorized filesystem access and privilege escalation"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29964",
            "name": "CVE-2022-29964",
            "des": "Distributed Control System (DCS) has hard-coded passwords for local shell access"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30997",
            "name": "CVE-2022-30997",
            "des": "Programmable Logic Controller (PLC) has a maintenance service that uses undocumented, hard-coded credentials"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30314",
            "name": "CVE-2022-30314",
            "des": "Firmware for a Safety Instrumented System (SIS) has hard-coded credentials for access to boot configuration"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30271",
            "name": "CVE-2022-30271",
            "des": "Remote Terminal Unit (RTU) uses a hard-coded SSH private key that is likely to be used in typical deployments"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-37555",
            "name": "CVE-2021-37555",
            "des": "Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2012-3503",
            "name": "CVE-2012-3503",
            "des": "Installation script has a hard-coded secret token value, allowing attackers to bypass authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2772",
            "name": "CVE-2010-2772",
            "des": "SCADA system uses a hard-coded password to protect back-end database containing authorization information, exploited by Stuxnet worm"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-2073",
            "name": "CVE-2010-2073",
            "des": "FTP server library uses hard-coded usernames and passwords for three default accounts"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2010-1573",
            "name": "CVE-2010-1573",
            "des": "Chain: Router firmware uses hard-coded username and password for access to debug functionality, which can be used to execute arbitrary code"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2369",
            "name": "CVE-2008-2369",
            "des": "Server uses hard-coded authentication key"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-0961",
            "name": "CVE-2008-0961",
            "des": "Backup product uses hard-coded username and password, allowing attackers to bypass authentication via the RPC interface"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-1160",
            "name": "CVE-2008-1160",
            "des": "Security appliance uses hard-coded password allowing attackers to gain root access"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2006-7142",
            "name": "CVE-2006-7142",
            "des": "Drive encryption product stores hard-coded cryptographic keys for encrypted configuration files in executable programs"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3716",
            "name": "CVE-2005-3716",
            "des": "VoIP product uses hard-coded public credentials that cannot be changed, which allows attackers to obtain sensitive information"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3803",
            "name": "CVE-2005-3803",
            "des": "VoIP product uses hard coded public and private SNMP community strings that cannot be changed, which allows remote attackers to obtain sensitive information"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0496",
            "name": "CVE-2005-0496",
            "des": "Backup product contains hard-coded credentials that effectively serve as a back door, which allows remote attackers to access the file system"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].",
              "In Windows environments, the Encrypted File System (EFS) may provide some protection."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "If the product must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.",
              "Use randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method."
            ]
          },
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "For front-end to back-end connections: Three solutions are possible, although none are complete."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Black Box",
            "des": [
              "Credential storage in configuration files is findable using black box methods, but the use of hard-coded credentials for an incoming authentication routine typically involves an account that is not visible outside of the code.",
              "Effectiveness: Moderate"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated white box techniques have been published for detecting hard-coded credentials for incoming authentication, but there is some expert disagreement regarding their effectiveness and applicability to a broad range of methods."
            ]
          },
          {
            "subheading": "Manual Static Analysis",
            "des": [
              "This weakness may be detectable using manual code analysis. Unless authentication is decentralized and applied throughout the product, there can be sufficient time for the analyst to find incoming authentication routines and examine the program logic looking for usage of hard-coded credentials. Configuration files could also be analyzed.",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."
            ]
          },
          {
            "subheading": "Manual Dynamic Analysis",
            "des": [
              "For hard-coded credentials in incoming authentication: use monitoring tools that examine the product's process as it interacts with the operating system and the network. This technique is useful in cases when source code is unavailable, if the product was not developed by you, or if you want to verify that the build phase did not introduce any new weaknesses. Examples include debuggers that directly attach to the running process; system-call tracing utilities such as truss (Solaris) and strace (Linux); system activity monitors such as FileMon, RegMon, Process Monitor, and other Sysinternals utilities (Windows); and sniffers and protocol analyzers that monitor network traffic.",
              "Attach the monitor to the process and perform a login. Using call trees or similar artifacts from the output, examine the associated behaviors and see if any of them appear to be comparing the input to a fixed string or value."
            ]
          },
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-191",
            "capec_name": "Read Sensitive Constants Within an Executable",
            "capec_description": "An adversary engages in activities to discover any sensitive constants present within the compiled code of an executable. These constants may include literal ASCII strings within the file itself, or possibly strings hard-coded into particular routines that can be revealed by code refactoring methods including static and dynamic analysis.",
            "capec_extended_description": "One specific example of a sensitive string is a hard-coded password. Typical examples of software with hard-coded passwords include server-side executables which may check for a hard-coded password or key during a user's authentication with the server. Hard-coded passwords can also be present in client-side executables which utilize the password or key when connecting to either a remote component, such as a database server, licensing server, or otherwise, or a processes on the same host that expects a key or password. When analyzing an executable the adversary may search for the presence of such strings by analyzing the byte-code of the file itself. Example utilities for revealing strings within a file include 'strings,' 'grep,' or other variants of these programs depending upon the type of operating system used. These programs can be used to dump any ASCII or UNICODE strings contained within a program. Strings can also be searched for using a hex editors by loading the binary or object code file and utilizing native search functions such as regular expressions.\n\nAdditionally, sensitive numeric values can occur within an executable. This can be used to discover the location of cryptographic constants.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-798"]
          },
          {
            "capec_id": "CAPEC-70",
            "capec_name": "Try Common or Default Usernames and Passwords",
            "capec_description": "An adversary may try certain common or default usernames and passwords to gain access into the system and perform unauthorized actions. An adversary may try an intelligent brute force using empty passwords, known vendor default credentials, as well as a dictionary of common usernames and passwords. Many vendor products come preconfigured with default (and thus well-known) usernames and passwords that should be deleted prior to usage in a production environment. It is a common mistake to forget to remove these default login credentials. Another problem is that users would pick very simple (common) passwords (e.g. \"secret\" or \"password\") that make it easier for the attacker to gain access to the system compared to using a brute force attack or even a dictionary attack using a full dictionary.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "High",
            "mitigations": [
              "Delete all default account credentials that may be put in by the product vendor.",
              "Implement a password throttling mechanism. This mechanism should take into account both the IP address and the log in name of the user.",
              "Put together a strong password policy and make sure that all user created passwords comply with it. Alternatively automatically generate strong passwords for users.",
              "Passwords need to be recycled to prevent aging, that is every once in a while a new password must be chosen."
            ],
            "related_cwe": [
              "CWE-521",
              "CWE-262",
              "CWE-263",
              "CWE-798",
              "CWE-654",
              "CWE-308",
              "CWE-309"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2022-31461",
    "cve_name": "",
    "cve_description": "Owl Labs Meeting Owl 5.2.0.15 allows attackers to deactivate the passcode protection mechanism via a certain c 11 message.",
    "cve_category": ["Bypass", "Gain privilege"],
    "cve_published_at": "Published 2022-06-02 22:15:08",
    "cve_updated_at": "Updated 2022-08-29 20:59:18",
    "cve_required_action": "",
    "cvss": {
      "base_score": "3.3",
      "base_severity": "LOW",
      "cvss_vector": "AV:A/AC:L/Au:N/C:N/I:P/A:N",
      "exploitability_score": "6.5",
      "impact_score": "2.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Owllabs » Meeting Owl Pro Firmware Versions before (<) 5.4.2.3",
        "detail": "cpe:2.3:o:owllabs:meeting_owl_pro_firmware:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-287",
        "cwe_name": "Improper Authentication",
        "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-35248",
            "name": "CVE-2022-35248",
            "des": "Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-36436",
            "name": "CVE-2022-36436",
            "des": "Python-based authentication proxy does not enforce password authentication during the initial handshake, allowing the client to bypass authentication by specifying a 'None' authentication type."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30034",
            "name": "CVE-2022-30034",
            "des": "Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29951",
            "name": "CVE-2022-29951",
            "des": "TCP-based protocol in Programmable Logic Controller (PLC) has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-29952",
            "name": "CVE-2022-29952",
            "des": "Condition Monitor uses a protocol that does not require authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30313",
            "name": "CVE-2022-30313",
            "des": "Safety Instrumented System uses proprietary TCP protocols with no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-30317",
            "name": "CVE-2022-30317",
            "des": "Distributed Control System (DCS) uses a protocol that has no authentication."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-33139",
            "name": "CVE-2022-33139",
            "des": "SCADA system only uses client-side authentication, allowing adversaries to impersonate other users."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-3116",
            "name": "CVE-2021-3116",
            "des": "Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowing bypass of the proxy authentication (CWE-1390)"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-21972",
            "name": "CVE-2021-21972",
            "des": "Chain: Cloud computing virtualization platform does not require authentication for upload of a tar format file (CWE-306), then uses .. path traversal sequences (CWE-23) in the file to access unexpected files, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-37415",
            "name": "CVE-2021-37415",
            "des": "IT management product does not perform authentication for some REST API requests, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-13927",
            "name": "CVE-2020-13927",
            "des": "Default setting in workflow management product allows all API requests without authentication, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-35395",
            "name": "CVE-2021-35395",
            "des": "Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-34523",
            "name": "CVE-2021-34523",
            "des": "Mail server does not properly check an access token before executing a Powershell command, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-12812",
            "name": "CVE-2020-12812",
            "des": "Chain: user is not prompted for a second authentication factor (CWE-287) when changing the case of their username (CWE-178), as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-10148",
            "name": "CVE-2020-10148",
            "des": "Authentication bypass by appending specific parameters and values to a URI, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2020-0688",
            "name": "CVE-2020-0688",
            "des": "Mail server does not generate a unique key during installation, as exploited in the wild per CISA KEV."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2017-14623",
            "name": "CVE-2017-14623",
            "des": "LDAP Go package allows authentication bypass using an empty password, causing an unauthenticated LDAP bind"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3421",
            "name": "CVE-2009-3421",
            "des": "login script for guestbook allows bypassing authentication by setting a \"login_ok\" parameter to 1."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2382",
            "name": "CVE-2009-2382",
            "des": "admin script allows authentication bypass by setting a cookie value to \"LOGGEDIN\"."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1048",
            "name": "CVE-2009-1048",
            "des": "VOIP product allows authentication bypass using 127.0.0.1 in the Host header."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2213",
            "name": "CVE-2009-2213",
            "des": "product uses default \"Allow\" action, instead of default deny, leading to authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2168",
            "name": "CVE-2009-2168",
            "des": "chain: redirect without exit (CWE-698) leads to resultant authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3107",
            "name": "CVE-2009-3107",
            "des": "product does not restrict access to a listening port for a critical service, allowing authentication to be bypassed."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-1596",
            "name": "CVE-2009-1596",
            "des": "product does not properly implement a security-related configuration setting, allowing authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-2422",
            "name": "CVE-2009-2422",
            "des": "authentication routine returns \"nil\" instead of \"false\" in some situations, allowing authentication bypass using an invalid username."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3232",
            "name": "CVE-2009-3232",
            "des": "authentication update script does not properly handle when admin does not select any authentication modules, allowing authentication bypass."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2009-3231",
            "name": "CVE-2009-3231",
            "des": "use of LDAP authentication with anonymous binds causes empty password to result in successful authentication"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-3435",
            "name": "CVE-2005-3435",
            "des": "product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0408",
            "name": "CVE-2005-0408",
            "des": "chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass."
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Use an authentication framework or library such as the OWASP ESAPI Authentication feature."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "Automated static analysis is useful for detecting certain types of authentication. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authentication libraries.",
              "Generally, automated static analysis tools have difficulty detecting custom authentication schemes. In addition, the software's design may include some functionality that is accessible to any user and does not require an established identity; an automated technique that detects the absence of authentication may report false positives.",
              "Effectiveness: Limited"
            ]
          },
          {
            "subheading": "Manual Static Analysis",
            "des": [
              "This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.",
              "Manual static analysis is useful for evaluating the correctness of custom authentication mechanisms.",
              "Effectiveness: High",
              "Note: These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."
            ]
          },
          {
            "subheading": "Manual Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Automated Static Analysis",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-114",
            "capec_name": "Authentication Abuse",
            "capec_description": "An attacker obtains unauthorized access to an application, service or device either through knowledge of the inherent weaknesses of an authentication mechanism, or by exploiting a flaw in the authentication scheme's implementation. In such an attack an authentication mechanism is functioning but a carefully controlled sequence of events causes the mechanism to grant access to the attacker.",
            "capec_extended_description": "This attack may exploit assumptions made by the target's authentication procedures, such as assumptions regarding trust relationships or assumptions regarding the generation of secret values. This attack differs from Authentication Bypass attacks in that Authentication Abuse allows the attacker to be certified as a valid user through illegitimate means, while Authentication Bypass allows the user to access protected material without ever being certified as an authenticated user. This attack does not rely on prior sessions established by successfully authenticating users, as relied upon for the \"Exploitation of Session Variables, Resource IDs and other Trusted Credentials\" attack patterns.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287", "CWE-1244"]
          },
          {
            "capec_id": "CAPEC-115",
            "capec_name": "Authentication Bypass",
            "capec_description": "An attacker gains access to application, service, or device with the privileges of an authorized or privileged user by evading or circumventing an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place.",
            "capec_extended_description": "This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to get to secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-151",
            "capec_name": "Identity Spoofing",
            "capec_description": "Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials.",
            "capec_extended_description": "Alternatively, an adversary may intercept a message from a legitimate sender and attempt to make it look like the message comes from them without changing its content. The latter form of this attack can be used to hijack credentials from legitimate users. Identity Spoofing attacks need not be limited to transmitted messages - any resource that is associated with an identity (for example, a file with a signature) can be the target of an attack where the adversary attempts to change the apparent identity. This attack differs from Content Spoofing attacks where the adversary does not wish to change the apparent identity of the message but instead wishes to change what the message says. In an Identity Spoofing attack, the adversary is attempting to change the identity of the content.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Medium",
            "mitigations": [
              "Employ robust authentication processes (e.g., multi-factor authentication)."
            ],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-194",
            "capec_name": "Fake the Source of Data",
            "capec_description": "An adversary takes advantage of improper authentication to provide data or services under a falsified identity. The purpose of using the falsified identity may be to prevent traceability of the provided data or to assume the rights granted to another individual. One of the simplest forms of this attack would be the creation of an email message with a modified \"From\" field in order to appear that the message was sent from someone other than the actual sender. The root of the attack (in this case the email system) fails to properly authenticate the source and this results in the reader incorrectly performing the instructed action. Results of the attack vary depending on the details of the attack, but common results include privilege escalation, obfuscation of other attacks, and data corruption/manipulation.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-22",
            "capec_name": "Exploiting Trust in Client",
            "capec_description": "An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system.",
              "Design: Do not rely on client validation or encoding for security purposes.",
              "Design: Utilize digital signatures to increase authentication assurance.",
              "Design: Utilize two factor authentication to increase authentication assurance.",
              "Implementation: Perform input validation for all remote content."
            ],
            "related_cwe": [
              "CWE-290",
              "CWE-287",
              "CWE-20",
              "CWE-200",
              "CWE-693"
            ]
          },
          {
            "capec_id": "CAPEC-57",
            "capec_name": "Utilizing REST's Trust in the System Resource to Obtain Sensitive Data",
            "capec_description": "This attack utilizes a REST(REpresentational State Transfer)-style applications' trust in the system resources and environment to obtain sensitive data once SSL is terminated.",
            "capec_extended_description": "Rest applications premise is that they leverage existing infrastructure to deliver web services functionality. An example of this is a Rest application that uses HTTP Get methods and receives a HTTP response with an XML document. These Rest style web services are deployed on existing infrastructure such as Apache and IIS web servers with no SOAP stack required.\n\nUnfortunately from a security standpoint, there frequently is no interoperable identity security mechanism deployed, so Rest developers often fall back to SSL to deliver security. In large data centers, SSL is typically terminated at the edge of the network - at the firewall, load balancer, or router. Once the SSL is terminated the HTTP request is in the clear (unless developers have hashed or encrypted the values, but this is rare). The adversary can utilize a sniffer such as Wireshark to snapshot the credentials, such as username and password that are passed in the clear once SSL is terminated. Once the adversary gathers these credentials, they can submit requests to the web service provider just as authorized user do. There is not typically an authentication on the client side, beyond what is passed in the request itself so once this is compromised, then this is generally sufficient to compromise the service's authentication scheme.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Very High",
            "mitigations": [
              "Implementation: Implement message level security such as HMAC in the HTTP communication",
              "Design: Utilize defense in depth, do not rely on a single security mechanism like SSL",
              "Design: Enforce principle of least privilege"
            ],
            "related_cwe": ["CWE-300", "CWE-287", "CWE-693"]
          },
          {
            "capec_id": "CAPEC-593",
            "capec_name": "Session Hijacking",
            "capec_description": "This type of attack involves an adversary that exploits weaknesses in an application's use of sessions in performing authentication. The adversary is able to steal or manipulate an active session and use it to gain unathorized access to the application.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Properly encrypt and sign identity tokens in transit, and use industry standard session key generation mechanisms that utilize high amount of entropy to generate the session key. Many standard web and application servers will perform this task on your behalf. Utilize a session timeout for all sessions. If the user does not explicitly logout, terminate their session after this period of inactivity. If the user logs back in then a new session key should be generated."
            ],
            "related_cwe": ["CWE-287"]
          },
          {
            "capec_id": "CAPEC-633",
            "capec_name": "Token Impersonation",
            "capec_description": "An adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity, and not the response that blocks the adversary.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-287", "CWE-1270"]
          },
          {
            "capec_id": "CAPEC-650",
            "capec_name": "Upload a Web Shell to a Web Server",
            "capec_description": "By exploiting insufficient permissions, it is possible to upload a web shell to a web server in such a way that it can be executed remotely. This shell can have various capabilities, thereby acting as a \"gateway\" to the underlying web server. The shell might execute at the higher permission level of the web server, providing the ability the execute malicious code at elevated levels.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "High",
            "mitigations": [
              "Make sure your web server is up-to-date with all patches to protect against known vulnerabilities.",
              "Ensure that the file permissions in directories on the web server from which files can be execute is set to the \"least privilege\" settings, and that those directories contents is controlled by an allowlist."
            ],
            "related_cwe": ["CWE-287", "CWE-553"]
          },
          {
            "capec_id": "CAPEC-94",
            "capec_name": "Adversary in the Middle (AiTM)",
            "capec_description": "An adversary targets the communication between two components (typically client and server), in order to alter or obtain data from transactions. A general approach entails the adversary placing themself within the communication channel between the two components.",
            "capec_extended_description": "Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first flows through the adversary, who has the opportunity to observe or alter it, before being passed on to the intended recipient as if it was never observed. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for these attacks yields an implicit lack of trust in communication or identify between two components.\n\nThese attacks differ from Sniffing Attacks (CAPEC-157) since these attacks often modify the communications prior to delivering it to the intended recipient.",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Ensure Public Keys are signed by a Certificate Authority",
              "Encrypt communications using cryptography (e.g., SSL/TLS)",
              "Use Strong mutual authentication to always fully authenticate both ends of any communications channel.",
              "Exchange public keys using a secure channel"
            ],
            "related_cwe": [
              "CWE-300",
              "CWE-290",
              "CWE-593",
              "CWE-287",
              "CWE-294"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2022-31459",
    "cve_name": "",
    "cve_description": "Owl Labs Meeting Owl 5.2.0.15 allows attackers to retrieve the passcode hash via a certain c 10 value over Bluetooth.",
    "cve_category": ["Information leak"],
    "cve_published_at": "Published 2022-06-02 22:15:08",
    "cve_updated_at": "Updated 2022-07-08 16:49:40",
    "cve_required_action": "",
    "cvss": {
      "base_score": "3.3",
      "base_severity": "LOW",
      "cvss_vector": "AV:A/AC:L/Au:N/C:P/I:N/A:N",
      "exploitability_score": "6.5",
      "impact_score": "2.9",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Owllabs » Meeting Owl Pro Firmware Versions before (<) 5.4.2.3",
        "detail": "cpe:2.3:o:owllabs:meeting_owl_pro_firmware:*:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-200",
        "cwe_name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "cwe_description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
        "cwe_extended_description": "There are many different kinds of mistakes that introduce information exposures. The severity of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. Some kinds of sensitive information include:\n\nprivate, personal information, such as personal messages, financial data, health records, geographic location, or contact details\nsystem status and environment, such as the operating system and installed packages\nbusiness secrets and intellectual property\nnetwork status and configuration\nthe product's own code or internal state\nmetadata, e.g. logging of connections or message headers\nindirect information, such as a discrepancy between two internal operations that can be observed by an outsider\n\nInformation might be sensitive to different parties, each of which may have their own expectations for whether the information should be protected. These parties include:\n\nthe product's own users\npeople or organizations whose information is created or used by the product, even if they are not direct product users\nthe product's administrators, including the admins of the system(s) and/or networks on which the product operates\nthe developer\n\nInformation exposures can occur in different ways:\n\nthe code explicitly inserts sensitive information into resources or messages that are intentionally made accessible to unauthorized actors, but should not contain the information - i.e., the information should have been \"scrubbed\" or \"sanitized\"\na different weakness or mistake indirectly inserts the sensitive information into resources, such as a web script error revealing the full system path of the program.\nthe code manages resources that intentionally contain sensitive information, but the resources are unintentionally made accessible to unauthorized actors. In this case, the information exposure is resultant - i.e., a different weakness enabled the access to the information in the first place.\n\nIt is common practice to describe any loss of confidentiality as an \"information exposure,\" but this can lead to overuse of CWE-200 in CWE mapping. From the CWE perspective, loss of confidentiality is a technical impact that can arise from dozens of different weaknesses, such as insecure file permissions or out-of-bounds read. CWE-200 and its lower-level descendants are intended to cover the mistakes that occur in behaviors that explicitly manage, store, transfer, or cleanse sensitive information.",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-31162",
            "name": "CVE-2022-31162",
            "des": "Rust library leaks Oauth client details in application debug logs"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-25476",
            "name": "CVE-2021-25476",
            "des": "Digital Rights Management (DRM) capability for mobile platform leaks pointer information, simplifying ASLR bypass"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1483",
            "name": "CVE-2001-1483",
            "des": "Enumeration of valid usernames based on inconsistent responses"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2001-1528",
            "name": "CVE-2001-1528",
            "des": "Account number enumeration via inconsistent responses."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-2150",
            "name": "CVE-2004-2150",
            "des": "User enumeration via discrepancies in error messages."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-1205",
            "name": "CVE-2005-1205",
            "des": "Telnet protocol allows servers to obtain sensitive environment information from clients."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-1725",
            "name": "CVE-2002-1725",
            "des": "Script calls phpinfo(), revealing system configuration to web user"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2002-0515",
            "name": "CVE-2002-0515",
            "des": "Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-0778",
            "name": "CVE-2004-0778",
            "des": "Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2000-1117",
            "name": "CVE-2000-1117",
            "des": "Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-0190",
            "name": "CVE-2003-0190",
            "des": "Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-2049",
            "name": "CVE-2008-2049",
            "des": "POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-5172",
            "name": "CVE-2007-5172",
            "des": "Program reveals password in error message if attacker can trigger certain database errors."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4638",
            "name": "CVE-2008-4638",
            "des": "Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209)."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2007-1409",
            "name": "CVE-2007-1409",
            "des": "Direct request to library file in web application triggers pathname leak in error message."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2005-0603",
            "name": "CVE-2005-0603",
            "des": "Malformed regexp syntax leads to information exposure in error message."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2004-2268",
            "name": "CVE-2004-2268",
            "des": "Password exposed in debug information."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2003-1078",
            "name": "CVE-2003-1078",
            "des": "FTP client with debug option enabled shows password to the screen."
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-0708",
            "name": "CVE-2022-0708",
            "des": "Collaboration platform does not clear team emails in a response, allowing leak of email addresses"
          }
        ],
        "potential_mitigations": [
          {
            "subheading": "Phase: Architecture and Design",
            "des": [
              "Compartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.",
              "Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges."
            ]
          }
        ],
        "detection_methods": [
          {
            "subheading": "Automated Static Analysis - Binary or Bytecode",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Automated Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": [
          {
            "capec_id": "CAPEC-116",
            "capec_name": "Excavation",
            "capec_description": "An adversary actively probes the target in a manner that is designed to solicit information that could be leveraged for malicious purposes.",
            "capec_extended_description": "This is achieved by exploring the target via ordinary interactions for the purpose of gathering intelligence about the target, or by sending data that is syntactically invalid or non-standard in an attempt to produce a response that contains the desired data. As a result of these interactions, the adversary is able to obtain information from the target that aids the attacker in making inferences about its security, configuration, or potential vulnerabilities. Examplar exchanges with the target may trigger unhandled exceptions or verbose error messages that reveal information like stack traces, configuration information, path information, or database design. This type of attack also includes the manipulation of query strings in a URI to produce invalid SQL queries, or by trying alternative path values in the hope that the server will return useful information.",
            "likelihood_of_attack": "High",
            "typical_severity": "Medium",
            "mitigations": [
              "Minimize error/response output to only what is necessary for functional use or corrective language.",
              "Remove potentially sensitive information that is not necessary for the application's functionality."
            ],
            "related_cwe": ["CWE-200", "CWE-1243"]
          },
          {
            "capec_id": "CAPEC-13",
            "capec_name": "Subverting Environment Variable Values",
            "capec_description": "The adversary directly or indirectly modifies environment variables used by or controlling the target software. The adversary's goal is to cause the target software to deviate from its expected operation in a manner that benefits the adversary.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very High",
            "mitigations": [
              "Protect environment variables against unauthorized read and write access.",
              "Protect the configuration files which contain environment variables against illegitimate read and write access.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the software system based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system.",
              "Apply the least privilege principles. If a process has no legitimate reason to read an environment variable do not give that privilege."
            ],
            "related_cwe": [
              "CWE-353",
              "CWE-285",
              "CWE-302",
              "CWE-74",
              "CWE-15",
              "CWE-73",
              "CWE-20",
              "CWE-200"
            ]
          },
          {
            "capec_id": "CAPEC-169",
            "capec_name": "Footprinting",
            "capec_description": "An adversary engages in probing and exploration activities to identify constituents and properties of the target.",
            "capec_extended_description": "Footprinting is a general term to describe a variety of information gathering techniques, often used by attackers in preparation for some attack. It consists of using tools to learn as much as possible about the composition, configuration, and security mechanisms of the targeted application, system or network. Information that might be collected during a footprinting effort could include open ports, applications and their versions, network topology, and similar information. Although similar to fingerprinting, footprinting aims to get a more holistic view of a system or network, whereas fingerprinting is more targeted to a specific application or operating system. While footprinting is not intended to be damaging (although certain activities, such as network scans, can sometimes cause disruptions to vulnerable applications inadvertently) it may often pave the way for more damaging attacks.",
            "likelihood_of_attack": "High",
            "typical_severity": "Very Low",
            "mitigations": [
              "Keep patches up to date by installing weekly or daily if possible.",
              "Shut down unnecessary services/ports.",
              "Change default passwords by choosing strong passwords.",
              "Curtail unexpected input.",
              "Encrypt and password-protect sensitive data.",
              "Avoid including information that has the potential to identify and compromise your organization's security such as access to business plans, formulas, and proprietary documents."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-22",
            "capec_name": "Exploiting Trust in Client",
            "capec_description": "An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by communicating directly with the server where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system.",
              "Design: Do not rely on client validation or encoding for security purposes.",
              "Design: Utilize digital signatures to increase authentication assurance.",
              "Design: Utilize two factor authentication to increase authentication assurance.",
              "Implementation: Perform input validation for all remote content."
            ],
            "related_cwe": [
              "CWE-290",
              "CWE-287",
              "CWE-20",
              "CWE-200",
              "CWE-693"
            ]
          },
          {
            "capec_id": "CAPEC-224",
            "capec_name": "Fingerprinting",
            "capec_description": "An adversary compares output from a target system to known indicators that uniquely identify specific details about the target. Most commonly, fingerprinting is done to determine operating system and application versions. Fingerprinting can be done passively as well as actively. Fingerprinting by itself is not usually detrimental to the target. However, the information gathered through fingerprinting often enables an adversary to discover existing weaknesses in the target.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very Low",
            "mitigations": [
              "While some information is shared by systems automatically based on standards and protocols, remove potentially sensitive information that is not necessary for the application's functionality as much as possible."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-285",
            "capec_name": "ICMP Echo Request Ping",
            "capec_description": "An adversary sends out an ICMP Type 8 Echo Request, commonly known as a 'Ping', in order to determine if a target system is responsive. If the request is not blocked by a firewall or ACL, the target host will respond with an ICMP Type 0 Echo Reply datagram. This type of exchange is usually referred to as a 'Ping' due to the Ping utility present in almost all operating systems. Ping, as commonly implemented, allows a user to test for alive hosts, measure round-trip time, and measure the percentage of packet loss.",
            "capec_extended_description": "Performing this operation for a range of hosts on the network is known as a 'Ping Sweep'. While the Ping utility is useful for small-scale host discovery, it was not designed for rapid or efficient host discovery over large network blocks. Other scanning utilities have been created that make ICMP ping sweeps easier to perform. Most networks filter ingress ICMP Type 8 messages for security reasons. Various other methods of performing ping sweeps have developed as a result. It is important to recognize the key security goal of the adversary is to discover if an IP address is alive, or has a responsive host. To this end, virtually any type of ICMP message, as defined by RFC 792 is useful. An adversary can cycle through various types of ICMP messages to determine if holes exist in the firewall configuration. When ICMP ping sweeps fail to discover hosts, other protocols can be used for the same purpose, such as TCP SYN or ACK segments, UDP datagrams sent to closed ports, etc.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [
              "Consider configuring firewall rules to block ICMP Echo requests and prevent replies. If not practical, monitor and consider action when a system has fast and a repeated pattern of requests that move incrementally through port numbers."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-287",
            "capec_name": "TCP SYN Scan",
            "capec_description": "An adversary uses a SYN scan to determine the status of ports on the remote target. SYN scanning is the most common type of port scanning that is used because of its many advantages and few drawbacks. As a result, novice attackers tend to overly rely on the SYN scan while performing system reconnaissance. As a scanning method, the primary advantages of SYN scanning are its universality and speed.",
            "capec_extended_description": "RFC 793 defines the required behavior of any TCP/IP device in that an incoming connection request begins with a SYN packet, which in turn must be followed by a SYN/ACK packet from the receiving service. For this reason, like TCP Connect scanning, SYN scanning works against any TCP stack. Unlike TCP Connect scanning, it is possible to scan thousands of ports per second using this method. This type of scanning is usually referred to as 'half-open' scanning because it does not complete the three-way handshake. The scanning rate is extremely fast because no time is wasted completing the handshake or tearing down the connection. This technique allows an attacker to scan through stateful firewalls due to the common configuration that TCP SYN segments for a new connection will be allowed for almost any port. TCP SYN scanning can also immediately detect 3 of the 4 important types of port status: open, closed, and filtered.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-290",
            "capec_name": "Enumerate Mail Exchange (MX) Records",
            "capec_description": "An adversary enumerates the MX records for a given via a DNS query. This type of information gathering returns the names of mail servers on the network. Mail servers are often not exposed to the Internet but are located within the DMZ of a network protected by a firewall. A side effect of this configuration is that enumerating the MX records for an organization my reveal the IP address of the firewall or possibly other internal systems. Attackers often resort to MX record enumeration when a DNS Zone Transfer is not possible.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-291",
            "capec_name": "DNS Zone Transfers",
            "capec_description": "An attacker exploits a DNS misconfiguration that permits a ZONE transfer. Some external DNS servers will return a list of IP address and valid hostnames. Under certain conditions, it may even be possible to obtain Zone data about the organization's internal network. When successful the attacker learns valuable information about the topology of the target organization, including information about particular servers, their role within the IT structure, and possibly information about the operating systems running upon the network. This is configuration dependent behavior so it may also be required to search out multiple DNS servers while attempting to find one with ZONE transfers allowed.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-292",
            "capec_name": "Host Discovery",
            "capec_description": "An adversary sends a probe to an IP address to determine if the host is alive. Host discovery is one of the earliest phases of network reconnaissance. The adversary usually starts with a range of IP addresses belonging to a target network and uses various methods to determine if a host is present at that IP address. Host discovery is usually referred to as 'Ping' scanning using a sonar analogy. The goal is to send a packet through to the IP address and solicit a response from the host. As such, a 'ping' can be virtually any crafted packet whatsoever, provided the adversary can identify a functional host based on its response. An attack of this nature is usually carried out with a 'ping sweep,' where a particular kind of ping is sent to a range of IP addresses.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-293",
            "capec_name": "Traceroute Route Enumeration",
            "capec_description": "An adversary uses a traceroute utility to map out the route which data flows through the network in route to a target destination. Tracerouting can allow the adversary to construct a working topology of systems and routers by listing the systems through which data passes through on their way to the targeted machine. This attack can return varied results depending upon the type of traceroute that is performed. Traceroute works by sending packets to a target while incrementing the Time-to-Live field in the packet header. As the packet traverses each hop along its way to the destination, its TTL expires generating an ICMP diagnostic message that identifies where the packet expired. Traditional techniques for tracerouting involved the use of ICMP and UDP, but as more firewalls began to filter ingress ICMP, methods of traceroute using TCP were developed.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-294",
            "capec_name": "ICMP Address Mask Request",
            "capec_description": "An adversary sends an ICMP Type 17 Address Mask Request to gather information about a target's networking configuration. ICMP Address Mask Requests are defined by RFC-950, \"Internet Standard Subnetting Procedure.\" An Address Mask Request is an ICMP type 17 message that triggers a remote system to respond with a list of its related subnets, as well as its default gateway and broadcast address via an ICMP type 18 Address Mask Reply datagram. Gathering this type of information helps the adversary plan router-based attacks as well as denial-of-service attacks against the broadcast address.",
            "capec_extended_description": "Many modern operating systems will not respond to ICMP type 17 messages for security reasons. Determining whether a system or router will respond to an ICMP Address Mask Request helps the adversary determine operating system or firmware version. Additionally, because these types of messages are rare, they are easily spotted by intrusion detection systems. Many ICMP scanning tools support IP spoofing to help conceal the origin of the actual request among a storm of similar ICMP messages. It is a common practice for border firewalls and gateways to be configured to block ingress ICMP type 17 and egress ICMP type 18 messages.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-295",
            "capec_name": "Timestamp Request",
            "capec_description": "This pattern of attack leverages standard requests to learn the exact time associated with a target system. An adversary may be able to use the timestamp returned from the target to attack time-based security algorithms, such as random number generators, or time-based authentication mechanisms.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-296",
            "capec_name": "ICMP Information Request",
            "capec_description": "An adversary sends an ICMP Information Request to a host to determine if it will respond to this deprecated mechanism. ICMP Information Requests are a deprecated message type. Information Requests were originally used for diskless machines to automatically obtain their network configuration, but this message type has been superseded by more robust protocol implementations like DHCP.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-297",
            "capec_name": "TCP ACK Ping",
            "capec_description": "An adversary sends a TCP segment with the ACK flag set to a remote host for the purpose of determining if the host is alive. This is one of several TCP 'ping' types. The RFC 793 expected behavior for a service is to respond with a RST 'reset' packet to any unsolicited ACK segment that is not part of an existing connection. So by sending an ACK segment to a port, the adversary can identify that the host is alive by looking for a RST packet. Typically, a remote server will respond with a RST regardless of whether a port is open or closed. In this way, TCP ACK pings cannot discover the state of a remote port because the behavior is the same in either case. The firewall will look up the ACK packet in its state-table and discard the segment because it does not correspond to any active connection. A TCP ACK Ping can be used to discover if a host is alive via RST response packets sent from the host.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [
              "Leverage stateful firewalls that allow for the rejection of a packet that is not part of an existing connection."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-298",
            "capec_name": "UDP Ping",
            "capec_description": "An adversary sends a UDP datagram to the remote host to determine if the host is alive. If a UDP datagram is sent to an open UDP port there is very often no response, so a typical strategy for using a UDP ping is to send the datagram to a random high port on the target. The goal is to solicit an 'ICMP port unreachable' message from the target, indicating that the host is alive. UDP pings are useful because some firewalls are not configured to block UDP datagrams sent to strange or typically unused ports, like ports in the 65K range. Additionally, while some firewalls may filter incoming ICMP, weaknesses in firewall rule-sets may allow certain types of ICMP (host unreachable, port unreachable) which are useful for UDP ping attempts.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [
              "Configure your firewall to block egress ICMP messages."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-299",
            "capec_name": "TCP SYN Ping",
            "capec_description": "An adversary uses TCP SYN packets as a means towards host discovery. Typical RFC 793 behavior specifies that when a TCP port is open, a host must respond to an incoming SYN \"synchronize\" packet by completing stage two of the 'three-way handshake' - by sending an SYN/ACK in response. When a port is closed, RFC 793 behavior is to respond with a RST \"reset\" packet. This behavior can be used to 'ping' a target to see if it is alive by sending a TCP SYN packet to a port and then looking for a RST or an ACK packet in response.",
            "capec_extended_description": "Due to the different responses from open and closed ports, SYN packets can be used to determine the remote state of the port. A TCP SYN ping is also useful for discovering alive hosts protected by a stateful firewall. In cases where a specific firewall rule does not block access to a port, a SYN packet can pass through the firewall to the host and solicit a response from either an open or closed port. When a stateful firewall is present, SYN pings are preferable to ACK pings because a stateful firewall will typically drop all unsolicited ACK packets as they are not part of an existing or new connection. TCP SYN pings often fail when a stateless ACL or firewall is configured to blanket-filter incoming packets to a port. The firewall device will discard any SYN packets to a blocked port. Often, an adversary will alternate between SYN and ACK pings to discover if a host is alive.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-300",
            "capec_name": "Port Scanning",
            "capec_description": "An adversary uses a combination of techniques to determine the state of the ports on a remote target. Any service or application available for TCP or UDP networking will have a port open for communications over the network.",
            "capec_extended_description": "Although common services have assigned port numbers, services and applications can run on arbitrary ports. Additionally, port scanning is complicated by the potential for any machine to have up to 65535 possible UDP or TCP services. The goal of port scanning is often broader than identifying open ports, but also give the adversary information concerning the firewall configuration.\n\nDepending upon the method of scanning that is used, the process can be stealthy or more obtrusive, the latter being more easily detectable due to the volume of packets involved, anomalous packet traits, or system logging. Typical port scanning activity involves sending probes to a range of ports and observing the responses. There are four port statuses that this type of attack aims to identify: open, closed, filtered, and unfiltered. For strategic purposes it is useful for an adversary to distinguish between an open port that is protected by a filter vs. a closed port that is not protected by a filter. Making these fine grained distinctions is requires certain scan types. Collecting this type of information tells the adversary which ports can be attacked directly, which must be attacked with filter evasion techniques like fragmentation, source port scans, and which ports are unprotected (i.e. not firewalled) but aren't hosting a network service. An adversary often combines various techniques in order to gain a more complete picture of the firewall filtering mechanisms in place for a host.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-301",
            "capec_name": "TCP Connect Scan",
            "capec_description": "An adversary uses full TCP connection attempts to determine if a port is open on the target system. The scanning process involves completing a 'three-way handshake' with a remote port, and reports the port as closed if the full handshake cannot be established. An advantage of TCP connect scanning is that it works against any TCP/IP stack.",
            "capec_extended_description": "RFC 793 defines how TCP connections are established and torn down. TCP connect scanning commonly involves establishing a full connection, and then subsequently tearing it down, and therefore involves sending a significant number of packets to each port that is scanned. Compared to other types of scans, a TCP Connect scan is slow and methodical. This type of scanning causes considerable noise in system logs and can be spotted by IDS/IPS systems. TCP Connect scanning can detect when a port is open by completing the three-way handshake, but it cannot distinguish a port that is unfiltered with no service running on it from a port that is filtered by a firewall but contains an active service. Due to the significant volume of packets exchanged per port, TCP connect scanning can become very time consuming (performing a full TCP connect scan against a host can take multiple days). Generally, it is not used as a method for performing a comprehensive port scan, but is reserved for checking a short list of common ports.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [
              "Employ a robust network defense posture that includes an IDS/IPS system."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-302",
            "capec_name": "TCP FIN Scan",
            "capec_description": "An adversary uses a TCP FIN scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with the FIN bit set in the packet header. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow the adversary to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.",
            "capec_extended_description": "In addition to its relative speed in comparison with other types of scans, the major advantage a TCP FIN Scan is its ability to scan through stateless firewall or ACL filters. Such filters are configured to block access to ports usually by preventing SYN packets, thus stopping any attempt to 'build' a connection. FIN packets, like out-of-state ACK packets, tend to pass through such devices undetected. FIN scanning is still relatively stealthy as the packets tend to blend in with the background noise on a network link.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [
              "FIN scans are detected via heuristic (non-signature) based algorithms, much in the same way as other scan types are detected. An IDS/IPS system with heuristic algorithms is required to detect them."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-303",
            "capec_name": "TCP Xmas Scan",
            "capec_description": "An adversary uses a TCP XMAS scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with all possible flags set in the packet header, generating packets that are illegal based on RFC 793. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow an attacker to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.",
            "capec_extended_description": "In addition to its relative speed when compared with other types of scans, its major advantage is its ability to scan through stateless firewall or ACL filters. Such filters are configured to block access to ports usually by preventing SYN packets, thus stopping any attempt to 'build' a connection. XMAS packets, like out-of-state FIN or ACK packets, tend to pass through such devices undetected. Because open ports are inferred via no responses being generated, one cannot distinguish an open port from a filtered port without further analysis. For instance, XMAS scanning a system protected by a stateful firewall may indicate all ports being open. Because of their obvious rule-breaking nature, XMAS scans are flagged by almost all intrusion prevention or intrusion detection systems.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [
              "Employ a robust network defensive posture that includes a managed IDS/IPS."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-304",
            "capec_name": "TCP Null Scan",
            "capec_description": "An adversary uses a TCP NULL scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with no flags in the packet header, generating packets that are illegal based on RFC 793. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow an attacker to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.",
            "capec_extended_description": "In addition to being fast, the major advantage of this scan type is its ability to scan through stateless firewall or ACL filters. Such filters are configured to block access to ports usually by preventing SYN packets, thus stopping any attempt to 'build' a connection. NULL packets, like out-of-state FIN or ACK packets, tend to pass through such devices undetected. Additionally, because open ports are inferred via no responses being generated, one cannot distinguish an open port from a filtered port without further analysis. For instance, NULL scanning a system protected by a stateful firewall may indicate all ports being open. Because of their obvious rule-breaking nature, NULL scans are flagged by almost all intrusion prevention or intrusion detection systems.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [
              "Employ a robust network defensive posture that includes a managed IDS/IPS."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-305",
            "capec_name": "TCP ACK Scan",
            "capec_description": "An adversary uses TCP ACK segments to gather information about firewall or ACL configuration. The purpose of this type of scan is to discover information about filter configurations rather than port state. This type of scanning is rarely useful alone, but when combined with SYN scanning, gives a more complete picture of the type of firewall rules that are present.",
            "capec_extended_description": "When a TCP ACK segment is sent to a closed port, or sent out-of-sync to a listening port, the RFC 793 expected behavior is for the device to respond with a RST. Getting RSTs back in response to a ACK scan gives the attacker useful information that can be used to infer the type of firewall present. Stateful firewalls will discard out-of-sync ACK packets, leading to no response. When this occurs the port is marked as filtered. When RSTs are received in response, the ports are marked as unfiltered, as the ACK packets solicited the expected behavior from a port. When combined with SYN techniques an attacker can gain a more complete picture of which types of packets get through to a host and thereby map out its firewall rule-set. ACK scanning, when combined with SYN scanning, also allows the adversary to analyze whether a firewall is stateful or non-stateful (described in notes). TCP ACK Scans are somewhat faster and more stealthy than other types of scans but often requires rather sophisticated analysis by an experienced person. A skilled adversary may use this method to map out firewall rules, but the results of ACK scanning will be less useful to a novice.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-306",
            "capec_name": "TCP Window Scan",
            "capec_description": "An adversary engages in TCP Window scanning to analyze port status and operating system type. TCP Window scanning uses the ACK scanning method but examine the TCP Window Size field of response RST packets to make certain inferences. While TCP Window Scans are fast and relatively stealthy, they work against fewer TCP stack implementations than any other type of scan. Some operating systems return a positive TCP window size when a RST packet is sent from an open port, and a negative value when the RST originates from a closed port. TCP Window scanning is one of the most complex scan types, and its results are difficult to interpret. Window scanning alone rarely yields useful information, but when combined with other types of scanning is more useful. It is a generally more reliable means of making inference about operating system versions than port status.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-307",
            "capec_name": "TCP RPC Scan",
            "capec_description": "An adversary scans for RPC services listing on a Unix/Linux host.",
            "capec_extended_description": "This type of scan can be obtained via native operating system utilities or via port scanners like nmap. When performed by a scanner, an RPC datagram is sent to a list of UDP ports and the response is recorded. Particular types of responses can be indicative of well-known RPC services running on a UDP port. Discovering RPC services gives the adversary potential targets to attack, as some RPC services are insecure by default.\n\nDirect RPC scans that bypass portmapper/sunrpc are typically slow compare to other scan types, are easily detected by IPS/IDS systems, and can only detect open ports when an RPC service responds. ICMP diagnostic message responses can help identify closed ports, however filtered and unfiltered ports cannot be identified through TCP RPC scans. There are two general approaches to RPC scanning: One is to use a native operating system utility, or script, to query the portmapper/rpcbind application running on port 111. Portmapper will return a list of registered RPC services. Alternately, one can use a port scanner or script to scan for RPC services directly.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [
              "Typically, an IDS/IPS system is very effective against this type of attack."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-308",
            "capec_name": "UDP Scan",
            "capec_description": "An adversary engages in UDP scanning to gather information about UDP port status on the target system. UDP scanning methods involve sending a UDP datagram to the target port and looking for evidence that the port is closed. Open UDP ports usually do not respond to UDP datagrams as there is no stateful mechanism within the protocol that requires building or establishing a session. Responses to UDP datagrams are therefore application specific and cannot be relied upon as a method of detecting an open port. UDP scanning relies heavily upon ICMP diagnostic messages in order to determine the status of a remote port.",
            "capec_extended_description": "During a UDP scan, a datagram is sent to a target port. If an 'ICMP Type 3 Port unreachable' error message is returned then the port is considered closed. Different types of ICMP messages can indicate a filtered port. UDP scanning is slower than TCP scanning. The protocol characteristics of UDP make port scanning inherently more difficult than with TCP, as well as dependent upon ICMP for accurate scanning. Due to ambiguities that can arise between open ports and filtered ports, UDP scanning results often require a high degree of interpretation and further testing to refine. In general, UDP scanning results are less reliable or accurate than TCP-based scanning.",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [
              "Firewalls or ACLs which block egress ICMP error types effectively prevent UDP scans from returning any useful information.",
              "UDP scanning is complicated by rate limiting mechanisms governing ICMP error messages."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-309",
            "capec_name": "Network Topology Mapping",
            "capec_description": "An adversary engages in scanning activities to map network nodes, hosts, devices, and routes. Adversaries usually perform this type of network reconnaissance during the early stages of attack against an external network. Many types of scanning utilities are typically employed, including ICMP tools, network mappers, port scanners, and route testing utilities such as traceroute.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-310",
            "capec_name": "Scanning for Vulnerable Software",
            "capec_description": "An attacker engages in scanning activity to find vulnerable software versions or types, such as operating system versions or network services. Vulnerable or exploitable network configurations, such as improperly firewalled systems, or misconfigured systems in the DMZ or external network, provide windows of opportunity for an attacker. Common types of vulnerable software include unpatched operating systems or services (e.g FTP, Telnet, SMTP, SNMP) running on open ports that the attacker has identified. Attackers usually begin probing for vulnerable software once the external network has been port scanned and potential targets have been revealed.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-312",
            "capec_name": "Active OS Fingerprinting",
            "capec_description": "An adversary engages in activity to detect the operating system or firmware version of a remote target by interrogating a device, server, or platform with a probe designed to solicit behavior that will reveal information about the operating systems or firmware in the environment. Operating System detection is possible because implementations of common protocols (Such as IP or TCP) differ in distinct ways. While the implementation differences are not sufficient to 'break' compatibility with the protocol the differences are detectable because the target will respond in unique ways to specific probing activity that breaks the semantic or logical rules of packet construction for a protocol. Different operating systems will have a unique response to the anomalous input, providing the basis to fingerprint the OS behavior. This type of OS fingerprinting can distinguish between operating system types and versions.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-313",
            "capec_name": "Passive OS Fingerprinting",
            "capec_description": "An adversary engages in activity to detect the version or type of OS software in a an environment by passively monitoring communication between devices, nodes, or applications. Passive techniques for operating system detection send no actual probes to a target, but monitor network or client-server communication between nodes in order to identify operating systems based on observed behavior as compared to a database of known signatures or values. While passive OS fingerprinting is not usually as reliable as active methods, it is generally better able to evade detection.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-317",
            "capec_name": "IP ID Sequencing Probe",
            "capec_description": "This OS fingerprinting probe analyzes the IP 'ID' field sequence number generation algorithm of a remote host. Operating systems generate IP 'ID' numbers differently, allowing an attacker to identify the operating system of the host by examining how is assigns ID numbers when generating response packets. RFC 791 does not specify how ID numbers are chosen or their ranges, so ID sequence generation differs from implementation to implementation. There are two kinds of IP 'ID' sequence number analysis - IP 'ID' Sequencing: analyzing the IP 'ID' sequence generation algorithm for one protocol used by a host and Shared IP 'ID' Sequencing: analyzing the packet ordering via IP 'ID' values spanning multiple protocols, such as between ICMP and TCP.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-318",
            "capec_name": "IP 'ID' Echoed Byte-Order Probe",
            "capec_description": "This OS fingerprinting probe tests to determine if the remote host echoes back the IP 'ID' value from the probe packet. An attacker sends a UDP datagram with an arbitrary IP 'ID' value to a closed port on the remote host to observe the manner in which this bit is echoed back in the ICMP error message. The identification field (ID) is typically utilized for reassembling a fragmented packet. Some operating systems or router firmware reverse the bit order of the ID field when echoing the IP Header portion of the original datagram within an ICMP error message.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-319",
            "capec_name": "IP (DF) 'Don't Fragment Bit' Echoing Probe",
            "capec_description": "This OS fingerprinting probe tests to determine if the remote host echoes back the IP 'DF' (Don't Fragment) bit in a response packet. An attacker sends a UDP datagram with the DF bit set to a closed port on the remote host to observe whether the 'DF' bit is set in the response packet. Some operating systems will echo the bit in the ICMP error message while others will zero out the bit in the response packet.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-320",
            "capec_name": "TCP Timestamp Probe",
            "capec_description": "This OS fingerprinting probe examines the remote server's implementation of TCP timestamps. Not all operating systems implement timestamps within the TCP header, but when timestamps are used then this provides the attacker with a means to guess the operating system of the target. The attacker begins by probing any active TCP service in order to get response which contains a TCP timestamp. Different Operating systems update the timestamp value using different intervals. This type of analysis is most accurate when multiple timestamp responses are received and then analyzed. TCP timestamps can be found in the TCP Options field of the TCP header.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-321",
            "capec_name": "TCP Sequence Number Probe",
            "capec_description": "This OS fingerprinting probe tests the target system's assignment of TCP sequence numbers. One common way to test TCP Sequence Number generation is to send a probe packet to an open port on the target and then compare the how the Sequence Number generated by the target relates to the Acknowledgement Number in the probe packet. Different operating systems assign Sequence Numbers differently, so a fingerprint of the operating system can be obtained by categorizing the relationship between the acknowledgement number and sequence number as follows: 1) the Sequence Number generated by the target is Zero, 2) the Sequence Number generated by the target is the same as the acknowledgement number in the probe, 3) the Sequence Number generated by the target is the acknowledgement number plus one, or 4) the Sequence Number is any other non-zero number.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-322",
            "capec_name": "TCP (ISN) Greatest Common Divisor Probe",
            "capec_description": "This OS fingerprinting probe sends a number of TCP SYN packets to an open port of a remote machine. The Initial Sequence Number (ISN) in each of the SYN/ACK response packets is analyzed to determine the smallest number that the target host uses when incrementing sequence numbers. This information can be useful for identifying an operating system because particular operating systems and versions increment sequence numbers using different values. The result of the analysis is then compared against a database of OS behaviors to determine the OS type and/or version.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-323",
            "capec_name": "TCP (ISN) Counter Rate Probe",
            "capec_description": "This OS detection probe measures the average rate of initial sequence number increments during a period of time. Sequence numbers are incremented using a time-based algorithm and are susceptible to a timing analysis that can determine the number of increments per unit time. The result of this analysis is then compared against a database of operating systems and versions to determine likely operation system matches.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-324",
            "capec_name": "TCP (ISN) Sequence Predictability Probe",
            "capec_description": "This type of operating system probe attempts to determine an estimate for how predictable the sequence number generation algorithm is for a remote host. Statistical techniques, such as standard deviation, can be used to determine how predictable the sequence number generation is for a system. This result can then be compared to a database of operating system behaviors to determine a likely match for operating system and version.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-325",
            "capec_name": "TCP Congestion Control Flag (ECN) Probe",
            "capec_description": "This OS fingerprinting probe checks to see if the remote host supports explicit congestion notification (ECN) messaging. ECN messaging was designed to allow routers to notify a remote host when signal congestion problems are occurring. Explicit Congestion Notification messaging is defined by RFC 3168. Different operating systems and versions may or may not implement ECN notifications, or may respond uniquely to particular ECN flag types.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-326",
            "capec_name": "TCP Initial Window Size Probe",
            "capec_description": "This OS fingerprinting probe checks the initial TCP Window size. TCP stacks limit the range of sequence numbers allowable within a session to maintain the \"connected\" state within TCP protocol logic. The initial window size specifies a range of acceptable sequence numbers that will qualify as a response to an ACK packet within a session. Various operating systems use different Initial window sizes. The initial window size can be sampled by establishing an ordinary TCP connection.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-327",
            "capec_name": "TCP Options Probe",
            "capec_description": "This OS fingerprinting probe analyzes the type and order of any TCP header options present within a response segment. Most operating systems use unique ordering and different option sets when options are present. RFC 793 does not specify a required order when options are present, so different implementations use unique ways of ordering or structuring TCP options. TCP options can be generated by ordinary TCP traffic.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-328",
            "capec_name": "TCP 'RST' Flag Checksum Probe",
            "capec_description": "This OS fingerprinting probe performs a checksum on any ASCII data contained within the data portion or a RST packet. Some operating systems will report a human-readable text message in the payload of a 'RST' (reset) packet when specific types of connection errors occur. RFC 1122 allows text payloads within reset packets but not all operating systems or routers implement this functionality.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-329",
            "capec_name": "ICMP Error Message Quoting Probe",
            "capec_description": "An adversary uses a technique to generate an ICMP Error message (Port Unreachable, Destination Unreachable, Redirect, Source Quench, Time Exceeded, Parameter Problem) from a target and then analyze the amount of data returned or \"Quoted\" from the originating request that generated the ICMP error message.",
            "capec_extended_description": "For this purpose \"Port Unreachable\" error messages are often used, as generating them requires the adversary to send a UDP datagram to a closed port on the target. The goal of this analysis to make inferences about the type of operating system or firmware that sent the error message in reply.\n\nThis is useful for identifying unique characteristics of operating systems because the RFC-1122 expected behavior reads: \"Every ICMP error message includes the Internet header and at least the first 8 data octets of the datagram that triggered the error; more than 8 octets MAY be sent [...].\" This contrasts with RFC-792 expected behavior, which limited the quoted text to 64 bits (8 octets). Given the latitude in the specification the resulting RFC-1122 stack implementations often respond with a high degree of variability in the amount of data quoted in the error message because \"older\" or \"legacy\" stacks may comply with the RFC-792 specification, while other stacks may choose a longer format in accordance with RFC-1122. As a general rule most operating systems or firmware will quote the first 8 bytes of the datagram triggering the error, but some IP stacks will quote more than the first 8 bytes of data.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-330",
            "capec_name": "ICMP Error Message Echoing Integrity Probe",
            "capec_description": "An adversary uses a technique to generate an ICMP Error message (Port Unreachable, Destination Unreachable, Redirect, Source Quench, Time Exceeded, Parameter Problem) from a target and then analyze the integrity of data returned or \"Quoted\" from the originating request that generated the error message.",
            "capec_extended_description": "A tremendous amount of information about the host operating system can be deduced from its 'echoing' characteristics. Notably, inspection of key protocol header fields, including the echoed header fields of the encapsulating protocol can yield a wealth of data about the host operating system or firmware version.\n\nFor this purpose \"Port Unreachable\" error messages are often used, as generating them requires the adversary to send a UDP datagram to a closed port on the target. When replying with an ICMP error message some IP/ICMP stack implementations change aspects of the IP header, change or reverse certain byte orders, reset certain field values to default values which differ between operating system and firmware implementations, and make other changes. Some IP/ICMP stacks are decidedly broken, indicating an idiosyncratic behavior that differs from the RFC specifications, such as the case when miscalculations affect a field value.",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Low",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-472",
            "capec_name": "Browser Fingerprinting",
            "capec_description": "An attacker carefully crafts small snippets of Java Script to efficiently detect the type of browser the potential victim is using. Many web-based attacks need prior knowledge of the web browser including the version of browser to ensure successful exploitation of a vulnerability. Having this knowledge allows an attacker to target the victim with attacks that specifically exploit known or zero day weaknesses in the type and version of the browser used by the victim. Automating this process via Java Script as a part of the same delivery system used to exploit the browser is considered more efficient as the attacker can supply a browser fingerprinting method and integrate it with exploit code, all contained in Java Script and in response to the same web page request by the browser.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Low",
            "mitigations": [
              "Configuration: Disable Java Script in the browser"
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-497",
            "capec_name": "File Discovery",
            "capec_description": "An adversary engages in probing and exploration activities to determine if common key files exists. Such files often contain configuration and security parameters of the targeted application, system or network. Using this knowledge may often pave the way for more damaging attacks.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "Very Low",
            "mitigations": [
              "Leverage file protection mechanisms to render these files accessible only to authorized parties."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-508",
            "capec_name": "Shoulder Surfing",
            "capec_description": "In a shoulder surfing attack, an adversary observes an unaware individual's keystrokes, screen content, or conversations with the goal of obtaining sensitive information. One motive for this attack is to obtain sensitive information about the target for financial, personal, political, or other gains. From an insider threat perspective, an additional motive could be to obtain system/application credentials or cryptographic keys. Shoulder surfing attacks are accomplished by observing the content \"over the victim's shoulder\", as implied by the name of this attack.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Be mindful of your surroundings when discussing or viewing sensitive information in public areas.",
              "Pertaining to insider threats, ensure that sensitive information is not displayed to nor discussed around individuals without need-to-know access to said information."
            ],
            "related_cwe": ["CWE-200", "CWE-359"]
          },
          {
            "capec_id": "CAPEC-573",
            "capec_name": "Process Footprinting",
            "capec_description": "An adversary exploits functionality meant to identify information about the currently running processes on the target system to an authorized user. By knowing what processes are running on the target system, the adversary can learn about the target environment as a means towards further malicious behavior.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Low",
            "mitigations": [
              "Identify programs that may be used to acquire process information and block them by using a software restriction policy or tools that restrict program execution by using a process allowlist."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-574",
            "capec_name": "Services Footprinting",
            "capec_description": "An adversary exploits functionality meant to identify information about the services on the target system to an authorized user. By knowing what services are registered on the target system, the adversary can learn about the target environment as a means towards further malicious behavior. Depending on the operating system, commands that can obtain services information include \"sc\" and \"tasklist/svc\" using Tasklist, and \"net start\" using Net.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Low",
            "mitigations": [
              "Identify programs that may be used to acquire service information and block them by using a software restriction policy or tools that restrict program execution by uaing a process allowlist."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-575",
            "capec_name": "Account Footprinting",
            "capec_description": "An adversary exploits functionality meant to identify information about the domain accounts and their permissions on the target system to an authorized user. By knowing what accounts are registered on the target system, the adversary can inform further and more targeted malicious behavior. Example Windows commands which can acquire this information are: \"net user\" and \"dsquery\".",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Low",
            "mitigations": [
              "Identify programs that may be used to acquire account information and block them by using a software restriction policy or tools that restrict program execution by uysing a process allowlist."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-576",
            "capec_name": "Group Permission Footprinting",
            "capec_description": "An adversary exploits functionality meant to identify information about user groups and their permissions on the target system to an authorized user. By knowing what users/permissions are registered on the target system, the adversary can inform further and more targeted malicious behavior. An example Windows command which can list local groups is \"net localgroup\".",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Low",
            "mitigations": [
              "Identify programs (such as \"net\") that may be used to enumerate local group permissions and block them by using a software restriction Policy or tools that restrict program execution by using a process allowlist."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-577",
            "capec_name": "Owner Footprinting",
            "capec_description": "An adversary exploits functionality meant to identify information about the primary users on the target system to an authorized user. They may do this, for example, by reviewing logins or file modification times. By knowing what owners use the target system, the adversary can inform further and more targeted malicious behavior. An example Windows command that may accomplish this is \"dir /A ntuser.dat\". Which will display the last modified time of a user's ntuser.dat file when run within the root folder of a user. This time is synonymous with the last time that user was logged in.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Low",
            "mitigations": [
              "Ensure that proper permissions on files and folders are enacted to limit accessibility."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-59",
            "capec_name": "Session Credential Falsification through Prediction",
            "capec_description": "This attack targets predictable session ID in order to gain privileges. The attacker can predict the session ID used during a transaction to perform spoofing and session hijacking.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Use a strong source of randomness to generate a session ID.",
              "Use adequate length session IDs",
              "Do not use information available to the user in order to generate session ID (e.g., time).",
              "Ideas for creating random numbers are offered by Eastlake [RFC1750]",
              "Encrypt the session ID if you expose it to the user. For instance session ID can be stored in a cookie in encrypted format."
            ],
            "related_cwe": [
              "CWE-290",
              "CWE-330",
              "CWE-331",
              "CWE-346",
              "CWE-488",
              "CWE-539",
              "CWE-200",
              "CWE-6",
              "CWE-285",
              "CWE-384",
              "CWE-693"
            ]
          },
          {
            "capec_id": "CAPEC-60",
            "capec_name": "Reusing Session IDs (aka Session Replay)",
            "capec_description": "This attack targets the reuse of valid session ID to spoof the target system in order to gain privileges. The attacker tries to reuse a stolen session ID used previously during a transaction to perform spoofing and session hijacking. Another name for this type of attack is Session Replay.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Always invalidate a session ID after the user logout.",
              "Setup a session time out for the session IDs.",
              "Protect the communication between the client and server. For instance it is best practice to use SSL to mitigate adversary in the middle attacks (CAPEC-94).",
              "Do not code send session ID with GET method, otherwise the session ID will be copied to the URL. In general avoid writing session IDs in the URLs. URLs can get logged in log files, which are vulnerable to an attacker.",
              "Encrypt the session data associated with the session ID.",
              "Use multifactor authentication."
            ],
            "related_cwe": [
              "CWE-294",
              "CWE-290",
              "CWE-346",
              "CWE-384",
              "CWE-488",
              "CWE-539",
              "CWE-200",
              "CWE-285",
              "CWE-664",
              "CWE-732"
            ]
          },
          {
            "capec_id": "CAPEC-616",
            "capec_name": "Establish Rogue Location",
            "capec_description": "An adversary provides a malicious version of a resource at a location that is similar to the expected location of a legitimate resource. After establishing the rogue location, the adversary waits for a victim to visit the location and access the malicious resource.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Medium",
            "mitigations": [],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-643",
            "capec_name": "Identify Shared Files/Directories on System",
            "capec_description": "An adversary discovers connections between systems by exploiting the target system's standard practice of revealing them in searchable, common areas. Through the identification of shared folders/drives between systems, the adversary may further their goals of locating and collecting sensitive information/files, or map potential routes for lateral movement within the network.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Medium",
            "typical_severity": "Medium",
            "mitigations": [
              "Identify unnecessary system utilities or potentially malicious software that may contain functionality to identify network share information, and audit and/or block them by using allowlist tools."
            ],
            "related_cwe": ["CWE-267", "CWE-200"]
          },
          {
            "capec_id": "CAPEC-646",
            "capec_name": "Peripheral Footprinting",
            "capec_description": "Adversaries may attempt to obtain information about attached peripheral devices and components connected to a computer system. Examples may include discovering the presence of iOS devices by searching for backups, analyzing the Windows registry to determine what USB devices have been connected, or infecting a victim system with malware to report when a USB device has been connected. This may allow the adversary to gain additional insight about the system or network environment, which may be useful in constructing further attacks.",
            "capec_extended_description": "",
            "likelihood_of_attack": "Low",
            "typical_severity": "Medium",
            "mitigations": [
              "Identify programs that may be used to acquire peripheral information and block them by using a software restriction policy or tools that restrict program execution by using a process allowlist."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-651",
            "capec_name": "Eavesdropping",
            "capec_description": "An adversary intercepts a form of communication (e.g. text, audio, video) by way of software (e.g., microphone and audio recording application), hardware (e.g., recording equipment), or physical means (e.g., physical proximity). The goal of eavesdropping is typically to gain unauthorized access to sensitive information about the target for financial, personal, political, or other gains. Eavesdropping is different from a sniffing attack as it does not take place on a network-based communication channel (e.g., IP traffic). Instead, it entails listening in on the raw audio source of a conversation between two or more parties.",
            "capec_extended_description": "",
            "likelihood_of_attack": "",
            "typical_severity": "Medium",
            "mitigations": [
              "Be mindful of your surroundings when discussing sensitive information in public areas.",
              "Implement proper software restriction policies to only allow authorized software on your environment. Use of anti-virus and other security monitoring and detecting tools can aid in this too. Closely monitor installed software for unusual behavior or activity, and implement patches as soon as they become available.",
              "If possible, physically disable the microphone on your machine if it is not needed."
            ],
            "related_cwe": ["CWE-200"]
          },
          {
            "capec_id": "CAPEC-79",
            "capec_name": "Using Slashes in Alternate Encoding",
            "capec_description": "This attack targets the encoding of the Slash characters. An adversary would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the adversary many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other.",
            "capec_extended_description": "",
            "likelihood_of_attack": "High",
            "typical_severity": "High",
            "mitigations": [
              "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL.",
              "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.",
              "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)",
              "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)",
              "Test your path decoding process against malicious input.",
              "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.",
              "Assume all input is malicious. Create an allowlist that defines all valid input to the application based on the requirements specifications. Input that does not match against the allowlist should not be permitted to enter into the system."
            ],
            "related_cwe": [
              "CWE-173",
              "CWE-180",
              "CWE-181",
              "CWE-20",
              "CWE-74",
              "CWE-73",
              "CWE-22",
              "CWE-185",
              "CWE-200",
              "CWE-697",
              "CWE-707"
            ]
          }
        ]
      }
    ]
  },
  {
    "cve_id": "CVE-2022-22265",
    "cve_name": "",
    "cve_description": "An improper check or handling of exceptional conditions in NPU driver prior to SMR Jan-2022 Release 1 allows arbitrary memory write and code execution.",
    "cve_category": [],
    "cve_published_at": "Published 2022-01-10 14:12:36",
    "cve_updated_at": "Updated 2023-06-27 19:03:50",
    "cve_required_action": "",
    "cvss": {
      "base_score": "4.6",
      "base_severity": "MEDIUM",
      "cvss_vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P",
      "exploitability_score": "3.9",
      "impact_score": "6.4",
      "source": "nvd@nist.gov"
    },
    "cpe": [
      {
        "version": "Google » Android » Version: 9.0 ",
        "detail": "cpe:2.3:o:google:android:9.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Google » Android » Version: 10.0 ",
        "detail": "cpe:2.3:o:google:android:10.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Google » Android » Version: 11.0 ",
        "detail": "cpe:2.3:o:google:android:11.0:*:*:*:*:*:*:*"
      },
      {
        "version": "Google » Android » Version: 12.0 ",
        "detail": "cpe:2.3:o:google:android:12.0:*:*:*:*:*:*:*"
      }
    ],
    "cwe": [
      {
        "cwe_id": "CWE-703",
        "cwe_name": "Improper Check or Handling of Exceptional Conditions",
        "cwe_description": "The product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2022-22224",
            "name": "CVE-2022-22224",
            "des": "Chain: an operating system does not properly process malformed Open Shortest Path First (OSPF) Type/Length/Value Identifiers (TLV) (CWE-703), which can cause the process to enter an infinite loop (CWE-835)"
          }
        ],
        "potential_mitigations": [],
        "detection_methods": [
          {
            "subheading": "Dynamic Analysis with Manual Results Interpretation",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Manual Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          },
          {
            "subheading": "Automated Static Analysis - Source Code",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: SOAR Partial"
            ]
          },
          {
            "subheading": "Architecture or Design Review",
            "des": [
              "According to SOAR, the following detection techniques may be useful:",
              "Effectiveness: High"
            ]
          }
        ],
        "capec": []
      },
      {
        "cwe_id": "CWE-755",
        "cwe_name": "Improper Handling of Exceptional Conditions",
        "cwe_description": "The product does not handle or incorrectly handles an exceptional condition.",
        "cwe_extended_description": "",
        "observed_example": [
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2021-3011",
            "name": "CVE-2021-3011",
            "des": "virtual interrupt controller in a virtualization product allows crash of host by writing a certain invalid value to a register, which triggers a fatal error instead of returning an error code"
          },
          {
            "link": "https://www.cve.org/CVERecord?id=CVE-2008-4302",
            "name": "CVE-2008-4302",
            "des": "Chain: OS kernel does not properly handle a failure of a function call (CWE-755), leading to an unlock of a resource that was not locked (CWE-832), with resultant crash."
          }
        ],
        "potential_mitigations": [],
        "detection_methods": [],
        "capec": []
      }
    ]
  }
]
